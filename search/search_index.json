{"config":{"indexing":"full","lang":["zh"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u6b22\u8fce\u8bbf\u95ee\u65b0\u7586\u5927\u5b66\u98d3\u98ce\u6218\u961f\u6280\u672f\u6587\u6863\u7ad9 \u8fd9\u91cc\u4f1a\u5305\u62ec\u7535\u63a7\u3001\u7535\u8def\u3001\u89c6\u89c9\u3001\u673a\u68b0\u7b49\u8d44\u6599\uff0c\u4e0d\u65ad\u66f4\u65b0\u4e2d\u2026\u2026 \u7535\u63a7 STM32\u5f00\u53d1\u6280\u672f\u6307\u5357 2024\u6691\u671f\u5b66\u4e60","title":"HomePage"},{"location":"#_1","text":"\u8fd9\u91cc\u4f1a\u5305\u62ec\u7535\u63a7\u3001\u7535\u8def\u3001\u89c6\u89c9\u3001\u673a\u68b0\u7b49\u8d44\u6599\uff0c\u4e0d\u65ad\u66f4\u65b0\u4e2d\u2026\u2026","title":"\u6b22\u8fce\u8bbf\u95ee\u65b0\u7586\u5927\u5b66\u98d3\u98ce\u6218\u961f\u6280\u672f\u6587\u6863\u7ad9"},{"location":"#_2","text":"STM32\u5f00\u53d1\u6280\u672f\u6307\u5357 2024\u6691\u671f\u5b66\u4e60","title":"\u7535\u63a7"},{"location":"2024Summer/","text":"2024 \u6691\u671f\u5b66\u4e60 \u7ea2\u8272\u4ee3\u8868\u5728\u6691\u5047\u5fc5\u987b\u638c\u63e1\uff0c\u7eff\u8272\u4ee3\u8868\u53ef\u4ee5\u5230\u5b66\u6821\u518d\u5b66\uff0c\u84dd\u8272\u4ee3\u8868\u53ef\u4ee5\u4e0d\u5b66 \u57fa\u7840\u77e5\u8bc6\uff08\u53ef\u80fd\u4f1a\u6bd4\u8f83\u96be\uff0c\u4f46\u662f\u8981\u4f1a\uff0c\u8981\u4e0d\u7136\u6709\u4e9b\u4ee3\u7801\u4f60\u6839\u672c\u4e0d\u77e5\u9053\u4ed6\u662f\u600e\u4e48\u5b9e\u73b0\u7684\u3002Frank\u7684C\u8bed\u8a00\u8bfe\u57fa\u672c\u90fd\u6709\u3002\u53ef\u80fd\u6691\u5047\u5b66\u4e0d\u5b8c\u3002\u5927\u6982\u5217\u4e00\u4e0b\uff0c\u5b9e\u9645\u8981\u5b66\u7684\u8981\u6bd4\u8fd9\u591a\uff09 \u4f4d\u64cd\u4f5c(\u4e0e\u6216\u975e\uff0c\u5199\u5165\u4f4d\u4e0e\u8bfb\u51fa\u4f4d) \u536b\u8bed\u53e5 C\u5e93\u51fd\u6570(\u5982 (f)(s)(v)scanf, (f)(s)(v)printf,atoi,strcat,strtol ) \u7ed3\u6784\u4f53\u4e0e\u6307\u9488 \u6808\u5185\u5b58\u4e0e\u5806\u5185\u5b58 \u679a\u4e3e\u4e0e\u72b6\u6001\u673a \u6570\u7ec4\u4e0e\u8868\u9a71\u52a8 \u51fd\u6570\u6307\u9488\u4e0e\u56de\u8c03\u51fd\u6570\uff0c\u4e8b\u4ef6\u5904\u7406\u6846\u67b6 void* \u4e0e\u6cdb\u578b\u7f16\u7a0b \u89c4\u5219\u5f15\u64ce\u8bbe\u8ba1(\u89c4\u5219\u6620\u5c04) \u53ef\u53d8\u53c2\u6570 \u5916\u8bbe GPIO ADC, DAC I2C, SPI Timer CAN (\u5fc5\u987b\u719f\u7ec3\uff0c\u8981\u4e0d\u7136\u4e0d\u4f1a\u5199\u7535\u673a\u9a71\u52a8) USART + DMA (\u5982\u4f55\u4fdd\u8bc1\u4e32\u53e3\u901a\u4fe1\u7684\u53ef\u9760\u6027) \u5d4c\u5165\u5f0f\u7ec4\u4ef6 FreeRTOS \u5176\u4ed6RTOS(\u638c\u63e1\u64cd\u4f5c\u7cfb\u7edf\u6838\u5fc3\u539f\u7406\u540e\u4f1a\u53d1\u73b0\u5176\u5b9e\u90fd\u5927\u540c\u5c0f\u5f02) \u4e32\u53e3Debug(\u6b63\u70b9\u539f\u5b50\u7684USMART\uff0c\u5148\u5927\u6982\u5b66\u4e00\u4e0b\uff0c\u6211\u6253\u7b97\u57fa\u4e8e\u8fd9\u4e2a\u5347\u7ea7\u4e00\u4e0b) \u7b97\u6cd5\uff08\u5b66\u4e60\u4e00\u4e0b\u539f\u7406\uff0c\u4e0d\u8981\u6c42\u5199\u4ee3\u7801\uff09 \u5168\u5411\u8f6e\u5e95\u76d8 \u9ea6\u8f6e\u5e95\u76d8 \u8235\u8f6e\u5e95\u76d8 \u673a\u68b0\u81c2 \u5f00\u53d1\u5de5\u5177\u4e0e\u73af\u5883 Git VSCode CMSIS + Keil MDK v6 + RTE(\u4e3b\u8981\u6211\u8fd8\u6ca1\u7814\u7a76\u5b8c) \u5de5\u5177\u94fe(\u5f04\u61c2\u8fd9\u4e2a\u53ef\u4ee5\u4e0d\u4f9d\u8d56\u4efb\u4f55IDE) STM32\u6df1\u5165\uff08\u5e73\u65f6\u7ffb\u7740\u624b\u518c\u5b66\u4e00\u4e0b\uff0c\u5982\u679c\u9047\u5230\u6bd4\u8f83\u96be\u7684\u82b1\u70b9\u65f6\u95f4\u641e\u61c2\u5c31\u884c\u3002\u4e0d\u8981\u7528\u5927\u91cf\u7684\u65f6\u95f4\u4ece\u5934\u770b\u5230\u5c3e\uff0c\u6ca1\u610f\u4e49\uff0c\u5b66\u5b8c\u5c31\u5fd8\u3002\uff09 STM32\u5730\u5740\u6620\u5c04(\u5927\u6982\u4e86\u89e3) ST HAL+LL\u5e93\u7684\u914d\u7f6e\u548c\u67b6\u6784(\u7b80\u5355\u4e86\u89e3) \u8c03\u8bd5\u5668\u7684\u4e00\u4e9b\u7ec4\u4ef6\u4f7f\u7528(ITM, Eventer Recoder\u7b49) STM32\u5916\u8bbe\u5bc4\u5b58\u5668 ARM Cortex\u5185\u6838\u4e0e\u5bc4\u5b58\u5668 STM32\u65f6\u949f\u6811 \u4e0b\u9762\u662f\u6211\u89c9\u5f97\u6bd4\u8f83\u6709\u610f\u601d\u7684\u4e1c\u897f\uff0c\u4e0d\u8981\u6c42\u5b66\uff0c\u81ea\u5df1\u6ca1\u4e8b\u53ef\u4ee5\u73a9\u4e00\u4e0b\uff0c\u6bd4\u5982\u505a\u4e2aMP3\uff0cMP4\uff0cUSB\u58f0\u5361\uff0c\u7535\u5b50\u4e66\uff0c\u667a\u80fd\u5bb6\u5c45\uff08\u7528\u624b\u673a\u5f00\u5173\u706f\uff09\u3002\u3002\u3002 USB GUI\uff0c\u5982LVGL(\u5b66\u4e60\u6210\u672c\u53ef\u80fd\u4f1a\u6bd4\u8f83\u9ad8) F(S)MC + SRAM + LCD + NAND Flash (\u5982\u679c\u4f7f\u7528GUI\uff0c\u5efa\u8bae\u5b66\u4e00\u4e0b) \u4ee5\u592a\u7f51 \u6587\u4ef6\u7cfb\u7edf ...","title":"2024 \u6691\u671f\u5b66\u4e60"},{"location":"2024Summer/#2024","text":"\u7ea2\u8272\u4ee3\u8868\u5728\u6691\u5047\u5fc5\u987b\u638c\u63e1\uff0c\u7eff\u8272\u4ee3\u8868\u53ef\u4ee5\u5230\u5b66\u6821\u518d\u5b66\uff0c\u84dd\u8272\u4ee3\u8868\u53ef\u4ee5\u4e0d\u5b66","title":"2024 \u6691\u671f\u5b66\u4e60"},{"location":"2024Summer/#frankc","text":"\u4f4d\u64cd\u4f5c(\u4e0e\u6216\u975e\uff0c\u5199\u5165\u4f4d\u4e0e\u8bfb\u51fa\u4f4d) \u536b\u8bed\u53e5 C\u5e93\u51fd\u6570(\u5982 (f)(s)(v)scanf, (f)(s)(v)printf,atoi,strcat,strtol ) \u7ed3\u6784\u4f53\u4e0e\u6307\u9488 \u6808\u5185\u5b58\u4e0e\u5806\u5185\u5b58 \u679a\u4e3e\u4e0e\u72b6\u6001\u673a \u6570\u7ec4\u4e0e\u8868\u9a71\u52a8 \u51fd\u6570\u6307\u9488\u4e0e\u56de\u8c03\u51fd\u6570\uff0c\u4e8b\u4ef6\u5904\u7406\u6846\u67b6 void* \u4e0e\u6cdb\u578b\u7f16\u7a0b \u89c4\u5219\u5f15\u64ce\u8bbe\u8ba1(\u89c4\u5219\u6620\u5c04) \u53ef\u53d8\u53c2\u6570","title":"\u57fa\u7840\u77e5\u8bc6\uff08\u53ef\u80fd\u4f1a\u6bd4\u8f83\u96be\uff0c\u4f46\u662f\u8981\u4f1a\uff0c\u8981\u4e0d\u7136\u6709\u4e9b\u4ee3\u7801\u4f60\u6839\u672c\u4e0d\u77e5\u9053\u4ed6\u662f\u600e\u4e48\u5b9e\u73b0\u7684\u3002Frank\u7684C\u8bed\u8a00\u8bfe\u57fa\u672c\u90fd\u6709\u3002\u53ef\u80fd\u6691\u5047\u5b66\u4e0d\u5b8c\u3002\u5927\u6982\u5217\u4e00\u4e0b\uff0c\u5b9e\u9645\u8981\u5b66\u7684\u8981\u6bd4\u8fd9\u591a\uff09"},{"location":"2024Summer/#_1","text":"GPIO ADC, DAC I2C, SPI Timer CAN (\u5fc5\u987b\u719f\u7ec3\uff0c\u8981\u4e0d\u7136\u4e0d\u4f1a\u5199\u7535\u673a\u9a71\u52a8) USART + DMA (\u5982\u4f55\u4fdd\u8bc1\u4e32\u53e3\u901a\u4fe1\u7684\u53ef\u9760\u6027)","title":"\u5916\u8bbe"},{"location":"2024Summer/#_2","text":"FreeRTOS \u5176\u4ed6RTOS(\u638c\u63e1\u64cd\u4f5c\u7cfb\u7edf\u6838\u5fc3\u539f\u7406\u540e\u4f1a\u53d1\u73b0\u5176\u5b9e\u90fd\u5927\u540c\u5c0f\u5f02) \u4e32\u53e3Debug(\u6b63\u70b9\u539f\u5b50\u7684USMART\uff0c\u5148\u5927\u6982\u5b66\u4e00\u4e0b\uff0c\u6211\u6253\u7b97\u57fa\u4e8e\u8fd9\u4e2a\u5347\u7ea7\u4e00\u4e0b)","title":"\u5d4c\u5165\u5f0f\u7ec4\u4ef6"},{"location":"2024Summer/#_3","text":"\u5168\u5411\u8f6e\u5e95\u76d8 \u9ea6\u8f6e\u5e95\u76d8 \u8235\u8f6e\u5e95\u76d8 \u673a\u68b0\u81c2","title":"\u7b97\u6cd5\uff08\u5b66\u4e60\u4e00\u4e0b\u539f\u7406\uff0c\u4e0d\u8981\u6c42\u5199\u4ee3\u7801\uff09"},{"location":"2024Summer/#_4","text":"Git VSCode CMSIS + Keil MDK v6 + RTE(\u4e3b\u8981\u6211\u8fd8\u6ca1\u7814\u7a76\u5b8c) \u5de5\u5177\u94fe(\u5f04\u61c2\u8fd9\u4e2a\u53ef\u4ee5\u4e0d\u4f9d\u8d56\u4efb\u4f55IDE)","title":"\u5f00\u53d1\u5de5\u5177\u4e0e\u73af\u5883"},{"location":"2024Summer/#stm32","text":"STM32\u5730\u5740\u6620\u5c04(\u5927\u6982\u4e86\u89e3) ST HAL+LL\u5e93\u7684\u914d\u7f6e\u548c\u67b6\u6784(\u7b80\u5355\u4e86\u89e3) \u8c03\u8bd5\u5668\u7684\u4e00\u4e9b\u7ec4\u4ef6\u4f7f\u7528(ITM, Eventer Recoder\u7b49) STM32\u5916\u8bbe\u5bc4\u5b58\u5668 ARM Cortex\u5185\u6838\u4e0e\u5bc4\u5b58\u5668 STM32\u65f6\u949f\u6811","title":"STM32\u6df1\u5165\uff08\u5e73\u65f6\u7ffb\u7740\u624b\u518c\u5b66\u4e00\u4e0b\uff0c\u5982\u679c\u9047\u5230\u6bd4\u8f83\u96be\u7684\u82b1\u70b9\u65f6\u95f4\u641e\u61c2\u5c31\u884c\u3002\u4e0d\u8981\u7528\u5927\u91cf\u7684\u65f6\u95f4\u4ece\u5934\u770b\u5230\u5c3e\uff0c\u6ca1\u610f\u4e49\uff0c\u5b66\u5b8c\u5c31\u5fd8\u3002\uff09"},{"location":"2024Summer/#mp3mp4usb","text":"USB GUI\uff0c\u5982LVGL(\u5b66\u4e60\u6210\u672c\u53ef\u80fd\u4f1a\u6bd4\u8f83\u9ad8) F(S)MC + SRAM + LCD + NAND Flash (\u5982\u679c\u4f7f\u7528GUI\uff0c\u5efa\u8bae\u5b66\u4e00\u4e0b) \u4ee5\u592a\u7f51 \u6587\u4ef6\u7cfb\u7edf ...","title":"\u4e0b\u9762\u662f\u6211\u89c9\u5f97\u6bd4\u8f83\u6709\u610f\u601d\u7684\u4e1c\u897f\uff0c\u4e0d\u8981\u6c42\u5b66\uff0c\u81ea\u5df1\u6ca1\u4e8b\u53ef\u4ee5\u73a9\u4e00\u4e0b\uff0c\u6bd4\u5982\u505a\u4e2aMP3\uff0cMP4\uff0cUSB\u58f0\u5361\uff0c\u7535\u5b50\u4e66\uff0c\u667a\u80fd\u5bb6\u5c45\uff08\u7528\u624b\u673a\u5f00\u5173\u706f\uff09\u3002\u3002\u3002"},{"location":"STM32/","text":"STM32\u5f00\u53d1\u6280\u672f\u6307\u5357 \u5185\u5bb9\u8f83\u4e3a\u8fc7\u65f6\uff0c\u9700\u8981\u66f4\u65b0 \u53c2\u7167\uff1a\u91ce\u706b\u3001\u6b63\u70b9\u539f\u5b50\u3001ST\u5b98\u7f51\u3001ARM\u5b98\u7f51\u7b49 \u76f8\u5173\u6587\u4ef6\u4e0b\u8f7d\uff1ahttps://www.123pan.com/s/bcEUVv-yvyOh.html EIDE\u914d\u7f6e\u53c2\u8003\uff1ahttps://em-ide.com/docs/intro/ \u6a21\u677f\u4e0b\u8f7d\uff1ahttps://github.com/XJU-Hurricane/STM32_Template C\u8bed\u8a00\u57fa\u7840 C\u7f16\u7801\u6807\u51c6 Clang-format\u914d\u7f6e STM32\u5916\u8bbe\u7b80\u4ecb ARM\u5de5\u5177\u94fe HAL+LL\u5e93\u7b80\u4ecb \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b Git","title":"STM32\u5f00\u53d1\u6280\u672f\u6307\u5357"},{"location":"STM32/#stm32","text":"\u5185\u5bb9\u8f83\u4e3a\u8fc7\u65f6\uff0c\u9700\u8981\u66f4\u65b0 \u53c2\u7167\uff1a\u91ce\u706b\u3001\u6b63\u70b9\u539f\u5b50\u3001ST\u5b98\u7f51\u3001ARM\u5b98\u7f51\u7b49 \u76f8\u5173\u6587\u4ef6\u4e0b\u8f7d\uff1ahttps://www.123pan.com/s/bcEUVv-yvyOh.html EIDE\u914d\u7f6e\u53c2\u8003\uff1ahttps://em-ide.com/docs/intro/ \u6a21\u677f\u4e0b\u8f7d\uff1ahttps://github.com/XJU-Hurricane/STM32_Template C\u8bed\u8a00\u57fa\u7840 C\u7f16\u7801\u6807\u51c6 Clang-format\u914d\u7f6e STM32\u5916\u8bbe\u7b80\u4ecb ARM\u5de5\u5177\u94fe HAL+LL\u5e93\u7b80\u4ecb \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b Git","title":"STM32\u5f00\u53d1\u6280\u672f\u6307\u5357"},{"location":"STM32/C_basic/","text":"\u6700\u540aC\u8bed\u8a00\u6559\u7a0b\uff0c\u6ca1\u6709\u4e4b\u4e00\uff0c\u770b\u5b8c\u4fdd\u8bc1\u601d\u7ef4\u4e0a\u5347\u5230\u4e00\u4e2a\u65b0\u5c42\u6b21\uff1ahttps://www.bilibili.com/video/av238869905/ \u4fdd\u8bc1\u7f16\u8bd1\u6807\u51c6\u5728C99\u4ee5\u4e0a\uff0cC89\u5df2\u7ecf\u7b97\u8fc7\u65f6\u4e86\uff0c\u50cf\u4e0b\u9762\u8bf4\u7684 stdint, stdbool \u90fd\u662fC99\u63d0\u51fa\u7684\u6807\u51c6\u3002\u73b0\u5728\u5f00\u53d1\u591a\u7528C99\u6807\u51c6\u3002 GNU C Reference: https://www.gnu.org/software/gnu-c-manual/gnu-c-manual.html ISO C99: https://www.open-std.org/jtc1/sc22/wg14/www/docs/n1256.pdf \u53d8\u91cf \u6574\u6570 \u5b9a\u4e49\u6574\u6570 \u4e00\u5f8b\u4f7f\u7528 stdint.h \u4e2d\u5b9a\u4e49\u7684\u7c7b\u578b \u3002\u5373 uint8_t, uint16_t, uint32_t \u3002 \u4e0d\u8981\u4f7f\u7528\u77ed\u547d\u540d u8\u3001u16\u3001u32 \uff08\u6b63\u70b9\u539f\u5b50\u5df2\u7ecf\u629b\u5f03\u8fd9\u79cd\u547d\u540d\uff09 \u3002\u4e0d\u8981\u4f7f\u7528 int, long, long long \u8fd9\u79cd\u547d\u540d\uff0c\u8fd9\u79cd\u547d\u540d \u65e0\u6cd5\u51c6\u786e\u5f97\u77e5\u7f16\u8bd1\u5668\u5206\u914d\u7684\u53d8\u91cf\u5927\u5c0f\uff0c\u5bb9\u6613\u9020\u6210\u6ea2\u51fa\uff0c \u800c\u4e1416\u4f4d\u300132\u4f4d\u300164\u4f4d\u7684 int , long \u957f\u5ea6\u4e0d\u5b8c\u5168\u4e00\u6837\u3002\u4e0b\u9762\u662f\u53d8\u91cf\u8303\u56f4\u7684\u53c2\u8003\uff1a \u547d\u540d | \u542b\u4e49 | \u8303\u56f4 ---------|--------------------|----------------------------------------------------------------------------- uint8_t | \u65e0\u7b26\u53f7\u4e00\u5b57\u8282(8\u4f4d) | 0 ~ 255 (0 ~ 2^8-1) uint16_t | \u65e0\u7b26\u53f7\u4e24\u5b57\u8282(16\u4f4d) | 0 ~ 65,535 (0 ~ 2^16-1) uint32_t | \u65e0\u7b26\u53f7\u56db\u5b57\u8282(32\u4f4d) | 0 ~ 4,294,967,295 (0 ~ 2^32-1) uint64_t | \u65e0\u7b26\u53f7\u516b\u5b57\u8282(64\u4f4d) | 0 ~ 18,446,744,073,709,551,616 (0 ~ 2^64-1) int8_t | \u6709\u7b26\u53f7\u4e00\u5b57\u8282(8\u4f4d) | -128 ~ +127 (-2^7 ~ 2^7-1) int16_t | \u6709\u7b26\u53f7\u4e24\u5b57\u8282(16\u4f4d) | -32,768 ~ -32,767 (-2^15 ~ 2^15-1) int32_t | \u6709\u7b26\u53f7\u56db\u5b57\u8282(32\u4f4d) | -2,147,483,648 ~ 2,147,483,647 (-2^31 ~ 2^31-1) int64_t | \u6709\u7b26\u53f7\u516b\u5b57\u8282(64\u4f4d) | -9,223,372,036,854,775,808 ~ 9,223,372,036,854,775,807 (-2^63 ~ 2^63-1) \u6211\u4eec\u5728\u4e00\u4e2a\u65b0\u6587\u4ef6\u5199\u4ee3\u7801\u65f6\u53ea\u9700\u8981 #include \"sys.h\" \u5373\u53ef\uff0c\u8fd9\u91cc\u9762\u5c31\u5305\u542b\u4e86 stdint \u7684\u7c7b\u578b\uff08\u9664\u4e86 int64_t, uint64_t \uff09\u3002\u4e0d\u9700\u8981\u518d #include \"stdint.h\" stdint.h \u4e2d\u7684\u4e0a\u8ff0\u51e0\u79cd\u7c7b\u578b\u53eb\u505a\u56fa\u5b9a\u5bbd\u5ea6\u7c7b\u578b\uff0c\u9664\u6b64\u4e4b\u5916\u8fd8\u6709 LEAST, FAST \u7c7b\u578b\u7684\u53d8\u91cf\u3002 LEAST \u6307\u7684\u662f\u7f16\u8bd1\u5668\u81f3\u5c11\u5206\u914d\u7684\u5185\u5b58\u7684\u5927\u5c0f\u3002\u6bd4\u5982\u5b9a\u4e49\u4e00\u4e2a int_least16_t \u7684\u53d8\u91cf\uff0c\u6307\u7684\u662f\u81f3\u5c11\u8981\u5206\u914d2\u5b57\u8282\u7684\u7a7a\u95f4\u7ed9\u8fd9\u4e2a\u53d8\u91cf\uff0c\u7f16\u8bd1\u5668\u4f1a\u6839\u636e\u60c5\u51b5\u66f4\u6539\u8fd9\u4e2a\u53d8\u91cf\u7684\u7a7a\u95f4\uff0c\u4f46\u4e0d\u4f1a\u5c0f\u4e8e2\u5b57\u8282\u3002 FAST \u662f\u6307\u5feb\u7684\u8fd0\u884c\u901f\u5ea6\u3002\u7f16\u8bd1\u5668\u4f1a\u6839\u636e\u5904\u7406\u5668\u5e73\u53f0\u5bf9\u53d8\u91cf\u9488\u5bf9\u6027\u7684\u505a\u901f\u5ea6\u4f18\u5316\u3002\u6bd4\u5982\u5b9a\u4e49\u4e00\u4e2a int_fast8_t \u7684\u53d8\u91cf\uff0c\u5982\u679c32\u4f4d\u6574\u6570\u8fd0\u7b97\u66f4\u5feb\uff0c\u90a3\u4e48\u7f16\u8bd1\u5668\u4f1a\u628a\u8fd9\u4e2a\u53d8\u91cf\u76f4\u63a5\u5206\u914d4\u5b57\u8282\u7684\u7a7a\u95f4\u3002\u5176\u4ed6\u4f4d\u6570\u7684\u7c7b\u4f3c\uff0c\u5177\u4f53\u53ef\u4ee5\u770b\u770b stdint.h \u4e2d\u7684\u5b9a\u4e49\u3002 \u5bf9\u4e8e\u4e00\u4e2a\u4f7f\u7528 stdint \u4e2d\u7684\u7c7b\u578b\u5b9a\u4e49\u7684\u6574\u6570 \uff0c\u4f7f\u7528\u683c\u5f0f\u63a7\u5236\u7b26\uff08\u4e5f\u5c31\u662f printf, sprintf, scanf \u4e2d\u7684 %d, %ld \uff09\u8f93\u51fa\u6574\u6570\u65f6\uff0c\u4f01\u4e1a\u4e00\u822c\u4f7f\u7528 inttypes.h \u4e2d\u7684\u683c\u5f0f\u63a7\u5236\u7b26\uff0c\u4e0d\u4f7f\u7528 %d \u63a7\u5236\u7b26\u3002\u4e0b\u9762\u662fLLVM\u9879\u76ee\u7684\u4ee3\u7801\uff0c\u53ef\u4ee5\u770b\u5230\u8f93\u51fa\u4f7f\u7528\u7684\u662f inttypes.h \u7684\u7c7b\u578b\uff0c\u800c\u4e0d\u662f %d, %lld \u3002 \u5bf9\u4e8e\u4e00\u4e2a int32_t \u7684\u6570\u5b57\uff0c\u5982\u679c\u4f7f\u7528\u666e\u901a\u65b9\u6cd5\u8f93\u51fa\u5c31\u5199\u6210 printf(\"num = %d\\n\", num); \uff1b\u5982\u679c\u662f\u5176\u4ed6\u7c7b\u578b\uff0c\u6bd4\u5982 int8_t, uint16_t, uint8_t \uff0c\u4ec5\u5355\u7eaf\u4ece %d, %hu, %hhu \uff08\u4f30\u8ba1\u4f60\u4eec\u90fd\u6ca1\u89c1\u8fc7 %h \uff09\u8fd9\u79cd\u51e0\u4e2a\u5b57\u6bcd\u7684\u63a7\u5236\u7b26\u6765\u5224\u65ad\u6574\u6570\u7c7b\u578b\u5c31\u663e\u5f97\u5f88\u9ebb\u70e6\u3002\u56e0\u6b64\u4e0a\u9762\u7684\u8f93\u51fa\u53ef\u4ee5\u5199\u6210 printf(\"num = %\" PRId32 \"\\n\", num); \u4e5f\u5c31\u662f\u628a % \u540e\u9762\u7684 d \u6362\u6210 PRIxxx \uff08\u6ce8\u610f\u5f15\u53f7\uff0c\u540e\u9762\u7684 PRId32 \u4e0d\u80fd\u518d\u5f15\u53f7\u91cc\u9762\uff0c\u5426\u5219\u5c31\u6210\u4e86\u5b57\u7b26\u4e32\uff0c\u524d\u9762\u5b57\u7b26\u4e32\u7684 % \u4e0d\u80fd\u4e22\uff09\u3002\u5bf9\u4e8e scanf \uff0c\u5bf9\u5e94\u7684\u5c31\u662f SCNxxx \u3002\u5176\u5b9e PRIxxx \u548c SCNxxx \u5728\u4ee3\u7801\u91cc\u662f\u5b8c\u5168\u7b49\u4ef7\u7684\uff0c\u53ea\u4e0d\u8fc7\u4e3a\u4e86\u533a\u5206\u5199\u6210\u8fd9\u6837\u3002 PRI/SCN \u540e\u7b2c\u4e00\u4e2a\u5b57\u6bcd\uff0c u \u5bf9\u5e94\u65e0\u7b26\u53f7\uff0c d \u5bf9\u5e94\u6709\u7b26\u53f7\uff0c x \u5bf9\u5e94\u5341\u516d\u8fdb\u5236\uff08\u6709\u7b26\u53f7\u8d1f\u6570\u5c31\u8f93\u51fa\u8865\u7801\uff09\uff1b\u63a5\u4e0b\u6765\u5982\u679c\u662f fast, least \u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u540e\u9762\u8ddf FAST, LEAST \uff0c\u5982\u679c\u4e0d\u662f\u5c31\u6ca1\u6709\uff1b\u6700\u540e\u8ddf\u4e0a\u53d8\u91cf\u7684\u5bbd\u5ea6\u3002\u53ef\u80fd\u6ca1\u770b\u61c2\uff0c\u4e3e\u51e0\u4e2a\u4f8b\u5b50\u5e94\u8be5\u5c31\u61c2\u4e86\u3002 int8_t \u5bf9\u5e94 PRId8 \uff0c uint16_t \u5bf9\u5e94 PRIu16 \uff0c uint8_t \u5341\u516d\u8fdb\u5236\u8f93\u51fa\u5bf9\u5e94 PRIx8 \uff0c int_least32_t \u5bf9\u5e94 PRIdLEAST32 \uff0c uint_fast16_t \u5bf9\u5e94 PRIuFAST16 \u3002 PRI \u4e0e SCN \u5728\u7f16\u8bd1\u5668\u770b\u6765\u5b8c\u5168\u7b49\u4ef7\u3002\u5177\u4f53\u53ef\u4ee5\u6253\u5f00 inttypes.h \u770b\u3002 \u7c7b\u4f3c printf \u7684\u8f93\u51fa\u683c\u5f0f\u4e00\u822c\u53ea\u5728\u8c03\u8bd5\uff0c\u6216\u8005\u4f5c\u4e3aCLI\u8f93\u51fa\u4fe1\u606f\u65f6\u4f7f\u7528\uff0c\u4e0d\u4f1a\u5728\u901a\u4fe1\u4e2d\u4f7f\u7528\u3002\u6570\u636e\u901a\u4fe1\u4e00\u822c\u90fd\u662f\u4ece\u4e8c\u8fdb\u5236\u4f4d\u53bb\u5b9a\u4e49\u3002 \u6574\u6570\u6ca1\u6709\u4f60\u60f3\u8c61\u7684\u90a3\u4e48\u7b80\u5355\uff0c\u56e0\u4e3a\u5b83\u592a\u5e38\u7528\u4e86\uff0c\u5728\u4e00\u4e2a\u4f01\u4e1a\u9879\u76ee\u4e2d\u7528\u4ec0\u4e48\u5bbd\u5ea6\u7684\u6570\uff0c\u662f\u5426\u56fa\u5b9a\u4f4d\u6570\uff0c\u90fd\u662f\u6709\u8bb2\u7a76\u7684\uff0c\u4e0d\u662f\u968f\u4fbf\u778e\u5b9a\u4e49\u7684\u3002\u8fd9\u4e9b\u89c4\u8303\u3001\u5934\u6587\u4ef6\u5b9a\u4e49\u4e86\u4e00\u5806\u770b\u4f3c\u6ca1\u7528\u7684\u4e1c\u897f\uff0c\u5176\u5b9e\u5f88\u6709\u7528\uff0c\u4ed6\u4eec\u90fd\u662f\u4ece\u5b9e\u9645\u9879\u76ee\u5f00\u53d1\u4e2d\u5f97\u5230\u7684\u7ecf\u9a8c\u548c\u6559\u8bad\uff0c\u800c\u4e0d\u662f\u81ea\u5df1\u4e3b\u89c2\u81c6\u65ad\u5b9a\u4e49\u7684\u3002 \u5c31\u6bd4\u5982\u4e0a\u9762\u7684\u683c\u5f0f\u63a7\u5236\u7b26\uff0c\u4f60\u53ef\u80fd\u4f1a\u60f3\uff0c PRI \u548c SCN \u4e0d\u90fd\u662f\u4e00\u6837\u7684\u5417\uff0c\u7edf\u4e00\u6210 PRI \u6216\u8005\u5176\u4ed6\u5355\u8bcd\u4e0d\u884c\u5417\uff0c\u7b54\u6848\u662f\u4e0d\u884c\u3002\u5f53\u4f60\u53bb\u9605\u8bfb\u4e0a\u5343\u4e2a\u6587\u4ef6\u7684\u9879\u76ee\u4ee3\u7801\u65f6\uff0c\u5982\u679c\u90fd\u5199 PRI \uff0c\u4f60\u53ef\u80fd\u5c31\u628a\u539f\u6765\u8f93\u5165\u7684\u529f\u80fd\u88ab\u5f53\u6210\u8f93\u51fa\u4e86\uff0c\u7136\u540e\u540e\u9762\u7684\u4eba\u90fd\u5f53\u8f93\u51fa\u6765\u5199\uff0c\u8fd9\u5728\u4f01\u4e1a\u9879\u76ee\u91cc\u662f\u76f8\u5f53\u4e25\u91cd\u7684\u95ee\u9898\uff0c\u53ef\u80fd\u4f1a\u9020\u6210\u4e25\u91cd\u7684\u635f\u5931\uff0c\u4f60\u53ef\u80fd\u5c31\u88ab\u5f00\u4e86\u3002 \u6d6e\u70b9\u6570 \u6709\u4e9b\u4ee3\u7801\u4f1a\u628a\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570 float \u5b9a\u4e49\u6210 fp32 \uff0c\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570 double \u5b9a\u4e49\u6210 fp64 \u3002\u5728\u6df1\u5ea6\u5b66\u4e60\u4e2d\u4f1a\u4f7f\u7528\u534a\u7cbe\u5ea6\u6d6e\u70b9\u6570 fp16 \u8fdb\u884c\u8fd0\u7b97\u3002C\u8bed\u8a00\u4e2d\u6ca1\u6709\u534a\u7cbe\u5ea6\u6d6e\u70b9\u6570\uff0c\u56e0\u6b64\u8fd9\u91cc\u5c31\u6ca1\u6709\u5fc5\u8981\u4f7f\u7528\u8fd9\u79cd\u5b9a\u4e49\u4e86\u3002\u4e0b\u9762\u662f\u4e0d\u540c\u7cbe\u5ea6\u7684\u6d6e\u70b9\u6570\u8303\u56f4\u53c2\u8003\uff1a \u547d\u540d | \u542b\u4e49 | \u8303\u56f4 -------|-------------------|------------------------------------------------------------------ float | \u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570(32\u4f4d) | 1bit(\u7b26\u53f7\u4f4d) 23bits(\u5c3e\u6570\u4f4d) 8bits(\u6307\u6570\u4f4d) -3.40E+38 ~ +3.40E+38 double | \u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570(64\u4f4d) | 1bit(\u7b26\u53f7\u4f4d) 52bits(\u5c3e\u6570\u4f4d) 11bits(\u6307\u6570\u4f4d) -1.79E+308 ~ +1.79E+308 \u6d6e\u70b9\u6570\u9075\u5faaIEEE754\u6807\u51c6\uff0c float \u7684\u8303\u56f4\u662f -2^127 ~ 2^127 \uff0c double \u7684\u8303\u56f4\u662f -2^1024 ~ 2^1024 \u3002\u8fd9\u4e2a\u8303\u56f4\u5177\u4f53\u600e\u4e48\u8ba1\u7b97\u7684\uff0c\u548c\u6d6e\u70b9\u6570\u7684\u5b58\u50a8\u6709\u5173\u3002\u6709\u4e9b\u590d\u6742\u8fd9\u91cc\u5c31\u4e0d\u8bb2\u4e86\uff0c\u53ef\u4ee5\u81ea\u5df1\u770b\u4e00\u4e9b\u6587\u7ae0\u3002 \u5728\u505a\u6d6e\u70b9\u8fdb\u5236\u8f6c\u6362\u65f6\u4e0d\u53ef\u907f\u514d\u4f1a\u51fa\u73b0\u7cbe\u5ea6\u4e22\u5931\uff0c\u8fd9\u662f\u7531\u4e8e\u5728\u5341\u8fdb\u5236\u4e2d\u7684\u5c0f\u6570\uff0c\u5728\u4e8c\u8fdb\u5236\u4e2d\u53ef\u80fd\u662f\u4e2a\u65e0\u9650\u5faa\u73af\u7684\u6570\u3002\u56e0\u6b64\u5728\u8f93\u51fa\u67d0\u4e9b\u5c0f\u6570\u65f6\u672b\u5c3e\u4f1a\u51fa\u73b0000000001\u6216\u8005999999999\u3002 float \u7684\u7cbe\u5ea6\u53ea\u67096\u4f4d\uff0c double \u7684\u7cbe\u5ea6\u670915\u4f4d\u3002\u6839\u636e\u60c5\u51b5\u9009\u62e9\u6d6e\u70b9\u6570\u7684\u7c7b\u578b\uff0c\u5982\u679c\u7cbe\u5ea6\u66f4\u91cd\u8981\uff0c\u9009\u62e9 double \u7c7b\u578b\uff1b\u5982\u679c\u901f\u5ea6\u548c\u5b58\u50a8\u7a7a\u95f4\u66f4\u91cd\u8981\uff0c\u9009\u62e9 float \u3002 \u5bf9\u4e8eCortex-M4\u5185\u6838\uff0c\u53ef\u4ee5\u4f7f\u7528\u786c\u4ef6FPU\uff08Floating-Point Unit\uff0c\u6d6e\u70b9\u8fd0\u7b97\u5355\u5143\uff09\u6765\u63d0\u5347\u6d6e\u70b9\u6570\u8fd0\u7b97\u901f\u5ea6\uff0c\u5728Keil\u4e2d\u9009\u62e9\u4e0b\u9762\u7684\u9009\u9879\u5373\u53ef\u4f7f\u7528FPU\u3002 \u6ce8\u610f\uff1aCortex-M3\u6ca1\u6709FPU\uff0c\u4e5f\u5c31\u8bf4\u660e\u6574\u4e2aSTM32F1\u5bb6\u65cf\u90fd\u6ca1\u6709FPU\u3002STM32F4\u5bb6\u65cf\u662fCortex-M4\u5185\u6838\uff0c\u6709FPU\u3002\u6709\u5173FPU\u7684\u5185\u5bb9\u53c2\u9605 \u5de5\u5177\u94fe-\u7f16\u8bd1\u53c2\u6570 \u3002 \u903b\u8f91\u503cbool \u903b\u8f91\u503c\u4f7f\u7528 stdbool.h \u4e2d\u5b9a\u4e49\u7684bool\u503c\u3002\u5c3d\u91cf\u4e0d\u8981\u81ea\u5df1\u5b9a\u4e49\uff0c\u4ee5\u9632\u91cd\u590d\u5b9a\u4e49\u3002 \u6ce8\u610f\uff0c\u5728 stdbool.h \u4e2d\uff0c true \u4e3a1, false \u4e3a0\u3002\u8fd9\u4f1a\u5f71\u54cd\u5230\u6761\u4ef6\u5224\u65ad\uff0c\u53c2\u89c1\u4e0b\u9762 \u6761\u4ef6\u5224\u65ad \u3002 \u7ed3\u6784\u4f53/\u679a\u4e3e \u516c\u5f00\u7684\u7ed3\u6784\u4f53\u5b9a\u4e49\u4e00\u5f8b\u653e\u5728 .h \u6587\u4ef6\u4e2d \uff0c\u9664\u975e\u662f\u51fd\u6570\u5185\u90e8\u4f7f\u7528\uff0c\u5426\u5219\u4e0d\u8981\u653e\u5728 .c \u4e2d\u3002 \u4e3a\u4e86\u65b9\u4fbf\uff0c\u4e00\u822c\u90fd\u4f7f\u7528 typedef \u5b9a\u4e49\u540d\u79f0\uff0c\u7ed3\u5c3e\u90fd\u6807\u4e00\u4e2a _t \u6216\u8005 TypeDef \u4ee5\u8868\u660e\u8fd9\u662f\u4e00\u4e2a\u4f7f\u7528 typedef \u5b9a\u4e49\u7684\u540d\u79f0\u3002\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\u53d8\u91cf\u4f7f\u7528 typename variable \uff0c\u4e0d\u4f7f\u7528 struct typename variable \uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50\uff1a /* \u679a\u4e3e\u7c7b\u578b\u5b9a\u4e49, \u4e00\u822c\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u6216\u8005\u8fd4\u56de\u503c\u4f20\u51fa */ /** * @brief HAL State structures definition */ typedef enum { HAL_CAN_STATE_RESET = 0x00U, /*!< CAN not yet initialized or disabled */ HAL_CAN_STATE_READY = 0x01U, /*!< CAN initialized and ready for use */ ...... HAL_CAN_STATE_ERROR = 0x05U /*!< CAN error state */ } HAL_CAN_StateTypeDef; /** * @brief Return the CAN state. * @param hcan pointer to a CAN_HandleTypeDef structure that contains * the configuration information for the specified CAN. * @retval HAL state * @note \u8fd9\u4e2a\u51fd\u6570\u8fd4\u56de\u7684\u5c31\u662f\u4e00\u4e2a\u679a\u4e3e\u7c7b\u578b */ HAL_CAN_StateTypeDef HAL_CAN_GetState(CAN_HandleTypeDef *hcan) { ...... /* Return CAN state */ return state; } /* \u7ed3\u6784\u4f53\u5b9a\u4e49 */ /** * @brief CAN handle Structure definition */ typedef struct __CAN_HandleTypeDef { CAN_TypeDef* Instance; /*!< Register base address */ CAN_InitTypeDef Init; /*!< CAN required parameters */ ...... } CAN_HandleTypeDef; CAN_HandleTypeDef CAN1_Handler; /* \u5b9a\u4e49\u4e00\u4e2aCAN_HandleTypeDef\u7c7b\u578b\u7684\u53d8\u91cf */ \u6709\u65f6\u4e3a\u4e86\u8ba9\u7f16\u8bd1\u5668\u5bf9\u6210\u5458\u53d8\u91cf\u8fdb\u884c\u5185\u5b58\u5bf9\u9f50\uff0c\u4f1a\u4f7f\u7528 __packed \u548c __align(num) \u5173\u952e\u5b57\u3002\u8fd9\u91cc\u5c31\u4e0d\u7ec6\u8bb2\u4e86\uff0c\u5982\u679c\u5bf9\u5e95\u5c42\u4e86\u89e3\u4e0d\u591f\u6df1\u5165\u7684\u8bdd\u5c31\u4e0d\u8981\u4f7f\u7528\u4e86\u3002\u7ee7\u7eed\u6df1\u5165\u9700\u8981\u8bb2\u53d8\u91cf\u5982\u4f55\u5728\u5185\u5b58\u4e2d\u5b58\u50a8\u7b49\u3002\u611f\u5174\u8da3\u53ef\u4ee5\u770b\u770b\u76f8\u5173\u6587\u7ae0\u3002 \u5f53\u5b9a\u4e49\u7ed3\u6784\u4f53\u6210\u5458\u7684\u67d0\u4e9b\u503c\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u5199\u6cd5\uff1a typedef struct { uint32_t Pin; uint32_t Mode; uint32_t Pull; uint32_t Speed; } GPIO_InitTypeDef; GPIO_InitTypeDef gpio_initure = {.Pin = GPIO_PIN_9, .Mode = GPIO_MODE_AF_PP, .Pull = GPIO_PULLUP, .Speed = GPIO_SPEED_FREQ_HIGH}; /* \u8fd9\u6837\u4e0e\u4e0b\u9762\u7684\u65b9\u5f0f\u76f8\u540c */ GPIO_InitTypeDef gpio_initure = {GPIO_PIN_9, GPIO_MODE_AF_PP, GPIO_PULLUP, GPIO_SPEED_FREQ_HIGH}; \u4e5f\u5c31\u662f\u6211\u4eec\u53ef\u4ee5\u5728\u5b9a\u4e49\u53d8\u91cf\u7684\u65f6\u5019\uff0c\u5728\u82b1\u62ec\u53f7\u91cc\u9762\u7528 .\u6210\u5458\u540d\u79f0 \u7684\u65b9\u5f0f\u6307\u5b9a\u6210\u5458\u7684\u503c\uff0c\u8fd9\u6837\u5199\u7684\u597d\u5904\u662f\u53ef\u8bfb\u6027\u5f3a\uff0c\u53ef\u4ee5\u51cf\u5c11\u4ee3\u7801\u5197\u4f59\u3002\u5982\u679c\u4e0d\u5b9a\u4e49\u67d0\u4e9b\u6210\u5458\u7684\u503c\uff0c\u76f4\u63a5\u4e0d\u7528\u5199\uff0c\u6ca1\u6709\u5f71\u54cd\u3002 \u53d8\u91cf\u4fee\u9970\u7b26 \u53d8\u91cf\u4fee\u9970\u7b26\u6709 auto, static, const, volatile, register, extern \u7b49\u3002\u4e0b\u9762\u53ea\u8bb2 extern, static, const \uff0c\u5176\u4ed6\u7684\u8bf7\u590d\u4e60\u4f60\u7684C\u8bed\u8a00\u3002 extern \u7528\u6765\u58f0\u660e\u4e00\u4e2a\u5916\u90e8\u53d8\u91cf\uff0c\u4ed6\u53ea\u662f\u4e00\u4e2a\u5360\u4f4d\u7684\uff0c\u544a\u8bc9\u7f16\u8bd1\u5668\u8fd9\u4e2a\u53d8\u91cf\u5728\u522b\u7684\u5730\u65b9\u5b9a\u4e49\u4e86\uff0c\u81ea\u5df1\u53bb\u627e\u3002\u5982\u679c\u4e00\u4e2a\u53d8\u91cf\u8981\u516c\u5f00\uff0c\u5728\u540c\u540d\u7684 .h \u52a0\u4e00\u4e2a extern \u58f0\u660e\u5373\u53ef\u3002\u5982\u679c\u4e00\u4e2a\u6587\u4ef6\u8981\u5f15\u7528\u53e6\u4e00\u4e2a\u6587\u4ef6\u7684\u53d8\u91cf\uff0c \u5728\u54ea\u91cc\u7528\u5c31\u5728\u54ea\u91cc\u58f0\u660e \u3002 static \u53ef\u4ee5\u5ef6\u957f\u5c40\u90e8\u53d8\u91cf\u7684\u751f\u5b58\u5468\u671f\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u51fd\u6570\u51fa\u6808\u4ee5\u540e\u53d8\u91cf\u7684\u503c\u4f1a\u4fdd\u7559\u3002\u5176\u5b9e\u7f16\u8bd1\u5668\u5206\u914d\u5e26 static \u7684\u5c40\u90e8\u53d8\u91cf\u7684\u65f6\u5019\uff0c\u548c\u5168\u5c40\u53d8\u91cf\u5206\u914d\u7684\u4f4d\u7f6e\u662f\u4e00\u6837\u7684\uff0c\u4e00\u4e2a\u51fd\u6570\u53ef\u4ee5\u901a\u8fc7\u6307\u9488\u83b7\u53d6\u5230\u5176\u4ed6\u51fd\u6570\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u7684\u503c\uff08\u8bf7\u53c2\u89c1\u7f16\u8bd1\u539f\u7406\uff09\u3002 \u5982\u679c static \u52a0\u5728\u5168\u5c40\u53d8\u91cf\u6216\u8005\u51fd\u6570\u524d\uff0c\u8bf4\u660e\u8fd9\u4e2a\u53d8\u91cf\u6216\u51fd\u6570 \u53ea\u80fd\u88ab\u8fd9\u4e2a\u6587\u4ef6\u6240\u4f7f\u7528 \u3002\u5176\u4ed6\u6587\u4ef6\u65e0\u6cd5\u901a\u8fc7 extern \u8bbf\u95ee\u8fd9\u4e2a\u53d8\u91cf\uff0c\u4e5f\u65e0\u6cd5\u8c03\u7528\u51fd\u6570\u3002 const \u4ee3\u8868\u8fd9\u4e2a\u53d8\u91cf\u7684\u503c\u65e0\u6cd5\u88ab\u4fee\u6539\u3002 \u51fd\u6570 \u51fd\u6570\u4fee\u9970\u7b26 \u51fd\u6570\u524d\u4fee\u9970\u7b26\u6709 __weak, static, inline \u7b49\u4fee\u9970\u7b26\u3002 __weak \u4fee\u9970\u7b26\u8bf4\u660e\u8fd9\u4e2a\u51fd\u6570\u662f\u5f31\u51fd\u6570\uff0c\u53ef\u4ee5\u5728\u5176\u4ed6\u5730\u65b9\u91cd\u65b0\u5b9a\u4e49\u8fd9\u4e2a\u51fd\u6570\u3002\u5982\u679c\u6ca1\u6709\u91cd\u5b9a\u4e49\uff0c\u5c06\u4f1a\u4f7f\u7528\u8fd9\u4e2a\u5e26 __weak \u7684\u51fd\u6570\u3002 __weak \u4fee\u9970\u7b26\u5728\u5b9a\u4e49\u65f6\u6709\u7528\uff0c\u58f0\u660e\u65e0\u7528\u3002 \u4e00\u822cHAL\u4e2d\u7684 MspInit, MspDeInit, Callback \u90fd\u662f\u5f31\u5b9a\u4e49\u51fd\u6570\uff0c\u6211\u4eec\u76f4\u63a5\u53ef\u4ee5\u91cd\u5b9a\u4e49\u3002 \u6bd4\u5982\u4e0b\u9762\u662f stm32f4x_hal_can.h \u4e2d\u7684\u63a5\u6536\u90ae\u7bb1FIFO0\u6302\u8d77\u4e2d\u65ad\u56de\u8c03\u51fd\u6570\uff0c\u6211\u4eec\u4e00\u822c\u4f1a\u91cd\u5b9a\u4e49\u8fd9\u4e2a\u51fd\u6570\uff1a /** * @brief Rx FIFO 0 message pending callback. * @param hcan pointer to a CAN_HandleTypeDef structure that contains * the configuration information for the specified CAN. * @retval None */ __weak void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan) { /* Prevent unused argument(s) compilation warning */ UNUSED(hcan); /* NOTE : This function Should not be modified, when the callback is needed, the HAL_CAN_RxFifo0MsgPendingCallback could be implemented in the user file */ } /* \u5728can.c\u4e2d\u91cd\u5b9a\u4e49 */ /** * @brief CAN\u63a5\u6536\u90ae\u7bb1FIFO0\u6302\u8d77\u4e2d\u65ad * * @param hcan CAN\u53e5\u67c4 */ void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan) { if (hcan->Instance == CAN1) { /* \u5982\u679c\u662fCAN1\u6536\u5230\u6d88\u606f */ ...... } } static \u4e0a\u9762\u8bb2\u8fc7\u4e86\uff0c\u6307\u5b9a\u8fd9\u4e2a\u51fd\u6570\u53ea\u80fd\u88ab\u672c\u6587\u4ef6\u6240\u4f7f\u7528\uff0c\u4e0d\u80fd\u88ab\u5176\u4ed6\u6587\u4ef6\u4f7f\u7528\u3002 inline \u662fC99\u5f15\u5165\u7684\u5173\u952e\u5b57\uff0cC89\u6ca1\u6709\uff0c\u7f16\u8bd1\u4f1a\u62a5\u9519\u3002 inline \u4fee\u9970\u7b26\u662f\u6307\u8fd9\u4e2a\u51fd\u6570\u662f\u5185\u8054\u51fd\u6570\u3002 inline \u53ea\u5728\u5b9a\u4e49\u51fd\u6570\u7684\u65f6\u5019\u6709\u7528\uff0c\u58f0\u660e\u65e0\u7528\u3002\u5982\u679c\u4e00\u4e2a\u51fd\u6570\u7ecf\u5e38\u9700\u8981\u8c03\u7528\uff0c\u9891\u7e41\u7684\u51fa\u5165\u6808\u64cd\u4f5c\u4f1a\u4f7f\u7a0b\u5e8f\u8fd0\u884c\u7684\u6548\u7387\u5927\u6253\u6298\u6263\uff0c\u56e0\u6b64\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u51fd\u6570\u4f5c\u4e3a\u5185\u8054\u51fd\u6570\u76f4\u63a5\u5d4c\u5165\u5230\u8c03\u7528\u7684\u5730\u65b9\uff0c\u5f53\u6210\u51fd\u6570\u7684\u4e00\u90e8\u5206\u4ee3\u7801\u7247\u6bb5\uff0c\u4e0d\u5fc5\u8fdb\u884c\u4e00\u6b21\u51fa\u5165\u6808\u64cd\u4f5c\u3002\u4e00\u822c inline \u4fee\u9970\u7b26\u4e0e static \u642d\u914d\u4f7f\u7528\uff0c\u6784\u6210 static inline \u4fee\u9970\u7b26\uff0c\u4e00\u4e2a\u9891\u7e41\u8c03\u7528\u7684\u51fd\u6570\u5728\u4e00\u4e2a\u6587\u4ef6\u4e2d\u6548\u7387\u6bd4\u8f83\u9ad8\u3002 \u4e0d\u8fc7 inline \u53ea\u662f\u7ed9\u7f16\u8bd1\u5668\u7684\u4e00\u4e2a\u5efa\u8bae\uff0c\u5f53\u4e00\u4e2a\u51fd\u6570\u4e2d\u7684\u8bed\u53e5\u8f83\u5c11\uff0c\u6ca1\u6709\u5faa\u73af\u7684\u65f6\u5019\u7f16\u8bd1\u5668\u624d\u4f1a\u5185\u8054\u3002\u5426\u5219\u5b83\u8ddf\u666e\u901a\u51fd\u6570\u4e00\u6837\uff0c\u8d70\u4e00\u904d\u5165\u6808\u3001\u6267\u884c\u3001\u51fa\u6808\u7684\u6d41\u7a0b\u3002 \u5728gcc\u7f16\u8bd1\u5668\u4e2d\uff0cO0\u4f18\u5316\u4f1a\u5ffd\u7565 inline \uff0cO1\u624d\u4f1a\u5185\u8054\u3002\u6709\u5173\u4f18\u5316\u7ea7\u522b\uff0c\u53c2\u89c1 \u7f16\u8bd1\u53c2\u6570 \u3002 \u6ce8\u610f\uff1aC\u8bed\u8a00\u4e0eC++\u7684 inline \u662f\u4e0d\u540c\u7684\uff0c\u5177\u4f53\u53c2\u89c1 https://www.zhihu.com/question/270847649 \u3002 \u4e0d\u8981\u6ee5\u7528\u5185\u8054\u51fd\u6570\uff0c\u4e00\u822c\u51fd\u6570\u572810\u884c\u4ee5\u4e0b\u4e14\u8c03\u7528\u9891\u7e41\u624d\u8981\u8003\u8651\u5185\u8054\uff0c\u5426\u5219\u6548\u679c\u53ef\u80fd\u4e0d\u5982\u4e0d\u5185\u8054\u3002 \u51fd\u6570\u6307\u9488 \u51fd\u6570\u6307\u9488\u5728C\u8bed\u8a00\u662f\u4e00\u5e26\u800c\u8fc7\u7684\uff0c\u4f46\u662f\u5728\u5e95\u5c42\u5f00\u53d1\u4e2d\u4f1a\u7ecf\u5e38\u7528\u5230\u3002 \u51fd\u6570\u6307\u9488\u5c31\u662f\u6307\u5411\u51fd\u6570\u7684\u6307\u9488\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50\uff1a #include \"stdio.h\" int sum(int num1, int num2) { return num1 + num2; } int sub(int num1, int num2) { return num1 - num2; } int main(int argc, char const* argv[]) { int a = 10, b = 5; int (*func)(int, int); /* \u58f0\u660e\u51fd\u6570\u6307\u9488func, \u51fd\u6570\u539f\u578b\u4e3aint (int, int) */ func = sum; /* func\u6307\u5411sum\u51fd\u6570 */ printf(\"a + b = %d\\n\", func(a, b)); func = sub; /* func\u6307\u5411sub\u51fd\u6570 */ printf(\"a - b = %d\\n\", func(a, b)); return 0; } \u6267\u884c\u7ed3\u679c\uff1a a + b = 15 a - b = 5 \u53ef\u4ee5\u601d\u8003\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u3002\u9996\u5148 func = sum \uff0c\u90a3\u4e48\u76f8\u5f53\u4e8e func \u5c31\u662f sum \u51fd\u6570\uff0c\u8c03\u7528 func \u5c31\u662f\u8c03\u7528 sum \u3002\u5176\u6b21 func = sub \uff0c\u8c03\u7528 func \u5c31\u662f\u8c03\u7528 sub \u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\u7ed9 func \u8d4b\u503c\u7684\u662f\u51fd\u6570\u540d\uff0c\u4e0d\u80fd\u5e26\u62ec\u53f7\uff0c\u5426\u5219\u5c31\u662f\u4e00\u4e2a\u51fd\u6570\u7684\u8c03\u7528\u3002\u5982\u679c\u4e00\u4e2a\u51fd\u6570\u8fd4\u56de\u7684\u662f\u51fd\u6570\u6307\u9488\uff0c\u90a3\u53ef\u4ee5\u5e26\u62ec\u53f7\u3002\u51fd\u6570\u6307\u9488\u540c\u6837\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u6570\u548c\u8fd4\u56de\u503c\u3002 \u58f0\u660e\u51fd\u6570\u6307\u9488\u7684\u53c2\u6570\u5217\u8868 (int, int) \u53ef\u4ee5\u5199\u6210 (int a, int b) \uff0c\u4e5f\u4e0d\u4e00\u5b9a\u975e\u5f97\u662f a,b \uff0c\u53c2\u6570\u540d\u4efb\u610f\uff0c\u6240\u4ee5\u4e00\u822c\u4e0d\u5199\u53c2\u6570\u540d\u3002 \u51fd\u6570\u6307\u9488\u4e00\u822c\u7528\u5728\u56de\u8c03\u51fd\u6570\uff0c\u9996\u5148\u521d\u59cb\u5316\u7684\u65f6\u5019\u5c06\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\uff0c\u5f53\u56de\u8c03\u7684\u65f6\u5019\u4f1a\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u3002 ST HAL\u5e93\u7684\u4e2d\u65ad\u56de\u8c03\u51fd\u6570\u53ef\u4ee5\u7528\u51fd\u6570\u6307\u9488\u5b9e\u73b0\uff0c\u53c2\u7167 HAL Driver \u3002 \u51fd\u6570\u7684\u53ef\u91cd\u5165\u548c\u4e0d\u53ef\u91cd\u5165 \u8fd9\u91cc\u53ea\u662f\u7b80\u5355\u63d0\u4e00\u4e0b\uff0c\u66f4\u6df1\u5165\u7684\u5185\u5bb9\u8bf7\u53c2\u89c1\u64cd\u4f5c\u7cfb\u7edf\u3002 \u53ef\u91cd\u5165\uff0c\u5b57\u9762\u610f\u601d\u5c31\u662f\u53ef\u4ee5\u91cd\u65b0\u8fdb\u5165\u3002\u5f53\u4e2d\u65ad\u8bf7\u6c42\u4f20\u5165CPU\u65f6\uff0cCPU\u4f1a\u5148\u505c\u6b62\u5f53\u524d\u6b63\u5728\u6267\u884c\u7684\u51fd\u6570\uff0c\u53bb\u6267\u884c\u4e2d\u65ad\u8bf7\u6c42\u3002\u6267\u884c\u5b8c\u4e2d\u65ad\u4ee5\u540e\u624d\u4f1a\u7ee7\u7eed\u6267\u884c\u88ab\u6253\u65ad\u7684\u51fd\u6570\u3002\u7ee7\u7eed\u6267\u884c\u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u662f\u5bf9\u5e94\u91cd\u5165\u8fd9\u4e2a\u8bcd\u3002 \u53ef\u91cd\u5165\u51fd\u6570\u662f\u6307\u53ef\u4ee5\u88ab\u4e2d\u65ad\u6253\u65ad\u7684\u51fd\u6570\u3002\u4e0d\u53ef\u91cd\u5165\u51fd\u6570\u5f53\u7136\u5c31\u662f\u4e0d\u80fd\u88ab\u4e2d\u65ad\u6253\u65ad\u7684\u51fd\u6570\u3002 \u5f53\u4e00\u4e2a\u4e2d\u65ad\u4f20\u5165CPU\u65f6\uff0cCPU\u4f1a\u5148\u5bf9\u6b63\u5728\u6267\u884c\u7684\u51fd\u6570\u4fdd\u5b58\u73b0\u573a\uff08\u5047\u8bbe\u8fd9\u4e2a\u6b63\u5728\u6267\u884c\u7684\u51fd\u6570\u53eb\u51fd\u6570A\uff09\uff0c\u7136\u540e\u518d\u53bb\u6267\u884c\u4e2d\u65ad\u51fd\u6570B\u3002\u5982\u679c\u51fd\u6570A\u6b63\u5728\u4f7f\u7528\u4e00\u4e2a\u5168\u5c40\u53d8\u91cfC\uff0c\u800c\u4e2d\u65ad\u51fd\u6570B\u4e5f\u9700\u8981\u4f7f\u7528\u5168\u5c40\u53d8\u91cfC\u3002\u90a3\u4e48\u8fd9\u4e2a\u53d8\u91cfC\u7684\u503c\u5c31\u6709\u53ef\u80fd\u88ab\u51fd\u6570B\u66f4\u6539\u3002\u5f53\u51fd\u6570B\u6267\u884c\u5b8c\u6210\u4ee5\u540e\uff0c\u95ee\u9898\u6765\u4e86\uff0c\u53d8\u91cfC\u7684\u503c\u5230\u5e95\u6709\u6ca1\u6709\u88ab\u6539\u53d8\uff1f\u5982\u679c\u88ab\u6539\u53d8\u4e86\uff0c\u51fd\u6570A\u7ee7\u7eed\u6267\u884c\u662f\u5426\u662f\u7b26\u5408\u9884\u671f\u7684\uff1f\u8fd9\u91cc\u7684\u51fd\u6570A\u5c31\u662f\u4e0d\u53ef\u91cd\u5165\u51fd\u6570\u3002 \u800c\u51fd\u6570D\u5982\u679c\u662f\u4f7f\u7528\u7684\u5c40\u90e8\u8d44\u6e90\uff0c\u6ca1\u6709\u4f7f\u7528\u516c\u5171\u8d44\u6e90\uff0c\u5373\u4f7f\u4e2d\u65ad\u6253\u65ad\u4e86\u51fd\u6570D\u7684\u6267\u884c\uff0c\u51fd\u6570D\u7ee7\u7eed\u6267\u884c\u7ed3\u679c\u4e5f\u4f1a\u662f\u7b26\u5408\u9884\u671f\u7684\u3002\u90a3\u4e48\u8fd9\u4e2a\u51fd\u6570D\u5c31\u662f\u53ef\u91cd\u5165\u51fd\u6570\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff0c\u4f60\u5728\u5bbf\u820d\u548c\u5176\u4ed6\u820d\u53cb\u6b63\u5728\u6284\u4e00\u4e2a\u6750\u6599\uff0c\u8fd9\u4e2a\u6750\u6599\u5f88\u957f\uff0c\u9875\u6570\u5f88\u591a\uff0c\u800c\u4e14\u6ca1\u6709\u9875\u7801\uff0c\u4e5f\u6ca1\u6709\u9489\u8d77\u6765\u3002\u4f60\u5728\u6284\u7684\u65f6\u5019\u7a81\u7136\u6709\u4eba\u627e\u4f60\u6709\u4e8b\uff0c\u4f60\u51fa\u53bb\u4e86\u5f88\u957f\u65f6\u95f4\u3002\u56de\u6765\u7684\u65f6\u5019\u4f60\u53d1\u73b0\u820d\u53cb\u5df2\u7ecf\u6284\u4e86\u5f88\u591a\u4e86\uff0c\u5f80\u540e\u7ffb\u4e86\u597d\u51e0\u9875\u4e86\u3002\u800c\u4f60\u4e0d\u77e5\u9053\u4f60\u6284\u5230\u54ea\u91cc\u4e86\uff0c\u8fd9\u4e2a\u6750\u6599\u53c8\u957f\u53c8\u6ca1\u9875\u7801\u3002\u7ee7\u7eed\u6284\u663e\u7136\u4f1a\u6f0f\u6389\u5f88\u591a\u4e1c\u897f\u3002\u8fd9\u8bf4\u660e\u8fd9\u6837\u6284\u6750\u6599\u4e0d\u53ef\u91cd\u5165\u3002 \u800c\u5982\u679c\u4f60\u628a\u6750\u6599\u590d\u5370\u4e86\u4e00\u4efd\uff0c\u53ea\u6709\u4f60\u4e00\u4e2a\u4eba\u7167\u7740\u8fd9\u4e2a\u590d\u5370\u4ef6\u6284\u3002\u522b\u4eba\u6765\u627e\u4f60\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u628a\u4f4d\u7f6e\u8bb0\u5f55\u4e00\u4e0b\uff0c\u7136\u540e\u518d\u51fa\u53bb\u3002\u8fd9\u6837\u56de\u6765\u518d\u63a5\u7740\u6284\u7684\u65f6\u5019\u53ef\u4ee5\u4fdd\u8bc1\u6284\u7684\u5185\u5bb9\u662f\u6b63\u786e\u7684\u3002\u8fd9\u6837\u6284\u6750\u6599\u662f\u53ef\u91cd\u5165\u7684\u3002 STM32\u4e2d\u6709\u5f88\u591a\u4e2d\u65ad\u8bf7\u6c42\uff0c\u5f53\u4f7f\u7528\u4e00\u4e2a\u516c\u5171\u8d44\u6e90\uff0c\u5c24\u5176\u662f\u4f7f\u7528RTOS\u65f6\u8981\u8003\u8651\u51fd\u6570\u662f\u5426\u53ef\u91cd\u5165\u3002 \u6761\u4ef6\u5224\u65ad \u8fd9\u91cc\u4e0d\u4ec5\u9650\u4e8e if \uff0c while, for \u7b49\u5e26\u6709\u6761\u4ef6\u5224\u65ad\u7684\u540c\u7406\u3002 \u6211\u4eec\u90fd\u77e5\u9053\uff0c\u5982\u679c\u4e00\u6bb5\u4ee3\u7801\u662f\u8fd9\u6837\u5199\u7684\uff1a int a = 2; a = ....; if (a = 1) { ... } \u8fd9\u4e2aif\u7684\u6761\u4ef6\u6c38\u8fdc\u4e3a\u771f\u3002\u5927\u5bb6\u4e5f\u90fd\u77e5\u9053\uff0c\u5e94\u8be5\u5199\u6210 a == 1 \u3002\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u9519\u8bef\uff0c\u6709\u4e9b\u5f00\u53d1\u89c4\u8303\u4f1a\u8981\u6c42\u628a\u5e38\u91cf\u5199\u5de6\u8fb9\uff0c\u4e5f\u5c31\u662f if (1 == a) \u3002\u8fd9\u6837\u5f53\u5199\u6210 if (1 = a) \u65f6\uff0c\u7531\u4e8e1\u662f\u4e0d\u53ef\u4fee\u6539\u7684\u5e38\u6570\uff0c\u7f16\u8bd1\u4f1a\u62a5\u9519\u3002 \u4e5f\u53ef\u4ee5\u4f7f\u7528clang-tidy\u8fd9\u79cd\u9759\u6001\u4ee3\u7801\u5206\u6790\u5de5\u5177\uff0c\u5f53\u5199\u51fa\u8fd9\u79cd\u4ee3\u7801\u65f6\uff0c\u5de5\u5177\u4f1a\u63d0\u793a\u8bf4\u8fd9\u91cc\u7684\u903b\u8f91\u53ef\u80fd\u4e0d\u5bf9\uff0c\u9700\u8981\u4fee\u6539\u3002 C\u8bed\u8a00\u4e2d\u8ba4\u4e3a\uff0c0\u4e3a\u5047\uff0c\u975e0\u4e3a\u771f\u3002\u4f46\u662f\u5728 stdbool.h \u4e2d\uff0c true \u7684\u503c\u4e3a1\u3002\u8fd9\u662f\u7531\u4e8e\u5728C99\u6807\u51c6\u4e2dbool\u503c\u5360\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u3002\u6240\u4ee5\u6211\u4eec\u5199if\u6761\u4ef6\u4e3a\u771f\u65f6\uff0c\u4e0d\u5e94\u8be5\u52a0 condition == true \uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50\uff1a if (condition == true) { ...; } if (condition) { ...; } \u8fd9\u4e24\u4e2a if \uff0c\u770b\u4f3c\u4e00\u6837\uff0c\u5b9e\u5219\u4e0d\u7136\u3002\u5047\u5982 condition \u7684\u503c\u4e3a2\uff0c\u7b2c\u4e00\u4e2a if \u662f\u4e0d\u4f1a\u8fdb\u5165\u7684\uff0c true \u7684\u503c\u56fa\u5b9a\u662f1\u3002\u800c\u7b2c\u4e8c\u4e2a if \u662f\u53ef\u4ee5\u8fdb\u5165\u7684\u3002 if \u6761\u4ef6\u4e3a\u5047\u4e00\u822c\u5bf9\u6761\u4ef6\u53d6\u53cd\uff0c\u5f53\u7136\u5199\u6210 condition == false \u4e5f\u662f\u53ef\u4ee5\u7684\uff1a if (condition == false) { ...; } if (!condition) { ...; } /* \u8fd9\u4e24\u4e2aif\u662f\u7b49\u4ef7\u7684, \u53ea\u4e0d\u8fc7\u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\u5199\u6210\u7b2c4\u884c\u90a3\u6837 */ PS: Python\u4e2d True \u4e5f\u662f1\u3002\u5f53\u4f60\u5199 if \u6761\u4ef6\u4e3a True \u65f6\uff0c\u4f60\u731cPyCharm\u753b\u4e00\u6761\u9ec4\u6ce2\u6d6a\u7ebf\u63d0\u793a\u4f60\u4ec0\u4e48\u3002 \u4e0d\u8981\u5bf9\u6d6e\u70b9\u6570\u505a\u76f8\u7b49\u6216\u8005\u4e0d\u7b49\u5224\u65ad\uff0c\u6d6e\u70b9\u6570\u7531\u4e8e\u7cbe\u5ea6\u95ee\u9898\u5e76\u4e0d\u4f1a\u6309\u7167\u6211\u4eec\u9884\u671f\u7684\u65b9\u5f0f\u6267\u884c\u3002\u4e0b\u9762\u6211\u7528Python\u6765\u6f14\u793a\u4e00\u4e0b\uff08C\u8bed\u8a00\u4e5f\u4e00\u6837\uff09 \u770b\u5230\u4e86\u5417\uff0c 0.1 + 0.2 == 0.3 \u7684\u503c\u4e3aFalse\uff0c\u8fd9\u662f\u7531\u4e8e\u5728\u8fdb\u5236\u8f6c\u6362\u7684\u8fc7\u7a0b\u4e2d 0.1 + 0.2 == 0.30000000000000004 \uff0c\u4e0d\u662f 0.3 \uff0c\u7ed3\u679c\u81ea\u7136\u4e0d\u76f8\u7b49\u3002 \u9690\u5f0f\u7c7b\u578b\u8f6c\u6362 \u8981\u683c\u5916\u6ce8\u610f\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\uff0c\u81ea\u5df1\u60f3\u4e00\u4e0b\u4e0b\u9762\u4ee3\u7801\u7684\u8fd0\u884c\u7ed3\u679c\u662f\u4ec0\u4e48\uff0c\u81ea\u5df1\u4e5f\u53ef\u4ee5\u8fd0\u884c\u4e00\u4e0b\uff1a #include \"stdint.h\" #include \"stdio.h\" #include \"inttypes.h\" int main(int argc, char const *argv[]) { /* \u65e0\u7b26\u53f7\u5230\u6709\u7b26\u53f7 */ uint16_t u16num_1 = 45024; int16_t s16num_1 = u16num_1; printf(\"u16num = %\" PRIu16 \", s16num = %\" PRId16 \"\\n\", u16num_1, s16num_1); /* \u5927\u8303\u56f4\u5230\u5c0f\u8303\u56f4 */ int32_t s32num_2 = 40328; int16_t s16num_2 = s32num_2; printf(\"s32num = %\" PRId32 \", s16num = %\" PRId16 \"\\n\", s32num_2, s16num_2); /* \u5c0f\u8303\u56f4\u5230\u65e0\u7b26\u53f7\u5927\u8303\u56f4 */ int16_t s16num_3 = -1; uint32_t u32num_3 = s16num_3; printf(\"s16num = %\" PRId16 \", s32num = %\" PRIu32 \"\\n\", s16num_3, u32num_3); return 0; } \u8fd0\u884c\u7ed3\u679c\uff1a u16num = 45024, s16num = -20512 s32num = 40328, s16num = -25208 s16num = -1, s32num = 4294967295 \u601d\u8003\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u7ed3\u679c\u662f\u8fd9\u6837\uff0c\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\u8981\u683c\u5916\u6ce8\u610f\u4e0a\u9762\u7684\u51e0\u79cd\u60c5\u51b5\u3002 \u6709\u5173\u9690\u5f0f\u8f6c\u6362\u7c7b\u578b\uff0c\u8bf7\u67e5\u9605\uff1a https://learn.microsoft.com/en-us/cpp/c-language/assignment-conversions?view=msvc-170 \uff0c\u51fa\u73b0\u95ee\u9898\u67e5\u8fd9\u4e2a\u6587\u6863\u5c31\u591f\u4e86\uff0c\u53ef\u4ee5\u7b97\u6700\u6743\u5a01\u7684\u3002 \u5b9a\u4e49\u4e0e\u58f0\u660e \u5982\u679c\u4e0b\u9762\u7684\u5185\u5bb9\u53ef\u4ee5\u7406\u89e3\uff0c\u90a3\u8bf4\u660e\u4f60\u7684C\u8bed\u8a00\u57fa\u7840\u57fa\u672c\u8fc7\u5173\u3002 int n; /* \u58f0\u660eint\u7c7b\u578bn */ int* p; /* \u58f0\u660eint*\u7c7b\u578b\u6307\u9488p */ int& r; /* \u58f0\u660eint\u5f15\u7528r(C++\u8bed\u6cd5\uff0c\u77e5\u9053\u5373\u53ef) */ int a[10]; /* \u58f0\u660eint[10]\u7c7b\u578b\u6570\u7ec4a */ int f(); /* \u58f0\u660e\u8fd4\u56deint\u7684\u51fd\u6570f */ int f() {} /* \u5b9a\u4e49\u8fd4\u56deint\u7684\u51fd\u6570f */ int* func(); /* \u58f0\u660e\u8fd4\u56deint*\u6307\u9488\u7684\u51fd\u6570func */ int* func() {} /* \u5b9a\u4e49\u8fd4\u56deint*\u6307\u9488\u7684\u51fd\u6570func */ int (*fp)(); /* \u58f0\u660e\u51fd\u6570\u6307\u9488fp\uff0c\u6307\u5411\u4e00\u4e2a\u539f\u578b\u4e3aint f()\u7684\u51fd\u6570 */ \u6709\u5173\u58f0\u660e\u7684\u66f4\u591a\u5185\u5bb9\uff0c\u53c2\u89c1\u89e3\u8bfb \u89e3\u8bfb\u590d\u6742\u7684\u7c7b\u578b\u58f0\u660e \u3002 \u5b8f\u5b9a\u4e49 define\u8868\u8fbe\u5f0f\u65f6 \u4e00\u5f8b\u7528\u62ec\u53f7\u62ec\u8d77\u6765 #define A B + 1 /* \u7981\u6b62\u8fd9\u79cd\u5b8f\u5b9a\u4e49 */ #define A (B + 1) /* \u5efa\u8bae\u4f7f\u7528\u8fd9\u79cd\u5b8f\u5b9a\u4e49 */ \u5b8f\u5b9a\u4e49\u505a\u8fd0\u7b97\u65f6\u64cd\u4f5c\u6570\u672c\u8eab\u4e5f\u8981\u52a0\u62ec\u53f7\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50\uff1a #define SQUARE(X) (X * X) /* \u5e94\u8be5\u90fd\u80fd\u770b\u61c2, \u6c42\u4e00\u4e2a\u6570\u7684\u5e73\u65b9 */ int a = SQUARE(5); int b = SQUARE(2 + 3); /** * \u60f3\u4e00\u60f3, a, b\u7684\u503c\u662f\u591a\u5c11? * \u90fd\u662f25? * \u9519, b = (2 + 3 * 2 + 3) = 11 * \u6240\u4ee5\u5b8f\u5b9a\u4e49\u65f6\u8981\u5bf9\u64cd\u4f5c\u6570\u672c\u8eab\u4e5f\u8981\u52a0\u62ec\u53f7 */ #define SQUARE(X) ((X) * (X)) \u5b9a\u4e49\u4e00\u4e2a\u5e38\u6570\u65f6\u7ecf\u5e38\u540e\u9762\u52a0\u4e0a\u540e\u7f00 F,U,L \uff08\u5927\u5c0f\u5199\u5747\u53ef\uff0c\u4e00\u822c\u5b8f\u5b9a\u4e49\u7528\u5927\u5199\uff0c\u4ee3\u7801\u7528\u5c0f\u5199\uff09\uff0c\u8fd9\u4e2a\u540e\u7f00\u53eb\u505a\u5b57\u9762\u91cf\uff0c\u8ba9\u7f16\u8bd1\u5668\u660e\u767d\u8fd9\u4e2a\u6570\u5e94\u8be5\u662f\u4ec0\u4e48\u7c7b\u578b\uff0c\u907f\u514d\u7f16\u8bd1\u5668\u4e71\u5206\u914d\u7c7b\u578b\u5bfc\u81f4\u8fd0\u7b97\u9519\u8bef\u6216\u8005\u6ea2\u51fa\u3002\u6574\u6570\u4e0d\u52a0\u540e\u7f00\u9ed8\u8ba4\u4e3a int \u7c7b\u578b\uff0c\u6709\u5c0f\u6570\u70b9\u9ed8\u8ba4\u4e3a float \u7c7b\u578b\u3002\u4e00\u822c\u8fd0\u7b97\u503c\u51fa\u9519\u662f\u7531\u4e8e\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u503c\u8fd0\u7b97\uff0c\u6bd4\u5982\u6574\u6570\u548c\u6d6e\u70b9\u8fd0\u7b97\u3002\u4e0b\u9762\u662f\u5b9e\u4f8b\uff1a #define DIAMETER 5.0F /* \u6d6e\u70b9\u6570, \u76f8\u5f53\u4e8efloat */ #define DIAMETER 5.0L /* \u6d6e\u70b9\u6570, \u76f8\u5f53\u4e8edouble */ uint32_t value = 2; float scale = value / DIAMETER; /* \u5982\u679c#define DIAMETER 5, scale\u4e3a0 */ #define ERROR 0U /* \u65e0\u7b26\u53f7\u6570, \u76f8\u5f53\u4e8euint32 */ #define MAX 3000000000L /* \u957f\u6574\u6570, \u76f8\u5f53\u4e8eint64 */ #define DAT0 B1AFF /* F\u7ed3\u5c3e, \u5341\u516d\u8fdb\u5236\u6574\u6570B1AF = 45,487 */ #define DAT1 101B /* B\u7ed3\u5c3e, \u4e8c\u8fdb\u5236\u6574\u6570 */ \u5728\u5b9e\u9645\u5199\u4ee3\u7801\u65f6\u6bd4\u8f83\u5bb9\u6613\u51fa\u73b0\u8fd9\u79cd\u9519\u8bef\uff0c\u56e0\u6b64\u517b\u6210\u597d\u4e60\u60ef\uff0c\u9664\u666e\u901a\u6574\u6570\u5916\u5e38\u6570\u90fd\u52a0\u4e0a\u540e\u7f00\u3002 \u6709\u5173\u9884\u5904\u7406\uff0c\u53c2\u89c1 \u9879\u76ee\u5f00\u53d1/\u9884\u5904\u7406\u547d\u4ee4 \u3002 \u4f4d\u5e26\u64cd\u4f5c\u8bf4\u660e\uff08\u91cd\u8981\uff01\u5fc5\u8bfb\uff01\uff09 \u6b63\u70b9\u539f\u5b50\u5df2\u7ecf\u53d6\u6d88\u65e7\u7248\u4ee3\u7801\u4e2d\u7684\u4f4d\u5e26\u64cd\u4f5c\uff0c\u7ee7\u7eed\u4f7f\u7528\u4ee5\u524d\u7684\u65b9\u6cd5\u7f16\u8bd1\u4f1a\u62a5\u9519\u3002\u5c31\u7b97\u628a\u65e7\u7248 sys.c \u653e\u8fdb\u6765\uff0c\u5728AC6\u7f16\u8bd1\u5668\u5927\u6982\u7387\u7f16\u8bd1\u4e0d\u901a\u8fc7\u3002\u73b0\u4f7f\u7528\u4ee5\u4e0b\u65b9\u5f0f\uff1a /* \u65e7\u7248\u4f4d\u5e26\u64cd\u4f5c\u63a7\u5236IO\u7684\u65b9\u5f0f */ #define LED0 PAout(0) LED0 = 0; /* \u5c06PA0\u62c9\u4f4e */ /* \u65b0\u7248\u5b9a\u4e49\u63a7\u5236IO\u53e3\u65b9\u5f0f */ #define LED0(x) \\ x ? HAL_GPIO_WritePin(LED0_PORT, LED0_PIN, GPIO_PIN_SET) \\ : HAL_GPIO_WritePin(LED0_PORT, LED0_PIN, GPIO_PIN_RESET) /* LED0 */ LED0(0); /* \u5c06PA0\u62c9\u4f4e, \u4e0eLED0 = 0\u7b49\u4ef7 */ // LED0 = 0; /* \u4e0d\u8981\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f, \u7f16\u8bd1\u4f1a\u63d0\u793aLED0\u662f\u4e0d\u53ef\u4fee\u6539\u7684\u5e38\u91cf */ LED0(1); /* \u8fd9\u53e5\u4e0eLED0 = 1\u7b49\u4ef7 */ /* \u65e7\u7248\u8bfb\u53d6IO\u8f93\u5165 */ #define PA1 PAin(1) /* \u73b0\u6539\u6210\u8fd9\u79cd\u65b9\u5f0f */ #define PA1 HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1) /* \u5b8f\u5b9a\u4e49\u4e2d\u4e0d\u53ef\u4ee5\u4ee5\u5206\u53f7\u7ed3\u5c3e, \u5982\u679c\u6709\u591a\u6bb5\u4ee3\u7801\u9700\u8981\u6267\u884c, \u4e14\u4ee5\u5206\u53f7\u7ed3\u5c3e, \u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u65b9\u5f0f */ /* PS: \u6b63\u70b9\u539f\u5b50\u65b0\u4ee3\u7801IO\u90fd\u662f\u8fd9\u79cd\u5b8f\u5b9a\u4e49 */ #define DO1 do { HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_2); } while (0) /** * \u4e0d\u8981\u770b\u5230\u6709while\u5c31\u4ee5\u4e3a\u4f1a\u6267\u884c\u591a\u6b21, \u5176\u5b9e\u4ed6\u53ea\u4f1a\u6267\u884c\u4e00\u6b21 * \u5982\u679c\u4f60\u7684C\u8bed\u8a00\u591f\u624e\u5b9e\u7684\u8bdd, \u8fd9\u6bb5\u4ee3\u7801\u66ff\u6362\u4ee5\u540ewhile(0)\u540e\u9762\u81ea\u52a8\u4f1a\u5e26\u4e00\u4e2a\u5206\u53f7 * \u770b\u4e0d\u61c2, \u6ca1\u5173\u7cfb, \u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50 */ do_pin_sta = DO1; /* \u8fd9\u6bb5\u4ee3\u7801\u5b8f\u5b9a\u4e49\u4ee5\u540e\u548c\u4e0b\u9762\u8fd9\u884c\u662f\u4e00\u6837\u7684 */ do_pin_sta = do { HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_2); } while(0); /* \u6240\u4ee521\u884c\u5b8f\u5b9a\u4e49\u672b\u5c3e\u4e0d\u5e26\u5206\u53f7\u662f\u53ef\u4ee5\u7684, \u7f16\u8bd1\u4e5f\u53ef\u4ee5\u901a\u8fc7 */","title":"C basic"},{"location":"STM32/C_basic/#_1","text":"","title":"\u53d8\u91cf"},{"location":"STM32/C_basic/#_2","text":"\u5b9a\u4e49\u6574\u6570 \u4e00\u5f8b\u4f7f\u7528 stdint.h \u4e2d\u5b9a\u4e49\u7684\u7c7b\u578b \u3002\u5373 uint8_t, uint16_t, uint32_t \u3002 \u4e0d\u8981\u4f7f\u7528\u77ed\u547d\u540d u8\u3001u16\u3001u32 \uff08\u6b63\u70b9\u539f\u5b50\u5df2\u7ecf\u629b\u5f03\u8fd9\u79cd\u547d\u540d\uff09 \u3002\u4e0d\u8981\u4f7f\u7528 int, long, long long \u8fd9\u79cd\u547d\u540d\uff0c\u8fd9\u79cd\u547d\u540d \u65e0\u6cd5\u51c6\u786e\u5f97\u77e5\u7f16\u8bd1\u5668\u5206\u914d\u7684\u53d8\u91cf\u5927\u5c0f\uff0c\u5bb9\u6613\u9020\u6210\u6ea2\u51fa\uff0c \u800c\u4e1416\u4f4d\u300132\u4f4d\u300164\u4f4d\u7684 int , long \u957f\u5ea6\u4e0d\u5b8c\u5168\u4e00\u6837\u3002\u4e0b\u9762\u662f\u53d8\u91cf\u8303\u56f4\u7684\u53c2\u8003\uff1a \u547d\u540d | \u542b\u4e49 | \u8303\u56f4 ---------|--------------------|----------------------------------------------------------------------------- uint8_t | \u65e0\u7b26\u53f7\u4e00\u5b57\u8282(8\u4f4d) | 0 ~ 255 (0 ~ 2^8-1) uint16_t | \u65e0\u7b26\u53f7\u4e24\u5b57\u8282(16\u4f4d) | 0 ~ 65,535 (0 ~ 2^16-1) uint32_t | \u65e0\u7b26\u53f7\u56db\u5b57\u8282(32\u4f4d) | 0 ~ 4,294,967,295 (0 ~ 2^32-1) uint64_t | \u65e0\u7b26\u53f7\u516b\u5b57\u8282(64\u4f4d) | 0 ~ 18,446,744,073,709,551,616 (0 ~ 2^64-1) int8_t | \u6709\u7b26\u53f7\u4e00\u5b57\u8282(8\u4f4d) | -128 ~ +127 (-2^7 ~ 2^7-1) int16_t | \u6709\u7b26\u53f7\u4e24\u5b57\u8282(16\u4f4d) | -32,768 ~ -32,767 (-2^15 ~ 2^15-1) int32_t | \u6709\u7b26\u53f7\u56db\u5b57\u8282(32\u4f4d) | -2,147,483,648 ~ 2,147,483,647 (-2^31 ~ 2^31-1) int64_t | \u6709\u7b26\u53f7\u516b\u5b57\u8282(64\u4f4d) | -9,223,372,036,854,775,808 ~ 9,223,372,036,854,775,807 (-2^63 ~ 2^63-1) \u6211\u4eec\u5728\u4e00\u4e2a\u65b0\u6587\u4ef6\u5199\u4ee3\u7801\u65f6\u53ea\u9700\u8981 #include \"sys.h\" \u5373\u53ef\uff0c\u8fd9\u91cc\u9762\u5c31\u5305\u542b\u4e86 stdint \u7684\u7c7b\u578b\uff08\u9664\u4e86 int64_t, uint64_t \uff09\u3002\u4e0d\u9700\u8981\u518d #include \"stdint.h\" stdint.h \u4e2d\u7684\u4e0a\u8ff0\u51e0\u79cd\u7c7b\u578b\u53eb\u505a\u56fa\u5b9a\u5bbd\u5ea6\u7c7b\u578b\uff0c\u9664\u6b64\u4e4b\u5916\u8fd8\u6709 LEAST, FAST \u7c7b\u578b\u7684\u53d8\u91cf\u3002 LEAST \u6307\u7684\u662f\u7f16\u8bd1\u5668\u81f3\u5c11\u5206\u914d\u7684\u5185\u5b58\u7684\u5927\u5c0f\u3002\u6bd4\u5982\u5b9a\u4e49\u4e00\u4e2a int_least16_t \u7684\u53d8\u91cf\uff0c\u6307\u7684\u662f\u81f3\u5c11\u8981\u5206\u914d2\u5b57\u8282\u7684\u7a7a\u95f4\u7ed9\u8fd9\u4e2a\u53d8\u91cf\uff0c\u7f16\u8bd1\u5668\u4f1a\u6839\u636e\u60c5\u51b5\u66f4\u6539\u8fd9\u4e2a\u53d8\u91cf\u7684\u7a7a\u95f4\uff0c\u4f46\u4e0d\u4f1a\u5c0f\u4e8e2\u5b57\u8282\u3002 FAST \u662f\u6307\u5feb\u7684\u8fd0\u884c\u901f\u5ea6\u3002\u7f16\u8bd1\u5668\u4f1a\u6839\u636e\u5904\u7406\u5668\u5e73\u53f0\u5bf9\u53d8\u91cf\u9488\u5bf9\u6027\u7684\u505a\u901f\u5ea6\u4f18\u5316\u3002\u6bd4\u5982\u5b9a\u4e49\u4e00\u4e2a int_fast8_t \u7684\u53d8\u91cf\uff0c\u5982\u679c32\u4f4d\u6574\u6570\u8fd0\u7b97\u66f4\u5feb\uff0c\u90a3\u4e48\u7f16\u8bd1\u5668\u4f1a\u628a\u8fd9\u4e2a\u53d8\u91cf\u76f4\u63a5\u5206\u914d4\u5b57\u8282\u7684\u7a7a\u95f4\u3002\u5176\u4ed6\u4f4d\u6570\u7684\u7c7b\u4f3c\uff0c\u5177\u4f53\u53ef\u4ee5\u770b\u770b stdint.h \u4e2d\u7684\u5b9a\u4e49\u3002 \u5bf9\u4e8e\u4e00\u4e2a\u4f7f\u7528 stdint \u4e2d\u7684\u7c7b\u578b\u5b9a\u4e49\u7684\u6574\u6570 \uff0c\u4f7f\u7528\u683c\u5f0f\u63a7\u5236\u7b26\uff08\u4e5f\u5c31\u662f printf, sprintf, scanf \u4e2d\u7684 %d, %ld \uff09\u8f93\u51fa\u6574\u6570\u65f6\uff0c\u4f01\u4e1a\u4e00\u822c\u4f7f\u7528 inttypes.h \u4e2d\u7684\u683c\u5f0f\u63a7\u5236\u7b26\uff0c\u4e0d\u4f7f\u7528 %d \u63a7\u5236\u7b26\u3002\u4e0b\u9762\u662fLLVM\u9879\u76ee\u7684\u4ee3\u7801\uff0c\u53ef\u4ee5\u770b\u5230\u8f93\u51fa\u4f7f\u7528\u7684\u662f inttypes.h \u7684\u7c7b\u578b\uff0c\u800c\u4e0d\u662f %d, %lld \u3002 \u5bf9\u4e8e\u4e00\u4e2a int32_t \u7684\u6570\u5b57\uff0c\u5982\u679c\u4f7f\u7528\u666e\u901a\u65b9\u6cd5\u8f93\u51fa\u5c31\u5199\u6210 printf(\"num = %d\\n\", num); \uff1b\u5982\u679c\u662f\u5176\u4ed6\u7c7b\u578b\uff0c\u6bd4\u5982 int8_t, uint16_t, uint8_t \uff0c\u4ec5\u5355\u7eaf\u4ece %d, %hu, %hhu \uff08\u4f30\u8ba1\u4f60\u4eec\u90fd\u6ca1\u89c1\u8fc7 %h \uff09\u8fd9\u79cd\u51e0\u4e2a\u5b57\u6bcd\u7684\u63a7\u5236\u7b26\u6765\u5224\u65ad\u6574\u6570\u7c7b\u578b\u5c31\u663e\u5f97\u5f88\u9ebb\u70e6\u3002\u56e0\u6b64\u4e0a\u9762\u7684\u8f93\u51fa\u53ef\u4ee5\u5199\u6210 printf(\"num = %\" PRId32 \"\\n\", num); \u4e5f\u5c31\u662f\u628a % \u540e\u9762\u7684 d \u6362\u6210 PRIxxx \uff08\u6ce8\u610f\u5f15\u53f7\uff0c\u540e\u9762\u7684 PRId32 \u4e0d\u80fd\u518d\u5f15\u53f7\u91cc\u9762\uff0c\u5426\u5219\u5c31\u6210\u4e86\u5b57\u7b26\u4e32\uff0c\u524d\u9762\u5b57\u7b26\u4e32\u7684 % \u4e0d\u80fd\u4e22\uff09\u3002\u5bf9\u4e8e scanf \uff0c\u5bf9\u5e94\u7684\u5c31\u662f SCNxxx \u3002\u5176\u5b9e PRIxxx \u548c SCNxxx \u5728\u4ee3\u7801\u91cc\u662f\u5b8c\u5168\u7b49\u4ef7\u7684\uff0c\u53ea\u4e0d\u8fc7\u4e3a\u4e86\u533a\u5206\u5199\u6210\u8fd9\u6837\u3002 PRI/SCN \u540e\u7b2c\u4e00\u4e2a\u5b57\u6bcd\uff0c u \u5bf9\u5e94\u65e0\u7b26\u53f7\uff0c d \u5bf9\u5e94\u6709\u7b26\u53f7\uff0c x \u5bf9\u5e94\u5341\u516d\u8fdb\u5236\uff08\u6709\u7b26\u53f7\u8d1f\u6570\u5c31\u8f93\u51fa\u8865\u7801\uff09\uff1b\u63a5\u4e0b\u6765\u5982\u679c\u662f fast, least \u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u540e\u9762\u8ddf FAST, LEAST \uff0c\u5982\u679c\u4e0d\u662f\u5c31\u6ca1\u6709\uff1b\u6700\u540e\u8ddf\u4e0a\u53d8\u91cf\u7684\u5bbd\u5ea6\u3002\u53ef\u80fd\u6ca1\u770b\u61c2\uff0c\u4e3e\u51e0\u4e2a\u4f8b\u5b50\u5e94\u8be5\u5c31\u61c2\u4e86\u3002 int8_t \u5bf9\u5e94 PRId8 \uff0c uint16_t \u5bf9\u5e94 PRIu16 \uff0c uint8_t \u5341\u516d\u8fdb\u5236\u8f93\u51fa\u5bf9\u5e94 PRIx8 \uff0c int_least32_t \u5bf9\u5e94 PRIdLEAST32 \uff0c uint_fast16_t \u5bf9\u5e94 PRIuFAST16 \u3002 PRI \u4e0e SCN \u5728\u7f16\u8bd1\u5668\u770b\u6765\u5b8c\u5168\u7b49\u4ef7\u3002\u5177\u4f53\u53ef\u4ee5\u6253\u5f00 inttypes.h \u770b\u3002 \u7c7b\u4f3c printf \u7684\u8f93\u51fa\u683c\u5f0f\u4e00\u822c\u53ea\u5728\u8c03\u8bd5\uff0c\u6216\u8005\u4f5c\u4e3aCLI\u8f93\u51fa\u4fe1\u606f\u65f6\u4f7f\u7528\uff0c\u4e0d\u4f1a\u5728\u901a\u4fe1\u4e2d\u4f7f\u7528\u3002\u6570\u636e\u901a\u4fe1\u4e00\u822c\u90fd\u662f\u4ece\u4e8c\u8fdb\u5236\u4f4d\u53bb\u5b9a\u4e49\u3002 \u6574\u6570\u6ca1\u6709\u4f60\u60f3\u8c61\u7684\u90a3\u4e48\u7b80\u5355\uff0c\u56e0\u4e3a\u5b83\u592a\u5e38\u7528\u4e86\uff0c\u5728\u4e00\u4e2a\u4f01\u4e1a\u9879\u76ee\u4e2d\u7528\u4ec0\u4e48\u5bbd\u5ea6\u7684\u6570\uff0c\u662f\u5426\u56fa\u5b9a\u4f4d\u6570\uff0c\u90fd\u662f\u6709\u8bb2\u7a76\u7684\uff0c\u4e0d\u662f\u968f\u4fbf\u778e\u5b9a\u4e49\u7684\u3002\u8fd9\u4e9b\u89c4\u8303\u3001\u5934\u6587\u4ef6\u5b9a\u4e49\u4e86\u4e00\u5806\u770b\u4f3c\u6ca1\u7528\u7684\u4e1c\u897f\uff0c\u5176\u5b9e\u5f88\u6709\u7528\uff0c\u4ed6\u4eec\u90fd\u662f\u4ece\u5b9e\u9645\u9879\u76ee\u5f00\u53d1\u4e2d\u5f97\u5230\u7684\u7ecf\u9a8c\u548c\u6559\u8bad\uff0c\u800c\u4e0d\u662f\u81ea\u5df1\u4e3b\u89c2\u81c6\u65ad\u5b9a\u4e49\u7684\u3002 \u5c31\u6bd4\u5982\u4e0a\u9762\u7684\u683c\u5f0f\u63a7\u5236\u7b26\uff0c\u4f60\u53ef\u80fd\u4f1a\u60f3\uff0c PRI \u548c SCN \u4e0d\u90fd\u662f\u4e00\u6837\u7684\u5417\uff0c\u7edf\u4e00\u6210 PRI \u6216\u8005\u5176\u4ed6\u5355\u8bcd\u4e0d\u884c\u5417\uff0c\u7b54\u6848\u662f\u4e0d\u884c\u3002\u5f53\u4f60\u53bb\u9605\u8bfb\u4e0a\u5343\u4e2a\u6587\u4ef6\u7684\u9879\u76ee\u4ee3\u7801\u65f6\uff0c\u5982\u679c\u90fd\u5199 PRI \uff0c\u4f60\u53ef\u80fd\u5c31\u628a\u539f\u6765\u8f93\u5165\u7684\u529f\u80fd\u88ab\u5f53\u6210\u8f93\u51fa\u4e86\uff0c\u7136\u540e\u540e\u9762\u7684\u4eba\u90fd\u5f53\u8f93\u51fa\u6765\u5199\uff0c\u8fd9\u5728\u4f01\u4e1a\u9879\u76ee\u91cc\u662f\u76f8\u5f53\u4e25\u91cd\u7684\u95ee\u9898\uff0c\u53ef\u80fd\u4f1a\u9020\u6210\u4e25\u91cd\u7684\u635f\u5931\uff0c\u4f60\u53ef\u80fd\u5c31\u88ab\u5f00\u4e86\u3002","title":"\u6574\u6570"},{"location":"STM32/C_basic/#_3","text":"\u6709\u4e9b\u4ee3\u7801\u4f1a\u628a\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570 float \u5b9a\u4e49\u6210 fp32 \uff0c\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570 double \u5b9a\u4e49\u6210 fp64 \u3002\u5728\u6df1\u5ea6\u5b66\u4e60\u4e2d\u4f1a\u4f7f\u7528\u534a\u7cbe\u5ea6\u6d6e\u70b9\u6570 fp16 \u8fdb\u884c\u8fd0\u7b97\u3002C\u8bed\u8a00\u4e2d\u6ca1\u6709\u534a\u7cbe\u5ea6\u6d6e\u70b9\u6570\uff0c\u56e0\u6b64\u8fd9\u91cc\u5c31\u6ca1\u6709\u5fc5\u8981\u4f7f\u7528\u8fd9\u79cd\u5b9a\u4e49\u4e86\u3002\u4e0b\u9762\u662f\u4e0d\u540c\u7cbe\u5ea6\u7684\u6d6e\u70b9\u6570\u8303\u56f4\u53c2\u8003\uff1a \u547d\u540d | \u542b\u4e49 | \u8303\u56f4 -------|-------------------|------------------------------------------------------------------ float | \u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570(32\u4f4d) | 1bit(\u7b26\u53f7\u4f4d) 23bits(\u5c3e\u6570\u4f4d) 8bits(\u6307\u6570\u4f4d) -3.40E+38 ~ +3.40E+38 double | \u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570(64\u4f4d) | 1bit(\u7b26\u53f7\u4f4d) 52bits(\u5c3e\u6570\u4f4d) 11bits(\u6307\u6570\u4f4d) -1.79E+308 ~ +1.79E+308 \u6d6e\u70b9\u6570\u9075\u5faaIEEE754\u6807\u51c6\uff0c float \u7684\u8303\u56f4\u662f -2^127 ~ 2^127 \uff0c double \u7684\u8303\u56f4\u662f -2^1024 ~ 2^1024 \u3002\u8fd9\u4e2a\u8303\u56f4\u5177\u4f53\u600e\u4e48\u8ba1\u7b97\u7684\uff0c\u548c\u6d6e\u70b9\u6570\u7684\u5b58\u50a8\u6709\u5173\u3002\u6709\u4e9b\u590d\u6742\u8fd9\u91cc\u5c31\u4e0d\u8bb2\u4e86\uff0c\u53ef\u4ee5\u81ea\u5df1\u770b\u4e00\u4e9b\u6587\u7ae0\u3002 \u5728\u505a\u6d6e\u70b9\u8fdb\u5236\u8f6c\u6362\u65f6\u4e0d\u53ef\u907f\u514d\u4f1a\u51fa\u73b0\u7cbe\u5ea6\u4e22\u5931\uff0c\u8fd9\u662f\u7531\u4e8e\u5728\u5341\u8fdb\u5236\u4e2d\u7684\u5c0f\u6570\uff0c\u5728\u4e8c\u8fdb\u5236\u4e2d\u53ef\u80fd\u662f\u4e2a\u65e0\u9650\u5faa\u73af\u7684\u6570\u3002\u56e0\u6b64\u5728\u8f93\u51fa\u67d0\u4e9b\u5c0f\u6570\u65f6\u672b\u5c3e\u4f1a\u51fa\u73b0000000001\u6216\u8005999999999\u3002 float \u7684\u7cbe\u5ea6\u53ea\u67096\u4f4d\uff0c double \u7684\u7cbe\u5ea6\u670915\u4f4d\u3002\u6839\u636e\u60c5\u51b5\u9009\u62e9\u6d6e\u70b9\u6570\u7684\u7c7b\u578b\uff0c\u5982\u679c\u7cbe\u5ea6\u66f4\u91cd\u8981\uff0c\u9009\u62e9 double \u7c7b\u578b\uff1b\u5982\u679c\u901f\u5ea6\u548c\u5b58\u50a8\u7a7a\u95f4\u66f4\u91cd\u8981\uff0c\u9009\u62e9 float \u3002 \u5bf9\u4e8eCortex-M4\u5185\u6838\uff0c\u53ef\u4ee5\u4f7f\u7528\u786c\u4ef6FPU\uff08Floating-Point Unit\uff0c\u6d6e\u70b9\u8fd0\u7b97\u5355\u5143\uff09\u6765\u63d0\u5347\u6d6e\u70b9\u6570\u8fd0\u7b97\u901f\u5ea6\uff0c\u5728Keil\u4e2d\u9009\u62e9\u4e0b\u9762\u7684\u9009\u9879\u5373\u53ef\u4f7f\u7528FPU\u3002 \u6ce8\u610f\uff1aCortex-M3\u6ca1\u6709FPU\uff0c\u4e5f\u5c31\u8bf4\u660e\u6574\u4e2aSTM32F1\u5bb6\u65cf\u90fd\u6ca1\u6709FPU\u3002STM32F4\u5bb6\u65cf\u662fCortex-M4\u5185\u6838\uff0c\u6709FPU\u3002\u6709\u5173FPU\u7684\u5185\u5bb9\u53c2\u9605 \u5de5\u5177\u94fe-\u7f16\u8bd1\u53c2\u6570 \u3002","title":"\u6d6e\u70b9\u6570"},{"location":"STM32/C_basic/#bool","text":"\u903b\u8f91\u503c\u4f7f\u7528 stdbool.h \u4e2d\u5b9a\u4e49\u7684bool\u503c\u3002\u5c3d\u91cf\u4e0d\u8981\u81ea\u5df1\u5b9a\u4e49\uff0c\u4ee5\u9632\u91cd\u590d\u5b9a\u4e49\u3002 \u6ce8\u610f\uff0c\u5728 stdbool.h \u4e2d\uff0c true \u4e3a1, false \u4e3a0\u3002\u8fd9\u4f1a\u5f71\u54cd\u5230\u6761\u4ef6\u5224\u65ad\uff0c\u53c2\u89c1\u4e0b\u9762 \u6761\u4ef6\u5224\u65ad \u3002","title":"\u903b\u8f91\u503cbool"},{"location":"STM32/C_basic/#_4","text":"\u516c\u5f00\u7684\u7ed3\u6784\u4f53\u5b9a\u4e49\u4e00\u5f8b\u653e\u5728 .h \u6587\u4ef6\u4e2d \uff0c\u9664\u975e\u662f\u51fd\u6570\u5185\u90e8\u4f7f\u7528\uff0c\u5426\u5219\u4e0d\u8981\u653e\u5728 .c \u4e2d\u3002 \u4e3a\u4e86\u65b9\u4fbf\uff0c\u4e00\u822c\u90fd\u4f7f\u7528 typedef \u5b9a\u4e49\u540d\u79f0\uff0c\u7ed3\u5c3e\u90fd\u6807\u4e00\u4e2a _t \u6216\u8005 TypeDef \u4ee5\u8868\u660e\u8fd9\u662f\u4e00\u4e2a\u4f7f\u7528 typedef \u5b9a\u4e49\u7684\u540d\u79f0\u3002\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\u53d8\u91cf\u4f7f\u7528 typename variable \uff0c\u4e0d\u4f7f\u7528 struct typename variable \uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50\uff1a /* \u679a\u4e3e\u7c7b\u578b\u5b9a\u4e49, \u4e00\u822c\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u6216\u8005\u8fd4\u56de\u503c\u4f20\u51fa */ /** * @brief HAL State structures definition */ typedef enum { HAL_CAN_STATE_RESET = 0x00U, /*!< CAN not yet initialized or disabled */ HAL_CAN_STATE_READY = 0x01U, /*!< CAN initialized and ready for use */ ...... HAL_CAN_STATE_ERROR = 0x05U /*!< CAN error state */ } HAL_CAN_StateTypeDef; /** * @brief Return the CAN state. * @param hcan pointer to a CAN_HandleTypeDef structure that contains * the configuration information for the specified CAN. * @retval HAL state * @note \u8fd9\u4e2a\u51fd\u6570\u8fd4\u56de\u7684\u5c31\u662f\u4e00\u4e2a\u679a\u4e3e\u7c7b\u578b */ HAL_CAN_StateTypeDef HAL_CAN_GetState(CAN_HandleTypeDef *hcan) { ...... /* Return CAN state */ return state; } /* \u7ed3\u6784\u4f53\u5b9a\u4e49 */ /** * @brief CAN handle Structure definition */ typedef struct __CAN_HandleTypeDef { CAN_TypeDef* Instance; /*!< Register base address */ CAN_InitTypeDef Init; /*!< CAN required parameters */ ...... } CAN_HandleTypeDef; CAN_HandleTypeDef CAN1_Handler; /* \u5b9a\u4e49\u4e00\u4e2aCAN_HandleTypeDef\u7c7b\u578b\u7684\u53d8\u91cf */ \u6709\u65f6\u4e3a\u4e86\u8ba9\u7f16\u8bd1\u5668\u5bf9\u6210\u5458\u53d8\u91cf\u8fdb\u884c\u5185\u5b58\u5bf9\u9f50\uff0c\u4f1a\u4f7f\u7528 __packed \u548c __align(num) \u5173\u952e\u5b57\u3002\u8fd9\u91cc\u5c31\u4e0d\u7ec6\u8bb2\u4e86\uff0c\u5982\u679c\u5bf9\u5e95\u5c42\u4e86\u89e3\u4e0d\u591f\u6df1\u5165\u7684\u8bdd\u5c31\u4e0d\u8981\u4f7f\u7528\u4e86\u3002\u7ee7\u7eed\u6df1\u5165\u9700\u8981\u8bb2\u53d8\u91cf\u5982\u4f55\u5728\u5185\u5b58\u4e2d\u5b58\u50a8\u7b49\u3002\u611f\u5174\u8da3\u53ef\u4ee5\u770b\u770b\u76f8\u5173\u6587\u7ae0\u3002 \u5f53\u5b9a\u4e49\u7ed3\u6784\u4f53\u6210\u5458\u7684\u67d0\u4e9b\u503c\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u5199\u6cd5\uff1a typedef struct { uint32_t Pin; uint32_t Mode; uint32_t Pull; uint32_t Speed; } GPIO_InitTypeDef; GPIO_InitTypeDef gpio_initure = {.Pin = GPIO_PIN_9, .Mode = GPIO_MODE_AF_PP, .Pull = GPIO_PULLUP, .Speed = GPIO_SPEED_FREQ_HIGH}; /* \u8fd9\u6837\u4e0e\u4e0b\u9762\u7684\u65b9\u5f0f\u76f8\u540c */ GPIO_InitTypeDef gpio_initure = {GPIO_PIN_9, GPIO_MODE_AF_PP, GPIO_PULLUP, GPIO_SPEED_FREQ_HIGH}; \u4e5f\u5c31\u662f\u6211\u4eec\u53ef\u4ee5\u5728\u5b9a\u4e49\u53d8\u91cf\u7684\u65f6\u5019\uff0c\u5728\u82b1\u62ec\u53f7\u91cc\u9762\u7528 .\u6210\u5458\u540d\u79f0 \u7684\u65b9\u5f0f\u6307\u5b9a\u6210\u5458\u7684\u503c\uff0c\u8fd9\u6837\u5199\u7684\u597d\u5904\u662f\u53ef\u8bfb\u6027\u5f3a\uff0c\u53ef\u4ee5\u51cf\u5c11\u4ee3\u7801\u5197\u4f59\u3002\u5982\u679c\u4e0d\u5b9a\u4e49\u67d0\u4e9b\u6210\u5458\u7684\u503c\uff0c\u76f4\u63a5\u4e0d\u7528\u5199\uff0c\u6ca1\u6709\u5f71\u54cd\u3002","title":"\u7ed3\u6784\u4f53/\u679a\u4e3e"},{"location":"STM32/C_basic/#_5","text":"\u53d8\u91cf\u4fee\u9970\u7b26\u6709 auto, static, const, volatile, register, extern \u7b49\u3002\u4e0b\u9762\u53ea\u8bb2 extern, static, const \uff0c\u5176\u4ed6\u7684\u8bf7\u590d\u4e60\u4f60\u7684C\u8bed\u8a00\u3002 extern \u7528\u6765\u58f0\u660e\u4e00\u4e2a\u5916\u90e8\u53d8\u91cf\uff0c\u4ed6\u53ea\u662f\u4e00\u4e2a\u5360\u4f4d\u7684\uff0c\u544a\u8bc9\u7f16\u8bd1\u5668\u8fd9\u4e2a\u53d8\u91cf\u5728\u522b\u7684\u5730\u65b9\u5b9a\u4e49\u4e86\uff0c\u81ea\u5df1\u53bb\u627e\u3002\u5982\u679c\u4e00\u4e2a\u53d8\u91cf\u8981\u516c\u5f00\uff0c\u5728\u540c\u540d\u7684 .h \u52a0\u4e00\u4e2a extern \u58f0\u660e\u5373\u53ef\u3002\u5982\u679c\u4e00\u4e2a\u6587\u4ef6\u8981\u5f15\u7528\u53e6\u4e00\u4e2a\u6587\u4ef6\u7684\u53d8\u91cf\uff0c \u5728\u54ea\u91cc\u7528\u5c31\u5728\u54ea\u91cc\u58f0\u660e \u3002 static \u53ef\u4ee5\u5ef6\u957f\u5c40\u90e8\u53d8\u91cf\u7684\u751f\u5b58\u5468\u671f\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u51fd\u6570\u51fa\u6808\u4ee5\u540e\u53d8\u91cf\u7684\u503c\u4f1a\u4fdd\u7559\u3002\u5176\u5b9e\u7f16\u8bd1\u5668\u5206\u914d\u5e26 static \u7684\u5c40\u90e8\u53d8\u91cf\u7684\u65f6\u5019\uff0c\u548c\u5168\u5c40\u53d8\u91cf\u5206\u914d\u7684\u4f4d\u7f6e\u662f\u4e00\u6837\u7684\uff0c\u4e00\u4e2a\u51fd\u6570\u53ef\u4ee5\u901a\u8fc7\u6307\u9488\u83b7\u53d6\u5230\u5176\u4ed6\u51fd\u6570\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u7684\u503c\uff08\u8bf7\u53c2\u89c1\u7f16\u8bd1\u539f\u7406\uff09\u3002 \u5982\u679c static \u52a0\u5728\u5168\u5c40\u53d8\u91cf\u6216\u8005\u51fd\u6570\u524d\uff0c\u8bf4\u660e\u8fd9\u4e2a\u53d8\u91cf\u6216\u51fd\u6570 \u53ea\u80fd\u88ab\u8fd9\u4e2a\u6587\u4ef6\u6240\u4f7f\u7528 \u3002\u5176\u4ed6\u6587\u4ef6\u65e0\u6cd5\u901a\u8fc7 extern \u8bbf\u95ee\u8fd9\u4e2a\u53d8\u91cf\uff0c\u4e5f\u65e0\u6cd5\u8c03\u7528\u51fd\u6570\u3002 const \u4ee3\u8868\u8fd9\u4e2a\u53d8\u91cf\u7684\u503c\u65e0\u6cd5\u88ab\u4fee\u6539\u3002","title":"\u53d8\u91cf\u4fee\u9970\u7b26"},{"location":"STM32/C_basic/#_6","text":"","title":"\u51fd\u6570"},{"location":"STM32/C_basic/#_7","text":"\u51fd\u6570\u524d\u4fee\u9970\u7b26\u6709 __weak, static, inline \u7b49\u4fee\u9970\u7b26\u3002 __weak \u4fee\u9970\u7b26\u8bf4\u660e\u8fd9\u4e2a\u51fd\u6570\u662f\u5f31\u51fd\u6570\uff0c\u53ef\u4ee5\u5728\u5176\u4ed6\u5730\u65b9\u91cd\u65b0\u5b9a\u4e49\u8fd9\u4e2a\u51fd\u6570\u3002\u5982\u679c\u6ca1\u6709\u91cd\u5b9a\u4e49\uff0c\u5c06\u4f1a\u4f7f\u7528\u8fd9\u4e2a\u5e26 __weak \u7684\u51fd\u6570\u3002 __weak \u4fee\u9970\u7b26\u5728\u5b9a\u4e49\u65f6\u6709\u7528\uff0c\u58f0\u660e\u65e0\u7528\u3002 \u4e00\u822cHAL\u4e2d\u7684 MspInit, MspDeInit, Callback \u90fd\u662f\u5f31\u5b9a\u4e49\u51fd\u6570\uff0c\u6211\u4eec\u76f4\u63a5\u53ef\u4ee5\u91cd\u5b9a\u4e49\u3002 \u6bd4\u5982\u4e0b\u9762\u662f stm32f4x_hal_can.h \u4e2d\u7684\u63a5\u6536\u90ae\u7bb1FIFO0\u6302\u8d77\u4e2d\u65ad\u56de\u8c03\u51fd\u6570\uff0c\u6211\u4eec\u4e00\u822c\u4f1a\u91cd\u5b9a\u4e49\u8fd9\u4e2a\u51fd\u6570\uff1a /** * @brief Rx FIFO 0 message pending callback. * @param hcan pointer to a CAN_HandleTypeDef structure that contains * the configuration information for the specified CAN. * @retval None */ __weak void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan) { /* Prevent unused argument(s) compilation warning */ UNUSED(hcan); /* NOTE : This function Should not be modified, when the callback is needed, the HAL_CAN_RxFifo0MsgPendingCallback could be implemented in the user file */ } /* \u5728can.c\u4e2d\u91cd\u5b9a\u4e49 */ /** * @brief CAN\u63a5\u6536\u90ae\u7bb1FIFO0\u6302\u8d77\u4e2d\u65ad * * @param hcan CAN\u53e5\u67c4 */ void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan) { if (hcan->Instance == CAN1) { /* \u5982\u679c\u662fCAN1\u6536\u5230\u6d88\u606f */ ...... } } static \u4e0a\u9762\u8bb2\u8fc7\u4e86\uff0c\u6307\u5b9a\u8fd9\u4e2a\u51fd\u6570\u53ea\u80fd\u88ab\u672c\u6587\u4ef6\u6240\u4f7f\u7528\uff0c\u4e0d\u80fd\u88ab\u5176\u4ed6\u6587\u4ef6\u4f7f\u7528\u3002 inline \u662fC99\u5f15\u5165\u7684\u5173\u952e\u5b57\uff0cC89\u6ca1\u6709\uff0c\u7f16\u8bd1\u4f1a\u62a5\u9519\u3002 inline \u4fee\u9970\u7b26\u662f\u6307\u8fd9\u4e2a\u51fd\u6570\u662f\u5185\u8054\u51fd\u6570\u3002 inline \u53ea\u5728\u5b9a\u4e49\u51fd\u6570\u7684\u65f6\u5019\u6709\u7528\uff0c\u58f0\u660e\u65e0\u7528\u3002\u5982\u679c\u4e00\u4e2a\u51fd\u6570\u7ecf\u5e38\u9700\u8981\u8c03\u7528\uff0c\u9891\u7e41\u7684\u51fa\u5165\u6808\u64cd\u4f5c\u4f1a\u4f7f\u7a0b\u5e8f\u8fd0\u884c\u7684\u6548\u7387\u5927\u6253\u6298\u6263\uff0c\u56e0\u6b64\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u51fd\u6570\u4f5c\u4e3a\u5185\u8054\u51fd\u6570\u76f4\u63a5\u5d4c\u5165\u5230\u8c03\u7528\u7684\u5730\u65b9\uff0c\u5f53\u6210\u51fd\u6570\u7684\u4e00\u90e8\u5206\u4ee3\u7801\u7247\u6bb5\uff0c\u4e0d\u5fc5\u8fdb\u884c\u4e00\u6b21\u51fa\u5165\u6808\u64cd\u4f5c\u3002\u4e00\u822c inline \u4fee\u9970\u7b26\u4e0e static \u642d\u914d\u4f7f\u7528\uff0c\u6784\u6210 static inline \u4fee\u9970\u7b26\uff0c\u4e00\u4e2a\u9891\u7e41\u8c03\u7528\u7684\u51fd\u6570\u5728\u4e00\u4e2a\u6587\u4ef6\u4e2d\u6548\u7387\u6bd4\u8f83\u9ad8\u3002 \u4e0d\u8fc7 inline \u53ea\u662f\u7ed9\u7f16\u8bd1\u5668\u7684\u4e00\u4e2a\u5efa\u8bae\uff0c\u5f53\u4e00\u4e2a\u51fd\u6570\u4e2d\u7684\u8bed\u53e5\u8f83\u5c11\uff0c\u6ca1\u6709\u5faa\u73af\u7684\u65f6\u5019\u7f16\u8bd1\u5668\u624d\u4f1a\u5185\u8054\u3002\u5426\u5219\u5b83\u8ddf\u666e\u901a\u51fd\u6570\u4e00\u6837\uff0c\u8d70\u4e00\u904d\u5165\u6808\u3001\u6267\u884c\u3001\u51fa\u6808\u7684\u6d41\u7a0b\u3002 \u5728gcc\u7f16\u8bd1\u5668\u4e2d\uff0cO0\u4f18\u5316\u4f1a\u5ffd\u7565 inline \uff0cO1\u624d\u4f1a\u5185\u8054\u3002\u6709\u5173\u4f18\u5316\u7ea7\u522b\uff0c\u53c2\u89c1 \u7f16\u8bd1\u53c2\u6570 \u3002 \u6ce8\u610f\uff1aC\u8bed\u8a00\u4e0eC++\u7684 inline \u662f\u4e0d\u540c\u7684\uff0c\u5177\u4f53\u53c2\u89c1 https://www.zhihu.com/question/270847649 \u3002 \u4e0d\u8981\u6ee5\u7528\u5185\u8054\u51fd\u6570\uff0c\u4e00\u822c\u51fd\u6570\u572810\u884c\u4ee5\u4e0b\u4e14\u8c03\u7528\u9891\u7e41\u624d\u8981\u8003\u8651\u5185\u8054\uff0c\u5426\u5219\u6548\u679c\u53ef\u80fd\u4e0d\u5982\u4e0d\u5185\u8054\u3002","title":"\u51fd\u6570\u4fee\u9970\u7b26"},{"location":"STM32/C_basic/#_8","text":"\u51fd\u6570\u6307\u9488\u5728C\u8bed\u8a00\u662f\u4e00\u5e26\u800c\u8fc7\u7684\uff0c\u4f46\u662f\u5728\u5e95\u5c42\u5f00\u53d1\u4e2d\u4f1a\u7ecf\u5e38\u7528\u5230\u3002 \u51fd\u6570\u6307\u9488\u5c31\u662f\u6307\u5411\u51fd\u6570\u7684\u6307\u9488\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50\uff1a #include \"stdio.h\" int sum(int num1, int num2) { return num1 + num2; } int sub(int num1, int num2) { return num1 - num2; } int main(int argc, char const* argv[]) { int a = 10, b = 5; int (*func)(int, int); /* \u58f0\u660e\u51fd\u6570\u6307\u9488func, \u51fd\u6570\u539f\u578b\u4e3aint (int, int) */ func = sum; /* func\u6307\u5411sum\u51fd\u6570 */ printf(\"a + b = %d\\n\", func(a, b)); func = sub; /* func\u6307\u5411sub\u51fd\u6570 */ printf(\"a - b = %d\\n\", func(a, b)); return 0; } \u6267\u884c\u7ed3\u679c\uff1a a + b = 15 a - b = 5 \u53ef\u4ee5\u601d\u8003\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u3002\u9996\u5148 func = sum \uff0c\u90a3\u4e48\u76f8\u5f53\u4e8e func \u5c31\u662f sum \u51fd\u6570\uff0c\u8c03\u7528 func \u5c31\u662f\u8c03\u7528 sum \u3002\u5176\u6b21 func = sub \uff0c\u8c03\u7528 func \u5c31\u662f\u8c03\u7528 sub \u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\u7ed9 func \u8d4b\u503c\u7684\u662f\u51fd\u6570\u540d\uff0c\u4e0d\u80fd\u5e26\u62ec\u53f7\uff0c\u5426\u5219\u5c31\u662f\u4e00\u4e2a\u51fd\u6570\u7684\u8c03\u7528\u3002\u5982\u679c\u4e00\u4e2a\u51fd\u6570\u8fd4\u56de\u7684\u662f\u51fd\u6570\u6307\u9488\uff0c\u90a3\u53ef\u4ee5\u5e26\u62ec\u53f7\u3002\u51fd\u6570\u6307\u9488\u540c\u6837\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u6570\u548c\u8fd4\u56de\u503c\u3002 \u58f0\u660e\u51fd\u6570\u6307\u9488\u7684\u53c2\u6570\u5217\u8868 (int, int) \u53ef\u4ee5\u5199\u6210 (int a, int b) \uff0c\u4e5f\u4e0d\u4e00\u5b9a\u975e\u5f97\u662f a,b \uff0c\u53c2\u6570\u540d\u4efb\u610f\uff0c\u6240\u4ee5\u4e00\u822c\u4e0d\u5199\u53c2\u6570\u540d\u3002 \u51fd\u6570\u6307\u9488\u4e00\u822c\u7528\u5728\u56de\u8c03\u51fd\u6570\uff0c\u9996\u5148\u521d\u59cb\u5316\u7684\u65f6\u5019\u5c06\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\uff0c\u5f53\u56de\u8c03\u7684\u65f6\u5019\u4f1a\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u3002 ST HAL\u5e93\u7684\u4e2d\u65ad\u56de\u8c03\u51fd\u6570\u53ef\u4ee5\u7528\u51fd\u6570\u6307\u9488\u5b9e\u73b0\uff0c\u53c2\u7167 HAL Driver \u3002","title":"\u51fd\u6570\u6307\u9488"},{"location":"STM32/C_basic/#_9","text":"\u8fd9\u91cc\u53ea\u662f\u7b80\u5355\u63d0\u4e00\u4e0b\uff0c\u66f4\u6df1\u5165\u7684\u5185\u5bb9\u8bf7\u53c2\u89c1\u64cd\u4f5c\u7cfb\u7edf\u3002 \u53ef\u91cd\u5165\uff0c\u5b57\u9762\u610f\u601d\u5c31\u662f\u53ef\u4ee5\u91cd\u65b0\u8fdb\u5165\u3002\u5f53\u4e2d\u65ad\u8bf7\u6c42\u4f20\u5165CPU\u65f6\uff0cCPU\u4f1a\u5148\u505c\u6b62\u5f53\u524d\u6b63\u5728\u6267\u884c\u7684\u51fd\u6570\uff0c\u53bb\u6267\u884c\u4e2d\u65ad\u8bf7\u6c42\u3002\u6267\u884c\u5b8c\u4e2d\u65ad\u4ee5\u540e\u624d\u4f1a\u7ee7\u7eed\u6267\u884c\u88ab\u6253\u65ad\u7684\u51fd\u6570\u3002\u7ee7\u7eed\u6267\u884c\u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u662f\u5bf9\u5e94\u91cd\u5165\u8fd9\u4e2a\u8bcd\u3002 \u53ef\u91cd\u5165\u51fd\u6570\u662f\u6307\u53ef\u4ee5\u88ab\u4e2d\u65ad\u6253\u65ad\u7684\u51fd\u6570\u3002\u4e0d\u53ef\u91cd\u5165\u51fd\u6570\u5f53\u7136\u5c31\u662f\u4e0d\u80fd\u88ab\u4e2d\u65ad\u6253\u65ad\u7684\u51fd\u6570\u3002 \u5f53\u4e00\u4e2a\u4e2d\u65ad\u4f20\u5165CPU\u65f6\uff0cCPU\u4f1a\u5148\u5bf9\u6b63\u5728\u6267\u884c\u7684\u51fd\u6570\u4fdd\u5b58\u73b0\u573a\uff08\u5047\u8bbe\u8fd9\u4e2a\u6b63\u5728\u6267\u884c\u7684\u51fd\u6570\u53eb\u51fd\u6570A\uff09\uff0c\u7136\u540e\u518d\u53bb\u6267\u884c\u4e2d\u65ad\u51fd\u6570B\u3002\u5982\u679c\u51fd\u6570A\u6b63\u5728\u4f7f\u7528\u4e00\u4e2a\u5168\u5c40\u53d8\u91cfC\uff0c\u800c\u4e2d\u65ad\u51fd\u6570B\u4e5f\u9700\u8981\u4f7f\u7528\u5168\u5c40\u53d8\u91cfC\u3002\u90a3\u4e48\u8fd9\u4e2a\u53d8\u91cfC\u7684\u503c\u5c31\u6709\u53ef\u80fd\u88ab\u51fd\u6570B\u66f4\u6539\u3002\u5f53\u51fd\u6570B\u6267\u884c\u5b8c\u6210\u4ee5\u540e\uff0c\u95ee\u9898\u6765\u4e86\uff0c\u53d8\u91cfC\u7684\u503c\u5230\u5e95\u6709\u6ca1\u6709\u88ab\u6539\u53d8\uff1f\u5982\u679c\u88ab\u6539\u53d8\u4e86\uff0c\u51fd\u6570A\u7ee7\u7eed\u6267\u884c\u662f\u5426\u662f\u7b26\u5408\u9884\u671f\u7684\uff1f\u8fd9\u91cc\u7684\u51fd\u6570A\u5c31\u662f\u4e0d\u53ef\u91cd\u5165\u51fd\u6570\u3002 \u800c\u51fd\u6570D\u5982\u679c\u662f\u4f7f\u7528\u7684\u5c40\u90e8\u8d44\u6e90\uff0c\u6ca1\u6709\u4f7f\u7528\u516c\u5171\u8d44\u6e90\uff0c\u5373\u4f7f\u4e2d\u65ad\u6253\u65ad\u4e86\u51fd\u6570D\u7684\u6267\u884c\uff0c\u51fd\u6570D\u7ee7\u7eed\u6267\u884c\u7ed3\u679c\u4e5f\u4f1a\u662f\u7b26\u5408\u9884\u671f\u7684\u3002\u90a3\u4e48\u8fd9\u4e2a\u51fd\u6570D\u5c31\u662f\u53ef\u91cd\u5165\u51fd\u6570\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff0c\u4f60\u5728\u5bbf\u820d\u548c\u5176\u4ed6\u820d\u53cb\u6b63\u5728\u6284\u4e00\u4e2a\u6750\u6599\uff0c\u8fd9\u4e2a\u6750\u6599\u5f88\u957f\uff0c\u9875\u6570\u5f88\u591a\uff0c\u800c\u4e14\u6ca1\u6709\u9875\u7801\uff0c\u4e5f\u6ca1\u6709\u9489\u8d77\u6765\u3002\u4f60\u5728\u6284\u7684\u65f6\u5019\u7a81\u7136\u6709\u4eba\u627e\u4f60\u6709\u4e8b\uff0c\u4f60\u51fa\u53bb\u4e86\u5f88\u957f\u65f6\u95f4\u3002\u56de\u6765\u7684\u65f6\u5019\u4f60\u53d1\u73b0\u820d\u53cb\u5df2\u7ecf\u6284\u4e86\u5f88\u591a\u4e86\uff0c\u5f80\u540e\u7ffb\u4e86\u597d\u51e0\u9875\u4e86\u3002\u800c\u4f60\u4e0d\u77e5\u9053\u4f60\u6284\u5230\u54ea\u91cc\u4e86\uff0c\u8fd9\u4e2a\u6750\u6599\u53c8\u957f\u53c8\u6ca1\u9875\u7801\u3002\u7ee7\u7eed\u6284\u663e\u7136\u4f1a\u6f0f\u6389\u5f88\u591a\u4e1c\u897f\u3002\u8fd9\u8bf4\u660e\u8fd9\u6837\u6284\u6750\u6599\u4e0d\u53ef\u91cd\u5165\u3002 \u800c\u5982\u679c\u4f60\u628a\u6750\u6599\u590d\u5370\u4e86\u4e00\u4efd\uff0c\u53ea\u6709\u4f60\u4e00\u4e2a\u4eba\u7167\u7740\u8fd9\u4e2a\u590d\u5370\u4ef6\u6284\u3002\u522b\u4eba\u6765\u627e\u4f60\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u628a\u4f4d\u7f6e\u8bb0\u5f55\u4e00\u4e0b\uff0c\u7136\u540e\u518d\u51fa\u53bb\u3002\u8fd9\u6837\u56de\u6765\u518d\u63a5\u7740\u6284\u7684\u65f6\u5019\u53ef\u4ee5\u4fdd\u8bc1\u6284\u7684\u5185\u5bb9\u662f\u6b63\u786e\u7684\u3002\u8fd9\u6837\u6284\u6750\u6599\u662f\u53ef\u91cd\u5165\u7684\u3002 STM32\u4e2d\u6709\u5f88\u591a\u4e2d\u65ad\u8bf7\u6c42\uff0c\u5f53\u4f7f\u7528\u4e00\u4e2a\u516c\u5171\u8d44\u6e90\uff0c\u5c24\u5176\u662f\u4f7f\u7528RTOS\u65f6\u8981\u8003\u8651\u51fd\u6570\u662f\u5426\u53ef\u91cd\u5165\u3002","title":"\u51fd\u6570\u7684\u53ef\u91cd\u5165\u548c\u4e0d\u53ef\u91cd\u5165"},{"location":"STM32/C_basic/#_10","text":"\u8fd9\u91cc\u4e0d\u4ec5\u9650\u4e8e if \uff0c while, for \u7b49\u5e26\u6709\u6761\u4ef6\u5224\u65ad\u7684\u540c\u7406\u3002 \u6211\u4eec\u90fd\u77e5\u9053\uff0c\u5982\u679c\u4e00\u6bb5\u4ee3\u7801\u662f\u8fd9\u6837\u5199\u7684\uff1a int a = 2; a = ....; if (a = 1) { ... } \u8fd9\u4e2aif\u7684\u6761\u4ef6\u6c38\u8fdc\u4e3a\u771f\u3002\u5927\u5bb6\u4e5f\u90fd\u77e5\u9053\uff0c\u5e94\u8be5\u5199\u6210 a == 1 \u3002\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u9519\u8bef\uff0c\u6709\u4e9b\u5f00\u53d1\u89c4\u8303\u4f1a\u8981\u6c42\u628a\u5e38\u91cf\u5199\u5de6\u8fb9\uff0c\u4e5f\u5c31\u662f if (1 == a) \u3002\u8fd9\u6837\u5f53\u5199\u6210 if (1 = a) \u65f6\uff0c\u7531\u4e8e1\u662f\u4e0d\u53ef\u4fee\u6539\u7684\u5e38\u6570\uff0c\u7f16\u8bd1\u4f1a\u62a5\u9519\u3002 \u4e5f\u53ef\u4ee5\u4f7f\u7528clang-tidy\u8fd9\u79cd\u9759\u6001\u4ee3\u7801\u5206\u6790\u5de5\u5177\uff0c\u5f53\u5199\u51fa\u8fd9\u79cd\u4ee3\u7801\u65f6\uff0c\u5de5\u5177\u4f1a\u63d0\u793a\u8bf4\u8fd9\u91cc\u7684\u903b\u8f91\u53ef\u80fd\u4e0d\u5bf9\uff0c\u9700\u8981\u4fee\u6539\u3002 C\u8bed\u8a00\u4e2d\u8ba4\u4e3a\uff0c0\u4e3a\u5047\uff0c\u975e0\u4e3a\u771f\u3002\u4f46\u662f\u5728 stdbool.h \u4e2d\uff0c true \u7684\u503c\u4e3a1\u3002\u8fd9\u662f\u7531\u4e8e\u5728C99\u6807\u51c6\u4e2dbool\u503c\u5360\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u3002\u6240\u4ee5\u6211\u4eec\u5199if\u6761\u4ef6\u4e3a\u771f\u65f6\uff0c\u4e0d\u5e94\u8be5\u52a0 condition == true \uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50\uff1a if (condition == true) { ...; } if (condition) { ...; } \u8fd9\u4e24\u4e2a if \uff0c\u770b\u4f3c\u4e00\u6837\uff0c\u5b9e\u5219\u4e0d\u7136\u3002\u5047\u5982 condition \u7684\u503c\u4e3a2\uff0c\u7b2c\u4e00\u4e2a if \u662f\u4e0d\u4f1a\u8fdb\u5165\u7684\uff0c true \u7684\u503c\u56fa\u5b9a\u662f1\u3002\u800c\u7b2c\u4e8c\u4e2a if \u662f\u53ef\u4ee5\u8fdb\u5165\u7684\u3002 if \u6761\u4ef6\u4e3a\u5047\u4e00\u822c\u5bf9\u6761\u4ef6\u53d6\u53cd\uff0c\u5f53\u7136\u5199\u6210 condition == false \u4e5f\u662f\u53ef\u4ee5\u7684\uff1a if (condition == false) { ...; } if (!condition) { ...; } /* \u8fd9\u4e24\u4e2aif\u662f\u7b49\u4ef7\u7684, \u53ea\u4e0d\u8fc7\u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\u5199\u6210\u7b2c4\u884c\u90a3\u6837 */ PS: Python\u4e2d True \u4e5f\u662f1\u3002\u5f53\u4f60\u5199 if \u6761\u4ef6\u4e3a True \u65f6\uff0c\u4f60\u731cPyCharm\u753b\u4e00\u6761\u9ec4\u6ce2\u6d6a\u7ebf\u63d0\u793a\u4f60\u4ec0\u4e48\u3002 \u4e0d\u8981\u5bf9\u6d6e\u70b9\u6570\u505a\u76f8\u7b49\u6216\u8005\u4e0d\u7b49\u5224\u65ad\uff0c\u6d6e\u70b9\u6570\u7531\u4e8e\u7cbe\u5ea6\u95ee\u9898\u5e76\u4e0d\u4f1a\u6309\u7167\u6211\u4eec\u9884\u671f\u7684\u65b9\u5f0f\u6267\u884c\u3002\u4e0b\u9762\u6211\u7528Python\u6765\u6f14\u793a\u4e00\u4e0b\uff08C\u8bed\u8a00\u4e5f\u4e00\u6837\uff09 \u770b\u5230\u4e86\u5417\uff0c 0.1 + 0.2 == 0.3 \u7684\u503c\u4e3aFalse\uff0c\u8fd9\u662f\u7531\u4e8e\u5728\u8fdb\u5236\u8f6c\u6362\u7684\u8fc7\u7a0b\u4e2d 0.1 + 0.2 == 0.30000000000000004 \uff0c\u4e0d\u662f 0.3 \uff0c\u7ed3\u679c\u81ea\u7136\u4e0d\u76f8\u7b49\u3002","title":"\u6761\u4ef6\u5224\u65ad"},{"location":"STM32/C_basic/#_11","text":"\u8981\u683c\u5916\u6ce8\u610f\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\uff0c\u81ea\u5df1\u60f3\u4e00\u4e0b\u4e0b\u9762\u4ee3\u7801\u7684\u8fd0\u884c\u7ed3\u679c\u662f\u4ec0\u4e48\uff0c\u81ea\u5df1\u4e5f\u53ef\u4ee5\u8fd0\u884c\u4e00\u4e0b\uff1a #include \"stdint.h\" #include \"stdio.h\" #include \"inttypes.h\" int main(int argc, char const *argv[]) { /* \u65e0\u7b26\u53f7\u5230\u6709\u7b26\u53f7 */ uint16_t u16num_1 = 45024; int16_t s16num_1 = u16num_1; printf(\"u16num = %\" PRIu16 \", s16num = %\" PRId16 \"\\n\", u16num_1, s16num_1); /* \u5927\u8303\u56f4\u5230\u5c0f\u8303\u56f4 */ int32_t s32num_2 = 40328; int16_t s16num_2 = s32num_2; printf(\"s32num = %\" PRId32 \", s16num = %\" PRId16 \"\\n\", s32num_2, s16num_2); /* \u5c0f\u8303\u56f4\u5230\u65e0\u7b26\u53f7\u5927\u8303\u56f4 */ int16_t s16num_3 = -1; uint32_t u32num_3 = s16num_3; printf(\"s16num = %\" PRId16 \", s32num = %\" PRIu32 \"\\n\", s16num_3, u32num_3); return 0; } \u8fd0\u884c\u7ed3\u679c\uff1a u16num = 45024, s16num = -20512 s32num = 40328, s16num = -25208 s16num = -1, s32num = 4294967295 \u601d\u8003\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u7ed3\u679c\u662f\u8fd9\u6837\uff0c\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\u8981\u683c\u5916\u6ce8\u610f\u4e0a\u9762\u7684\u51e0\u79cd\u60c5\u51b5\u3002 \u6709\u5173\u9690\u5f0f\u8f6c\u6362\u7c7b\u578b\uff0c\u8bf7\u67e5\u9605\uff1a https://learn.microsoft.com/en-us/cpp/c-language/assignment-conversions?view=msvc-170 \uff0c\u51fa\u73b0\u95ee\u9898\u67e5\u8fd9\u4e2a\u6587\u6863\u5c31\u591f\u4e86\uff0c\u53ef\u4ee5\u7b97\u6700\u6743\u5a01\u7684\u3002","title":"\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362"},{"location":"STM32/C_basic/#_12","text":"\u5982\u679c\u4e0b\u9762\u7684\u5185\u5bb9\u53ef\u4ee5\u7406\u89e3\uff0c\u90a3\u8bf4\u660e\u4f60\u7684C\u8bed\u8a00\u57fa\u7840\u57fa\u672c\u8fc7\u5173\u3002 int n; /* \u58f0\u660eint\u7c7b\u578bn */ int* p; /* \u58f0\u660eint*\u7c7b\u578b\u6307\u9488p */ int& r; /* \u58f0\u660eint\u5f15\u7528r(C++\u8bed\u6cd5\uff0c\u77e5\u9053\u5373\u53ef) */ int a[10]; /* \u58f0\u660eint[10]\u7c7b\u578b\u6570\u7ec4a */ int f(); /* \u58f0\u660e\u8fd4\u56deint\u7684\u51fd\u6570f */ int f() {} /* \u5b9a\u4e49\u8fd4\u56deint\u7684\u51fd\u6570f */ int* func(); /* \u58f0\u660e\u8fd4\u56deint*\u6307\u9488\u7684\u51fd\u6570func */ int* func() {} /* \u5b9a\u4e49\u8fd4\u56deint*\u6307\u9488\u7684\u51fd\u6570func */ int (*fp)(); /* \u58f0\u660e\u51fd\u6570\u6307\u9488fp\uff0c\u6307\u5411\u4e00\u4e2a\u539f\u578b\u4e3aint f()\u7684\u51fd\u6570 */ \u6709\u5173\u58f0\u660e\u7684\u66f4\u591a\u5185\u5bb9\uff0c\u53c2\u89c1\u89e3\u8bfb \u89e3\u8bfb\u590d\u6742\u7684\u7c7b\u578b\u58f0\u660e \u3002","title":"\u5b9a\u4e49\u4e0e\u58f0\u660e"},{"location":"STM32/C_basic/#_13","text":"define\u8868\u8fbe\u5f0f\u65f6 \u4e00\u5f8b\u7528\u62ec\u53f7\u62ec\u8d77\u6765 #define A B + 1 /* \u7981\u6b62\u8fd9\u79cd\u5b8f\u5b9a\u4e49 */ #define A (B + 1) /* \u5efa\u8bae\u4f7f\u7528\u8fd9\u79cd\u5b8f\u5b9a\u4e49 */ \u5b8f\u5b9a\u4e49\u505a\u8fd0\u7b97\u65f6\u64cd\u4f5c\u6570\u672c\u8eab\u4e5f\u8981\u52a0\u62ec\u53f7\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50\uff1a #define SQUARE(X) (X * X) /* \u5e94\u8be5\u90fd\u80fd\u770b\u61c2, \u6c42\u4e00\u4e2a\u6570\u7684\u5e73\u65b9 */ int a = SQUARE(5); int b = SQUARE(2 + 3); /** * \u60f3\u4e00\u60f3, a, b\u7684\u503c\u662f\u591a\u5c11? * \u90fd\u662f25? * \u9519, b = (2 + 3 * 2 + 3) = 11 * \u6240\u4ee5\u5b8f\u5b9a\u4e49\u65f6\u8981\u5bf9\u64cd\u4f5c\u6570\u672c\u8eab\u4e5f\u8981\u52a0\u62ec\u53f7 */ #define SQUARE(X) ((X) * (X)) \u5b9a\u4e49\u4e00\u4e2a\u5e38\u6570\u65f6\u7ecf\u5e38\u540e\u9762\u52a0\u4e0a\u540e\u7f00 F,U,L \uff08\u5927\u5c0f\u5199\u5747\u53ef\uff0c\u4e00\u822c\u5b8f\u5b9a\u4e49\u7528\u5927\u5199\uff0c\u4ee3\u7801\u7528\u5c0f\u5199\uff09\uff0c\u8fd9\u4e2a\u540e\u7f00\u53eb\u505a\u5b57\u9762\u91cf\uff0c\u8ba9\u7f16\u8bd1\u5668\u660e\u767d\u8fd9\u4e2a\u6570\u5e94\u8be5\u662f\u4ec0\u4e48\u7c7b\u578b\uff0c\u907f\u514d\u7f16\u8bd1\u5668\u4e71\u5206\u914d\u7c7b\u578b\u5bfc\u81f4\u8fd0\u7b97\u9519\u8bef\u6216\u8005\u6ea2\u51fa\u3002\u6574\u6570\u4e0d\u52a0\u540e\u7f00\u9ed8\u8ba4\u4e3a int \u7c7b\u578b\uff0c\u6709\u5c0f\u6570\u70b9\u9ed8\u8ba4\u4e3a float \u7c7b\u578b\u3002\u4e00\u822c\u8fd0\u7b97\u503c\u51fa\u9519\u662f\u7531\u4e8e\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u503c\u8fd0\u7b97\uff0c\u6bd4\u5982\u6574\u6570\u548c\u6d6e\u70b9\u8fd0\u7b97\u3002\u4e0b\u9762\u662f\u5b9e\u4f8b\uff1a #define DIAMETER 5.0F /* \u6d6e\u70b9\u6570, \u76f8\u5f53\u4e8efloat */ #define DIAMETER 5.0L /* \u6d6e\u70b9\u6570, \u76f8\u5f53\u4e8edouble */ uint32_t value = 2; float scale = value / DIAMETER; /* \u5982\u679c#define DIAMETER 5, scale\u4e3a0 */ #define ERROR 0U /* \u65e0\u7b26\u53f7\u6570, \u76f8\u5f53\u4e8euint32 */ #define MAX 3000000000L /* \u957f\u6574\u6570, \u76f8\u5f53\u4e8eint64 */ #define DAT0 B1AFF /* F\u7ed3\u5c3e, \u5341\u516d\u8fdb\u5236\u6574\u6570B1AF = 45,487 */ #define DAT1 101B /* B\u7ed3\u5c3e, \u4e8c\u8fdb\u5236\u6574\u6570 */ \u5728\u5b9e\u9645\u5199\u4ee3\u7801\u65f6\u6bd4\u8f83\u5bb9\u6613\u51fa\u73b0\u8fd9\u79cd\u9519\u8bef\uff0c\u56e0\u6b64\u517b\u6210\u597d\u4e60\u60ef\uff0c\u9664\u666e\u901a\u6574\u6570\u5916\u5e38\u6570\u90fd\u52a0\u4e0a\u540e\u7f00\u3002 \u6709\u5173\u9884\u5904\u7406\uff0c\u53c2\u89c1 \u9879\u76ee\u5f00\u53d1/\u9884\u5904\u7406\u547d\u4ee4 \u3002","title":"\u5b8f\u5b9a\u4e49"},{"location":"STM32/C_basic/#_14","text":"\u6b63\u70b9\u539f\u5b50\u5df2\u7ecf\u53d6\u6d88\u65e7\u7248\u4ee3\u7801\u4e2d\u7684\u4f4d\u5e26\u64cd\u4f5c\uff0c\u7ee7\u7eed\u4f7f\u7528\u4ee5\u524d\u7684\u65b9\u6cd5\u7f16\u8bd1\u4f1a\u62a5\u9519\u3002\u5c31\u7b97\u628a\u65e7\u7248 sys.c \u653e\u8fdb\u6765\uff0c\u5728AC6\u7f16\u8bd1\u5668\u5927\u6982\u7387\u7f16\u8bd1\u4e0d\u901a\u8fc7\u3002\u73b0\u4f7f\u7528\u4ee5\u4e0b\u65b9\u5f0f\uff1a /* \u65e7\u7248\u4f4d\u5e26\u64cd\u4f5c\u63a7\u5236IO\u7684\u65b9\u5f0f */ #define LED0 PAout(0) LED0 = 0; /* \u5c06PA0\u62c9\u4f4e */ /* \u65b0\u7248\u5b9a\u4e49\u63a7\u5236IO\u53e3\u65b9\u5f0f */ #define LED0(x) \\ x ? HAL_GPIO_WritePin(LED0_PORT, LED0_PIN, GPIO_PIN_SET) \\ : HAL_GPIO_WritePin(LED0_PORT, LED0_PIN, GPIO_PIN_RESET) /* LED0 */ LED0(0); /* \u5c06PA0\u62c9\u4f4e, \u4e0eLED0 = 0\u7b49\u4ef7 */ // LED0 = 0; /* \u4e0d\u8981\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f, \u7f16\u8bd1\u4f1a\u63d0\u793aLED0\u662f\u4e0d\u53ef\u4fee\u6539\u7684\u5e38\u91cf */ LED0(1); /* \u8fd9\u53e5\u4e0eLED0 = 1\u7b49\u4ef7 */ /* \u65e7\u7248\u8bfb\u53d6IO\u8f93\u5165 */ #define PA1 PAin(1) /* \u73b0\u6539\u6210\u8fd9\u79cd\u65b9\u5f0f */ #define PA1 HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1) /* \u5b8f\u5b9a\u4e49\u4e2d\u4e0d\u53ef\u4ee5\u4ee5\u5206\u53f7\u7ed3\u5c3e, \u5982\u679c\u6709\u591a\u6bb5\u4ee3\u7801\u9700\u8981\u6267\u884c, \u4e14\u4ee5\u5206\u53f7\u7ed3\u5c3e, \u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u65b9\u5f0f */ /* PS: \u6b63\u70b9\u539f\u5b50\u65b0\u4ee3\u7801IO\u90fd\u662f\u8fd9\u79cd\u5b8f\u5b9a\u4e49 */ #define DO1 do { HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_2); } while (0) /** * \u4e0d\u8981\u770b\u5230\u6709while\u5c31\u4ee5\u4e3a\u4f1a\u6267\u884c\u591a\u6b21, \u5176\u5b9e\u4ed6\u53ea\u4f1a\u6267\u884c\u4e00\u6b21 * \u5982\u679c\u4f60\u7684C\u8bed\u8a00\u591f\u624e\u5b9e\u7684\u8bdd, \u8fd9\u6bb5\u4ee3\u7801\u66ff\u6362\u4ee5\u540ewhile(0)\u540e\u9762\u81ea\u52a8\u4f1a\u5e26\u4e00\u4e2a\u5206\u53f7 * \u770b\u4e0d\u61c2, \u6ca1\u5173\u7cfb, \u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50 */ do_pin_sta = DO1; /* \u8fd9\u6bb5\u4ee3\u7801\u5b8f\u5b9a\u4e49\u4ee5\u540e\u548c\u4e0b\u9762\u8fd9\u884c\u662f\u4e00\u6837\u7684 */ do_pin_sta = do { HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_2); } while(0); /* \u6240\u4ee521\u884c\u5b8f\u5b9a\u4e49\u672b\u5c3e\u4e0d\u5e26\u5206\u53f7\u662f\u53ef\u4ee5\u7684, \u7f16\u8bd1\u4e5f\u53ef\u4ee5\u901a\u8fc7 */","title":"\u4f4d\u5e26\u64cd\u4f5c\u8bf4\u660e\uff08\u91cd\u8981\uff01\u5fc5\u8bfb\uff01\uff09"},{"location":"STM32/C_standard/","text":"If you need more than 3 levels of indentation, you\u2019re screwed anyway, and should fix your program. \u5982\u679c\u4f60\u7684\u4ee3\u7801\u7f29\u8fdb\u8d85\u8fc7\u4e09\u5c42\uff0c\u610f\u5473\u7740\u4f60\u5df2\u7ecf\u641e\u7838\u4e86\uff0c\u4f60\u9700\u8981\u91cd\u6784\u3002 \u2014\u2014Linux\u4e4b\u7236Linus Torvalds \u4f60\u7684\u4ee3\u7801\u662f\u7ed9\u522b\u4eba\u770b\u7684\uff0c\u4e0d\u662f\u5149\u4f60\u81ea\u5df1\u770b\u7684\u3002\u56e0\u6b64\u4ee3\u7801\u53ef\u8bfb\u6027\u662f\u7b2c\u4e00\u4f4d\u3002 \u5176\u5b9e\u6211\u66f4\u63a8\u8350\u5927\u5bb6\u4f7f\u7528CLion\u6765\u7f16\u5199\u4ee3\u7801\uff0cCLion\u62e5\u6709\u5f3a\u5927\u7684\u9759\u6001\u4ee3\u7801\u5206\u6790\u5de5\u5177\uff0c\u53ef\u4ee5\u5206\u6790\u51fa\u6e90\u6587\u4ef6\u4e2d\u7684\u5404\u79cd\u521d\u7ea7\u903b\u8f91\u9519\u8bef\u4e0e\u53ef\u80fd\u5b58\u5728\u7684\u6f0f\u6d1e\uff0c\u5f53\u7136VSCode\u4e5f\u4f1a\u7ed9\u8b66\u544a\uff0c\u4f46\u4e0d\u5982CLion\u597d\u7528\u3002 \u66f4\u9ad8\u5c42\u6b21\u7684\u89c4\u8303\u4f1a\u5230\u63a5\u53e3\u89c4\u8303\u3001\u8d44\u6e90\u7ba1\u7406\u7b49\u3002\u4f46\u662f\u9274\u4e8e\u6211\u7684\u6c34\u5e73\uff0c\u4ee5\u53ca\u6211\u4eec\u5f00\u53d1\u7684\u7a0b\u5e8f\u590d\u6742\u5ea6\uff0c\u6ca1\u6709\u5fc5\u8981\u5f15\u5165\u8fd9\u4e48\u9ad8\u5c42\u6b21\u7684\u8981\u6c42\u3002 \u4e0b\u9762\u6709\u4e9b\u4ee3\u7801\u6280\u5de7\u53ea\u662f\u5efa\u8bae\uff0c\u5b9e\u9645\u4ee3\u7801\u600e\u4e48\u5199\u8fd8\u8981\u9760\u4f60\u81ea\u5df1\u53bb\u659f\u914c\uff0c\u6bd4\u5982\u6211\u8bf4\u6211\u4eec\u5927\u90e8\u5206\u58f0\u660e\u7684\u53d8\u91cf\u503c\u90fd\u4e0d\u4f1a\u53d8\uff0c\u90a3\u4e48\u53ef\u4ee5\u9002\u5f53\u8003\u8651\u6dfb\u52a0 const \u4fee\u9970\u7b26\uff0c\u4e0d\u80fd\u89c1\u5230\u4e2a\u53d8\u91cf\u5c31\u52a0\uff0c\u8fd9\u6837\u53ef\u8bfb\u6027\u4f1a\u53d8\u5dee\u3002 \u603b\u4e4b\uff0c\u6211\u4e0d\u5e0c\u671b\u628a\u5199\u4ee3\u7801\u5f53\u6210\u4e2d\u5b66\u7684\u4f5c\u4e1a\u4e00\u6837\uff0c\u5b8c\u6210\u529f\u80fd\u5c31\u5b8c\u4e8b\uff0c\u9876\u591a\u8001\u5e08\u8bb2\u9898\u7684\u65f6\u5019review\u4e00\u4e0b\u3002\u4ee3\u7801\u600e\u4e48\u5199\uff0c\u600e\u4e48\u5904\u7406\u73b0\u5b9e\u4e16\u754c\u590d\u6742\u7684\u903b\u8f91\uff0c\u4f01\u4e1a\u662f\u5982\u4f55\u6784\u5efa\u548c\u7ba1\u7406\u4e00\u4e2a\u590d\u6742\u7684\u5927\u578b\u9879\u76ee\u7684\uff0c\u6ca1\u6709\u8001\u5e08\u6216\u8005\u8bfe\u7a0b\u80fd\u6559\u4f1a\u4f60\uff0c\u4e5f\u6ca1\u6709\u6807\u51c6\u7b54\u6848\u3002 Try to regard code as art. Code contains huge power to change the world. Just enjoy it! \u7701\u6d41 \u4ee3\u7801\u89c4\u8303\u5bf9\u4e8e\u63d0\u9ad8\u4ee3\u7801\u8d28\u91cf\u975e\u5e38\u91cd\u8981 \u547d\u540d\u7528\u4e0b\u5212\u7ebf\u547d\u540d\u6cd5\uff0c\u5b8f\u5b9a\u4e49\u5b57\u6bcd\u5168\u5927\u5199\uff0c\u9884\u7f16\u8bd1\u547d\u4ee4\u7684 #else, #endif \u884c\u672b\u52a0\u6ce8\u91ca\u8bf4\u660e\u6761\u4ef6 \u5168\u5c40\u53d8\u91cf\u52a0 g_ \u524d\u7f00\uff0c\u5168\u5c40\u6307\u9488\u52a0 p_ \u524d\u7f00\uff0c\u5982\u679c\u4e0d\u516c\u5f00\u4f7f\u7528\u52a0 static \u4fee\u9970\u7b26 \u547d\u540d\u52a1\u5fc5\u7b80\u660e\u627c\u8981\uff0c\u4e0d\u8981\u610f\u4e49\u4e0d\u660e \u7ed3\u6784\u4f53/\u8054\u5408\u4f53/\u679a\u4e3e\u7b49\u590d\u6742\u6570\u636e\u7c7b\u578b\uff0c\u9664\u975e\u4e0d\u516c\u5f00\uff0c\u7edf\u4e00\u7528 typedef \u5b9a\u4e49\u540d\u79f0\uff0c\u5e76\u52a0\u4e0a _t \u540e\u7f00 \u7f29\u8fdb\u6700\u591a\u63a5\u53d76\u5c42\uff0c\u8d85\u8fc76\u5c42\u5fc5\u987b\u91cd\u5199\uff1b\u9884\u7f16\u8bd1\u5982\u679c\u5d4c\u5957\u547d\u4ee4\u4e0d\u7f29\u8fdb \u4e0d\u51c6\u4f7f\u7528\u9012\u5f52 \u5bf9\u4e8e\u6709\u8fd4\u56de\u503c\u7684\u51fd\u6570\uff0c\u5fc5\u987b\u8fd4\u56de\u4e00\u4e2a\u9ed8\u8ba4\u503c\uff0c\u4e0d\u80fd\u6709\u4ec0\u4e48\u90fd\u4e0d\u8fd4\u56de\u7684\u60c5\u51b5 \u4e0d\u51c6\u4f7f\u7528\u672a\u5b9a\u4e49\u7684\u53d8\u91cf\uff0c\u4f7f\u7528\u53d8\u91cf\u524d\u5fc5\u987b\u5b9a\u4e49\u521d\u503c \u4ee3\u7801\u6392\u7248\u6309\u7167\u6211\u5199\u7684 .clang-format \u683c\u5f0f\u5316 \u6ce8\u91ca\u7528 doxygen \u4e3a\u4ec0\u4e48\u9700\u8981\u89c4\u8303\u4ee3\u7801\u98ce\u683c\u548c\u547d\u540d \u5bf9\u4e8e\u4e00\u4e2a\u9ad8\u8d28\u91cf\u7684\u5de5\u7a0b\uff0c\u4e00\u822c\u4f1a\u505a\u5230\uff1a \u4ee3\u7801\u7b80\u6d01\u7cbe\u70bc\uff0c\u7f8e\u89c2\uff0c\u53ef\u8bfb\u6027\u597d\uff0c\u9ad8\u6548\u7387\uff0c\u9ad8\u590d\u7528\uff0c\u53ef\u79fb\u690d\u6027\u597d\uff0c\u9ad8\u5185\u805a\uff0c\u4f4e\u8026\u5408\uff0c\u6ca1\u6709\u5197\u4f59\uff0c\u4e0d\u7b26\u5408\u8fd9\u4e9b\u539f\u5219\uff0c\u5fc5\u987b\u7279\u522b\u8bf4\u660e\u3002 \u89c4\u8303\u6027\uff0c\u4ee3\u7801\u6709\u89c4\u53ef\u5faa\u3002\u7279\u6b8a\u6392\u7248\u3001\u7279\u6b8a\u8bed\u6cd5\u3001\u7279\u6b8a\u6307\u4ee4\uff0c\u5fc5\u987b\u7279\u522b\u8bf4\u660e\u3002 \u6211\u4eec\u89c4\u8303\u4ee3\u7801\u98ce\u683c\u548c\u547d\u540d\u7684\u613f\u666f\u662f\u7801\u51fa\u9ad8\u6548\uff0c\u7801\u51fa\u8d28\u91cf\u3002\u73b0\u4ee3\u8f6f\u4ef6\u67b6\u6784\u7684\u590d\u6742\u6027\u9700\u8981\u534f\u540c\u5f00\u53d1\u5b8c\u6210\uff0c\u5982\u4f55\u9ad8\u6548\u5730\u534f\u540c\u5462\uff1f\u65e0\u89c4\u77e9\u4e0d\u6210\u65b9\u5706\uff0c\u65e0\u89c4\u8303\u96be\u4ee5\u534f\u540c\uff0c\u6bd4\u5982\uff0c\u5236\u5b9a\u4ea4\u901a\u6cd5\u89c4\u8868\u9762\u4e0a\u662f\u8981\u9650\u5236\u884c\u8f66\u6743\uff0c\u5b9e\u9645\u4e0a\u662f\u4fdd\u969c\u516c\u4f17\u7684\u4eba\u8eab\u5b89\u5168\uff0c\u8bd5\u60f3\u5982\u679c\u6ca1\u6709\u9650\u901f\uff0c\u6ca1\u6709\u7ea2\u7eff\u706f\uff0c\u8c01\u8fd8\u6562\u4e0a\u8def\u884c\u9a76\uff1f\u5bf9\u8f6f\u4ef6\u6765\u8bf4\uff0c\u9002\u5f53\u7684\u89c4\u8303\u548c\u6807\u51c6\u7edd\u4e0d\u662f\u6d88\u706d\u4ee3\u7801\u5185\u5bb9\u7684\u521b\u9020\u6027\u3001\u4f18\u96c5\u6027\uff0c\u800c\u662f\u9650\u5236\u8fc7\u5ea6\u4e2a\u6027\u5316\uff0c\u4ee5\u4e00\u79cd\u666e\u904d\u8ba4\u53ef\u7684\u7edf\u4e00\u65b9\u5f0f\u4e00\u8d77\u505a\u4e8b\uff0c\u63d0\u5347\u534f\u4f5c\u6548\u7387\uff0c\u964d\u4f4e\u6c9f\u901a\u6210\u672c\u3002\u4ee3\u7801\u7684\u5b57\u91cc\u884c\u95f4\u6d41\u6dcc\u7684\u662f\u8f6f\u4ef6\u7cfb\u7edf\u7684\u8840\u6db2\uff0c\u4ee3\u7801\u8d28\u91cf\u7684\u63d0\u5347\u662f\u5c3d\u53ef\u80fd\u5c11\u8e29\u5751\uff0c\u675c\u7edd\u8e29\u91cd\u590d\u7684\u5751\uff0c\u5207\u5b9e\u63d0\u5347\u7cfb\u7edf\u7a33\u5b9a\u6027\uff0c\u7801\u51fa\u8d28\u91cf\u3002 \u89c4\u8303\u4ee3\u7801\u98ce\u683c\u53ef\u4ee5\u65b9\u4fbf\u4ee3\u7801\u79fb\u690d\u548c\u590d\u7528\uff0c\u63d0\u9ad8\u4ee3\u7801\u53ef\u8bfb\u6027\uff0c\u800c\u597d\u7684\u547d\u540d\u662f\u5bf9\u7a0b\u5e8f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u547d\u540d\u662f\u7f16\u7a0b\u7684\u5fc3\u810f\uff0c\u5982\u679c\u8fde\u547d\u540d\u90fd\u505a\u4e0d\u597d\uff0c\u90a3\u4e48\u7a0b\u5e8f\u8fc7\u4e0d\u4e86\u591a\u4e45\u5c31\u4f1a\u53d8\u5f97\u96be\u4ee5\u7ef4\u62a4\u3002\u4f60\u7684\u4ee3\u7801\u662f\u5199\u7ed9\u522b\u4eba\u770b\u7684\uff0c\u5982\u679c\u4f60\u81ea\u5df1\u90fd\u770b\u4e0d\u61c2\u7684\u4ee3\u7801\u522b\u4eba\u66f4\u770b\u4e0d\u61c2\u3002\u6240\u4ee5\u4ee3\u7801\u548c\u547d\u540d\u89c4\u8303\uff0c\u975e\u5e38\u91cd\u8981\u3002 \u53c2\u7167\uff1a C Coding Standard (cmu.edu) \u547d\u540d\u7981\u5fcc \u4e0b\u9762\u7684\u547d\u540d\u7edd\u5bf9\u4e0d\u5141\u8bb8\u51fa\u73b0\uff0c\u5982\u679c\u5728\u4f01\u4e1a\u9879\u76ee\u4e2d\u6562\u8fd9\u6837\u547d\u540d\uff0c\u4f60\u7684\u4e0a\u53f8\u548c\u540c\u4e8b\u7edd\u5bf9\u4f1a\u62ff\u952e\u76d8\u6765\u7838\u4f60\u3002 \u53c2\u7167\u89c6\u9891\uff1a \u4ee3\u7801\u547d\u540d\u600e\u4e48\u53ef\u80fd\u8ba9\u522b\u4eba\u6ee1\u610f\uff1f\u81ea\u5df1\u6ee1\u610f\u5c31\u884c\u4e86 Naming Things in Code \u53d8\u91cf\u547d\u540d_\u54d4\u54e9\u54d4\u54e9 (\u309c-\u309c)\u3064\u30ed \u5e72\u676f~-bilibili \u5355\u5b57\u6bcd\uff1a int a, b, c; float x, y, z \uff0c\u5faa\u73af\u53d8\u91cf\u53ef\u4ee5\u4f7f\u7528 i,j,k \uff0c\u4f46 \u4e0d\u8981\u628a i,j,k \u5b9a\u4e49\u6210\u5168\u5c40\u53d8\u91cf \u91cd\u590d\u7684\u65e0\u610f\u4e49\u5b57\u6bcd\uff1a int aa, bb, cc, dd \u62fc\u97f3\u53ca\u62fc\u97f3\u9996\u5b57\u6bcd\u7f29\u5199\uff1a char[30] mingZi, sb, nb; char xingbie; int xh, nl \uff0c\u5bf9\u4e8e\u4e00\u4e9b\u516c\u8ba4\u7684\u62fc\u97f3\uff0c\u53ef\u4ee5\u4f7f\u7528\uff0c\u5982 Alibaba, Aliyun, Baidu, Bilibili, Sogou \u7b49\uff08\u8c8c\u4f3c\u90fd\u662f\u516c\u53f8\u540d\uff09 \u4e0d\u89c4\u8303\u7684\u7f29\u5199\uff1a int cont_freq \uff0c\u67e5\u8be2\u5e38\u89c1\u5355\u8bcd\u7684\u7f29\u5199\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u7f51\u7ad9\uff1a Abbreviations.com \u547d\u540d\u89c4\u5219 \u547d\u540d\u7684\u603b\u539f\u5219\u662f\u7cbe\u51c6\u5730\u63cf\u8ff0\u529f\u80fd\u3002\u5982\u679c\u547d\u540d\u610f\u4e49\u4e0d\u660e\u786e\uff0c\u90a3\u4e48\u4ee3\u7801\u4e5f\u662f\u6ca1\u6709\u610f\u4e49\u7684\u3002\u547d\u540d\u8981\u505a\u5230\u89c1\u540d\u77e5\u610f\uff0c\u800c\u4e0d\u662f\u8ba9\u522b\u4eba\u53bb\u731c\u3002\u597d\u7684\u547d\u540d\u662f\u81ea\u89e3\u91ca\u7684\uff0c\u4e5f\u5c31\u662f\u4ece\u540d\u5b57\u5c31\u53ef\u4ee5\u770b\u51fa\u6765\u542b\u4e49\uff0c\u4e0d\u9700\u8981\u6ce8\u91ca\u53bb\u8bf4\u660e\u3002\u5728\u7a0b\u5e8f\u5f00\u53d1\u4e2d\uff0c \u5982\u679c\u4e00\u6bb5\u4ee3\u7801\u6216\u8005\u53d8\u91cf\u6ca1\u6709\u610f\u4e49\uff0c\u90a3\u4e48\u8fd9\u6bb5\u4ee3\u7801\u6216\u8005\u53d8\u91cf\u5c31\u4e0d\u5e94\u8be5\u5b58\u5728\u3002 \u7edf\u4e00\u4f7f\u7528\u4e0b\u5212\u7ebf\u547d\u540d\u6cd5\uff0c\u5373\u5355\u8bcd\u5168\u90e8\u4f7f\u7528\u5c0f\u5199\u5b57\u6bcd\uff0c\u5305\u62ec\u51fd\u6570\u3001\u53d8\u91cf\u3001\u7ed3\u6784\u4f53\u7b49\u3002\u5355\u8bcd\u4e4b\u95f4\u7528\u4e0b\u5212\u7ebf\u9694\u5f00\u3002\u5bf9\u4e8e\u7b2c\u4e09\u65b9\u4ee3\u7801\u4fdd\u7559\u5176\u547d\u540d\u98ce\u683c\uff0c\u4e0d\u8981\u4fee\u6539\u3002 \u7edf\u4e00\u6027\uff1a\u7f16\u5199\u4e00\u4e2a\u6a21\u5757\u7684\u4ee3\u7801\u65f6\uff0c\u6700\u597d\u4f7f\u7528\u4e00\u4e2a\u7edf\u4e00\u7684\u524d\u7f00\uff0c\u6bd4\u5982\u64cd\u4f5cNAND Flash\u7684\u4ee3\u7801\uff0c\u53ef\u4ee5\u52a0\u4e00\u4e2a nand_ \u524d\u7f00 \u4e0e\u4f5c\u7528\u57df\u5173\u8054\uff1a\u53d8\u91cf\u547d\u540d\u7684\u957f\u5ea6\u548c\u4ed6\u7684\u4f5c\u7528\u57df\u6709\u5173\uff0c\u4f5c\u7528\u57df\u8d8a\u5927\uff0c\u547d\u540d\u5c3d\u53ef\u80fd\u8d8a\u957f\u3002\u8fd9\u6837\u80fd\u6700\u5927\u7a0b\u5ea6\u907f\u514d\u547d\u540d\u51b2\u7a81 \u6700\u77ed\u957f\u5ea6\uff0c\u6700\u5927\u5316\u4fe1\u606f\uff1a\u5728\u4fdd\u6301\u4e00\u4e2a\u6807\u8bc6\u7b26\u610f\u601d\u660e\u786e\u7684\u540c\u65f6\uff0c\u5c3d\u91cf\u7f29\u77ed\u957f\u5ea6\u3002\u5c3d\u91cf\u4e0d\u8981\u8d85\u8fc76\u4e2a\u5355\u8bcd \u907f\u514d\u91cd\u540d\u6216\u76f8\u4f3c\uff1a\u907f\u514d\u5728\u4e0d\u540c\u7ea7\u522b\u4f5c\u7528\u57df\u4e2d\u91cd\u540d\uff0c\u867d\u7136\u5728C/C++\u4e2d\u5141\u8bb8\u5c40\u90e8\u53d8\u91cf\u548c\u5168\u5c40\u53d8\u91cf\u91cd\u540d\uff0c\u4f46\u8fd9\u6837\u5bb9\u6613\u5f15\u8d77\u8bef\u89e3 \u907f\u514d\u51fa\u73b0\u7f16\u53f7\uff1a\u5982 number1, number2 \uff0c\u53ef\u4ee5\u4f7f\u7528\u6570\u7ec4\u4ee3\u66ff\u3002\u9664\u975e\u5728\u903b\u8f91\u4e0a\u5fc5\u987b\u4f7f\u7528\u7f16\u53f7\uff0c\u65e0\u6cd5\u7528\u6570\u7ec4\u4ee3\u66ff\uff0c\u6bd4\u5982 USART1, USART2 \u5305\u542b\u5355\u4f4d \u8fd9\u79cd\u547d\u540d\u9002\u5408\u7528\u5728\u53c2\u6570\u4e2d\uff0c\u6bd4\u5982\u8981\u4f20\u5165\u7b49\u5f85\u8d85\u65f6\u65f6\u95f4\uff0c\u5355\u4f4d\u662f\u6beb\u79d2\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5199 timeout_ms \uff1b\u8ba9\u7535\u673a\u8f6c\u5230\u4e00\u4e2a\u89d2\u5ea6\uff0c\u5355\u4f4d\u662f\u5ea6\uff0c\u53ef\u4ee5\u7528 target_angle_degree \u3002\u5f53\u7136\u5982\u679c\u592a\u957f\uff0c\u4e5f\u53ef\u4ee5\u5728\u6ce8\u91ca\u7684 @param \u6ce8\u660e\u3002 \u51fd\u6570 \u51fd\u6570\u547d\u540d\u8981\u548c\u529f\u80fd\u6216\u8005\u884c\u4e3a\u51c6\u786e\u5bf9\u5e94\u3002\u4e00\u822c\u662f\u52a8\u8bcd+\u540d\u8bcd\uff0c\u5982\u679c\u547d\u540d\u4e0d\u7b97\u957f\uff0c\u4ecb\u8bcd\u4e5f\u662f\u5fc5\u8981\u7684\uff0c\u6bd4\u5982 dump_data_to_file \uff0c\u8fd9\u6837\u9605\u8bfb\u8d77\u6765\u975e\u5e38\u81ea\u7136\uff0c\u4e5f\u597d\u5206\u8fa8\uff0c\u5f53\u7136\u4e00\u4e2a\u53d8\u91cf\u4e0d\u8981\u641e\u592a\u591a\u7684\u5355\u8bcd\uff0c\u5c3d\u91cf\u4e0d\u8d85\u8fc76\u4e2a\u3002 \u5982\u679c\u4e00\u4e2a\u51fd\u6570\u662f\u8fdb\u884c\u67d0\u4e2a\u52a8\u4f5c\uff0c\u5982 get, set \uff0c\u90a3\u4e48\u4e00\u822c\u628a\u52a8\u8bcd\u653e\u524d\u9762\u3002\u6bd4\u5982\u83b7\u53d6\u5f53\u524d\u961f\u5217\u7684\u6d88\u606f\uff0c\u6700\u597d\u7528 get_queue_msg \uff0c\u800c\u4e0d\u662f queue_msg_get \u3002\u5982\u679c\u67d0\u4e2a\u4e1c\u897f\u662f\u8fdb\u884c\u5224\u65ad\u7684\uff0c\u6700\u597d\u52a0 is \u524d\u7f00\uff0c\u6bd4\u5982\u5224\u65ad\u6d88\u606f\u961f\u5217\u662f\u5426\u5df2\u6ee1\u7684\u51fd\u6570\uff0c\u6700\u597d\u5199 is_msg_queue_full \uff0c\u800c\u4e0d\u662f msg_queue_full \u3002 \u6709\u65f6\u5019\u4f7f\u7528\u4e92\u65a5\u8bcd\u662f\u4e00\u4e2a\u8f83\u597d\u7684\u547d\u540d\u65b9\u5f0f\uff0c\u5e38\u89c1\u7684\u4e92\u65a5\u8bcd\u5982\u4e0b\uff1a add/remove begin/end create/destroy insert/delete first/last get/release increment/decrement put/get/add/delete lock/unlock open/close min/max old/new start/stop next/previous source/target show/hide send/receive source/destination copy/paste up/down \u53d8\u91cf \u53d8\u91cf\u547d\u540d\u5c3d\u91cf\u7528\u5f62\u5bb9\u8bcd+\u540d\u8bcd\uff0c\u53ef\u4ee5\u628a\u53d8\u91cf\u60f3\u8c61\u6210\u4e00\u4e2a\u5bb9\u5668\uff0c\u6bd4\u5982 red_envelop_money \u53ef\u4ee5\u52a0\u4fee\u9970\u8bcd\uff0c\u4e00\u822c\u628a\u4fee\u9970\u8bcd\u653e\u540e\u9762\uff0c\u8fd9\u4e9b\u4fee\u9970\u8bcd\u5305\u62ec max, min, count \u7b49\u3002\u6bd4\u5982\u6d88\u606f\u961f\u5217\u80fd\u5bb9\u7eb3\u7684\u6700\u5927\u503c\uff0c\u6700\u597d\u7528 msg_queue_max \uff0c\u800c\u4e0d\u662f max_msg_queue \u3002 \u5bf9\u4e8e\u5c40\u90e8\u53d8\u91cf\uff0c\u547d\u540d\u4e0d\u8981\u592a\u957f\uff0c1~3\u4e2a\u5355\u8bcd\u4e3a\u5b9c\u3002\u4e0d\u8981\u8fdd\u53cd\u4e0a\u9762\u6240\u8bf4\u7684\u7981\u5fcc\u3002 \u5168\u5c40\u53d8\u91cf\u7edf\u4e00\u52a0 g_ \u524d\u7f00\uff0c\u5168\u5c40\u6307\u9488\u52a0 p_ \u524d\u7f00\uff0c\u5168\u5c40\u53d8\u91cf\u9664\u524d\u7f00\u5916\u6700\u597d2~5\u4e2a\u5355\u8bcd\uff0c\u8fd9\u6837\u80fd\u6700\u5927\u7a0b\u5ea6\u907f\u514d\u91cd\u540d\u3002\u4e0d\u8981\u8fdd\u53cd\u4e0a\u9762\u6240\u8bf4\u7684\u7981\u5fcc\u3002 i,j,k \u53ef\u4ee5\u4f5c\u4e3a\u5faa\u73af\u53d8\u91cf\uff0c\u4f46\u53ea\u80fd\u5728\u5faa\u73af\u5185\u4f7f\u7528\uff0c\u4e0d\u80fd\u8ba9\u5faa\u73af\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u8d85\u51fa\u5faa\u73af\u4f53\uff1a /* \u4e0d\u5141\u8bb8, \u6b63\u70b9\u539f\u5b50\u91c7\u7528\u8fd9\u79cd\u65b9\u5f0f\u662f\u4e3a\u4e86\u517c\u5bb9C89 */ int i; for (i = 0; i < count; i++) { list[i] = ... } /* \u4f7f\u7528\u4e0b\u9762\u7684\u65b9\u5f0f\u8ba9\u5faa\u73af\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u53ea\u5728for\u5faa\u73af\u91cc */ /* PS: C\u6807\u51c6\u81f3\u5c11\u5728C99\u4ee5\u4e0a, C89\u8fd9\u6837\u5199\u4f1a\u62a5\u9519 */ for (int i = 0; i < count; i++) { list[i] = ... } \u5982\u679c\u8981\u5728\u5faa\u73af\u5916\u4f7f\u7528\u5faa\u73af\u53d8\u91cf\uff0c\u6bd4\u5982\u8981\u67e5\u627e\u4e00\u4e2a\u503c\u7684\u4f4d\u7f6e\uff0c \u90a3\u8bf4\u660e\u8fd9\u4e2a\u5faa\u73af\u53d8\u91cf\u662f\u6709\u610f\u4e49\u7684 \uff0c\u4e0d\u80fd\u7528 i,j,k \u8fd9\u79cd\u5355\u7eaf\u4e0b\u6807\u610f\u4e49\u7684\u53d8\u91cf\u6765\u547d\u540d\u3002 \u5b8f\u5b9a\u4e49 \u5b8f\u5b9a\u4e49\u5e38\u91cf\u65f6 \u5b57\u6bcd\u5168\u90e8\u7528\u5927\u5199 \uff0c\u540c\u65f6\u5b8f\u5b9a\u4e49\u5c3d\u91cf\u52a0\u524d\u7f00\u3002 \u5bf9\u4e8e\u5934\u6587\u4ef6\u4e2d\u907f\u514d\u91cd\u590d\u7f16\u8bd1\u7684\u5b8f #ifndef __XXX_H #define __XXX_H \uff0c\u6807\u8bc6\u7b26\u4f7f\u7528 __XXX_H \u7684\u5199\u6cd5\uff0c\u5373\u4e24\u4e2a\u4e0b\u5212\u7ebf\u5f00\u5934\uff0cXXX\u4e00\u822c\u662f\u6587\u4ef6\u540d\u7684\u5927\u5199\u5b57\u6bcd\uff0c\u968f\u540e\u8ddf\u4e0a\u4e00\u4e2a\u4e0b\u5212\u7ebf\u52a0\u4e00\u4e2aH\u3002 \u53e5\u67c4 \u53e5\u67c4\u52a0 _handle \u540e\u7f00\uff0c\u53e5\u67c4\u540d\u79f0\u4e0e\u7c7b\u578b\u548c\u529f\u80fd\u5339\u914d\u5c31\u53ef\u4ee5\u4e86 \u4ee3\u7801\u89c4\u8303 \u4fdd\u6301\u4ee3\u7801\u98ce\u683c\u7684\u7edf\u4e00\uff0c\u5bf9code reading, review, refactoring, porting\u7b49\u90fd\u6709\u597d\u5904\u3002\u8fd9\u4e9b\u4ee3\u7801\u89c4\u8303\u5927\u591a\u6570\u60c5\u51b5\u4e0bClang-format\u90fd\u4f1a\u5e2e\u6211\u4eec\u81ea\u52a8\u6392\u7248\uff0c\u65e0\u9700\u6211\u4eec\u624b\u52a8\u8c03\u6574\u3002 \u7edf\u4e00\u4f7f\u7528Github\u4e2d STM32_Template \u7684 .clang-format \u6587\u4ef6\u3002 \u5934\u6587\u4ef6 \u53ea\u5f15\u7528\u9700\u8981\u7684\u5934\u6587\u4ef6\uff0c\u4e0d\u8981\u5305\u542b\u4e00\u5806\u5934\u6587\u4ef6 #include \u4e2d\u7684\u6587\u4ef6\u540d\u5bf9\u5927\u5c0f\u5199\u654f\u611f \u5934\u6587\u4ef6\u653e\u5728 Inc \u76ee\u5f55\uff0c\u6e90\u6587\u4ef6\u653e\u5728 Src \u76ee\u5f55 \u5bf9\u4e8eC++\u4ee3\u7801\uff0c\u5934\u6587\u4ef6\u4f7f\u7528 .hpp \u540e\u7f00 \u5982\u679c\u4e00\u4e2a\u76ee\u5f55\u4e2d\u6709\u591a\u4e2a\u5b50\u76ee\u5f55\u4e2d\u7684\u5934\u6587\u4ef6\u9700\u8981\u5305\u542b\uff0c\u4f7f\u7528\u76f8\u5bf9\u8def\u5f84\uff0c\u4e0d\u8981\u5728 IncludePath \u4e2d\u6dfb\u52a0\uff0c\u4f8b\u5982\uff1a /* \u67d0\u4e2a\u6a21\u5757\u7684\u6587\u4ef6\u7ed3\u6784\uff1a model_root \u251c\u2500foldA \u2502 \u2514\u2500functionA.h \u251c\u2500foldB \u2502 \u2514\u2500functionB.h \u251c\u2500foldC \u2502 \u2514\u2500functionC.h \u251c\u2500foldnD \u2502 \u2514\u2500functionD.h \u251c\u2500foldE \u2502 \u2514\u2500functionE.h \u2514\u2500foldF \u2514\u2500functionF.h \u5047\u5982\u90fd\u9700\u8981\u8fd96\u4e2a\u6a21\u5757\u7684\u5934\u6587\u4ef6, IncludePath\u4e2d\u53ea\u6dfb\u52a0\u4e86model_root. */ /* \u4f60\u5f53\u7136\u53ef\u4ee5\u5927\u529b\u51fa\u5947\u8ff9, \u5c06\u8fd96\u4e2a\u6587\u4ef6\u5939\u5168\u90e8\u6dfb\u52a0\u5230IncludePath\u4e2d, \u7136\u540e */ #include \"functionA.h\" #include \"functionB.h\" ... #include \"functionF.h\" /* \u4f46\u6700\u597d\u7684\u505a\u6cd5\u662f, \u4e0d\u6dfb\u52a0IncludePath, \u4f7f\u7528\u76f8\u5bf9\u8def\u5f84\u5305\u542b, \u4fdd\u8bc1\u6839\u76ee\u5f55\u5728IncludePath\u5c31\u53ef\u4ee5 */ #include \"./flodA/functionA.h\" #include \"./foldB/functionB.h\" ... #include \"./foldF/functionf.h\" \u6e90\u6587\u4ef6 \u5982\u679c\u6709\u516c\u5f00\u7684\u5185\u5bb9\uff0c\u5fc5\u987b\u8981\u6709\u4e00\u4e2a\u4e0e\u6e90\u6587\u4ef6\u540c\u540d\u7684\u5934\u6587\u4ef6\uff0c \u516c\u5f00\u5185\u5bb9\u5199\u5728\u5934\u6587\u4ef6\u4e2d \u4e0d\u8981\u4f7f\u7528\u65e0\u610f\u4e49\u7684\u540d\u79f0\uff0c\u5982\u679c\u662f\u67d0\u4e2a\u6a21\u5757\u7684\u4ee3\u7801\uff0c\u4fdd\u8bc1\u670d\u52a1\u5bf9\u8c61\u5355\u4e00\uff0c\u4e0d\u8981\u5305\u542b\u592a\u591a\u5176\u4ed6\u6a21\u5757\u7684\u4ee3\u7801\u3002 \u5bf9\u4e8eC++\u4ee3\u7801\uff0c\u4f7f\u7528 .cpp \u540e\u7f00 \u5934\u6587\u4ef6\u5f00\u5934\u548c\u672b\u5c3e\u5fc5\u987b\u52a0\u4e0a\u56fa\u5b9a\u683c\u5f0f\u7684\u5b8f\u5b9a\u4e49\uff0c\u5373 #ifndef ... #endif /** * @file xxx.h * @brief balabala * @auhor yourname * @date 2024-02-20 * @version 0.1 */ #ifndef __XXX_H #define __XXX_H ... #endif /* __XXX_H */ \u7f29\u8fdb\u4e0e\u7a7a\u683c \u7edf\u4e00\u4f7f\u75284\u4e2a\u7a7a\u683c\u7f29\u8fdb\uff0c\u4e0d\u4f7f\u7528Tab\u7f29\u8fdb\uff0c\u4e0d\u540c\u7f16\u8f91\u5668\u5b9a\u4e49\u7684\u5236\u8868\u7b26\u957f\u5ea6\u4e0d\u4e00\uff0c\u5bb9\u6613\u4ea7\u751f\u9519\u4f4d\uff0c\u6240\u4ee5\u4f7f\u7528 \u56db\u4e2a\u7a7a\u683c\u4ee3\u66ff\u5236\u8868\u7b26 \u5d4c\u5957\u7f29\u8fdb\u5c3d\u91cf\u63a7\u5236\u57284\u5c42\u4ee5\u5185\uff0c\u6700\u591a\u63a5\u53d76\u5c42\uff0c \u8d85\u8fc74\u5c42\u4f18\u5316\uff0c\u8d85\u8fc76\u5c42\u5fc5\u987b\u91cd\u5199 if () {}, switch () {}, case () {} \u8fd9\u7c7b\u5e26\u82b1\u62ec\u53f7\u7684\u5173\u952e\u5b57\u540e\u987b\u6709\u7a7a\u683c\uff1b\u4f46\u662f\u5bf9\u4e8e\u4e0d\u8ddf\u82b1\u62ec\u53f7\u7684\u5173\u952e\u5b57\uff0c\u5982 sizeof(), __arrtibute__() \uff0c\u4e0d\u5e26\u7a7a\u683c \u5706\u62ec\u53f7\u3001\u65b9\u62ec\u53f7\u5185\u7684\u4ee3\u7801\u4e0e\u62ec\u53f7\u4e4b\u95f4\u4e0d\u52a0\u7a7a\u683c\uff0c\u5916\u8fb9\u6839\u636e\u60c5\u51b5\u6dfb\u52a0\u7a7a\u683c\uff0c\u6bd4\u5982\u4e0b\u9762\u7b2c2\u884c\u7684\u4ee3\u7801\u4e0d\u5e94\u8be5\u5199\u6210\uff1a data [ 3 ] = ( uint8_t )( verify_key >> 8 ); \u4e8c\u5143\u3001\u4e09\u5143\u64cd\u4f5c\u7b26\u524d\u540e\u90fd\u8981\u52a0\u7a7a\u683c\uff0c\u5982\uff1a = + - < > * / % ^ <= >= == != ? : \u4e00\u5143\u64cd\u4f5c\u7b26\u540e\u4e0d\u8981\u52a0\u7a7a\u683c\uff0c\u5982\uff1a &(\u53d6\u5730\u5740) *(\u53d6\u6307\u9488\u7684\u5185\u5bb9) + - ~ ! \uff0c\u4f46\u662f\u5982\u679c\u58f0\u660e\u6307\u9488\u53d8\u91cf\uff0c * \u653e\u5728\u9760\u8fd1\u53d8\u91cf\u540d\u7684\u4e00\u4fa7\uff0c\u661f\u53f7\u5de6\u8fb9\u6709\u4e00\u4e2a\u7a7a\u683c \u81ea\u589e\u548c\u81ea\u51cf\u8fd0\u7b97\u7b26\u524d\u540e\u90fd\u4e0d\u52a0\u7a7a\u683c\uff0c\u5982\uff1a num++, --num \u8bbf\u95ee\u7ed3\u6784\u4f53\u6210\u5458\u7684\u64cd\u4f5c\u7b26\u524d\u540e\u4e0d\u52a0\u7a7a\u683c\uff0c\u5982\uff1a Init.Mode, hspi->Instance \u9017\u53f7\uff0c\u5206\u53f7\u53ea\u5728\u540e\u9762\u6dfb\u52a0\u7a7a\u683c\uff0c\u5982\uff1a int age_max, age_min; \u5982\u679c\u5206\u53f7\u5728\u884c\u672b\uff0c\u7a7a\u683c\u53ef\u52a0\u53ef\u4e0d\u52a0 \u6570\u7ec4\u4e0b\u6807\u7684\u65b9\u62ec\u53f7\u90fd\u6ca1\u6709\u7a7a\u683c\uff0c\u5982 buf[i] \u5757\u6ce8\u91ca /* xxx */ \u4e0e\u6ce8\u91ca\u5185\u5bb9xxx\u524d\u540e\u5404\u4e00\u4e2a\u7a7a\u683c \u884c\u6ce8\u91ca // xxx \u53cc\u659c\u7ebf\u540e\u6709\u4e00\u4e2a\u7a7a\u683c\uff0c\u4e14\u4e24\u6761\u659c\u7ebf\u4e0e\u884c\u5bf9\u9f50\uff0c\u4e0d\u8981\u653e\u5728\u884c\u9996 \u4ee5\u4e0a\u51e0\u70b9\u4ee3\u7801\u4e3e\u4f8b\uff1a /* \u8fd0\u7b97\u7b26\u4e0e\u6570\u7ec4\u4e0b\u6807 */ data[3] = (uint8_t)(verify_key >> 8); for (int i = 0; i <= num; i++) { datax->buf[i] = x1 * (x2 + i) + baseval; } /* \u58f0\u660e\u6307\u9488\u53d8\u91cf */ char *str = NULL; \u5f53\u7136\u4e86\uff0c\u6211\u4eec\u6ca1\u5fc5\u8981\u5173\u6ce8\u8fd9\u4e48\u591a\u7ec6\u8282\uff0c\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u81ea\u52a8\u683c\u5f0f\u5316\u90fd\u4f1a\u505a\u597d\u8fd9\u4e00\u5207\u3002 \u62ec\u53f7\u6362\u884c \u6240\u6709\u5de6\u82b1\u62ec\u53f7\u4e0d\u6362\u884c\uff0c\u53f3\u82b1\u62ec\u53f7\u5355\u72ec\u4e00\u884c\uff0c\u5bf9\u4e8e else \u8bed\u53e5\u53f3\u82b1\u62ec\u53f7\u4e0d\u6362\u884c\u3002\u8fd9\u6837\u662f\u4e3a\u4e86\u51cf\u5c11\u4ee3\u7801\u9605\u8bfb\u8d1f\u62c5\uff0c\u4e00\u4e2a\u5de6\u82b1\u62ec\u53f7\u5360\u4e00\u884c\u4ee3\u7801\u4f1a\u770b\u8d77\u6765\u6bd4\u8f83\u957f\uff0c\u53f3\u82b1\u62ec\u53f7\u5355\u72ec\u4e00\u884c\u53ef\u4ee5\u63d0\u9192\u8bfb\u8005\u8fd9\u4e2a\u4ee3\u7801\u5757\u5230\u5e95\u4e86 \u5bf9\u4e8e\u53c2\u6570\u5217\u8868\u6216\u8005\u5176\u4ed6\u5706\u62ec\u53f7\u5185\u6362\u884c\u573a\u666f\uff0c\u540e\u884c\u4e0e\u7b2c\u4e00\u884c\u5de6\u62ec\u53f7\u540e\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5bf9\u9f50\uff0c\u53f3\u62ec\u53f7\u4e0d\u53e6\u8d77\u4e00\u884c /* \u82b1\u62ec\u53f7\u4f7f\u7528\u6848\u4f8b */ /** * @brief \u6309\u952e\u626b\u63cf * * @param mode \u662f\u5426\u652f\u6301\u8fde\u6309 * 0-\u4e0d\u652f\u6301\u8fde\u6309, 1-\u652f\u6301\u8fde\u6309 * @return \u6309\u4e0b\u7684\u6309\u952e * @retval \u6309\u4e0b:`KEY0_PRES ~ WKUP_PRES` * @retval \u672a\u6309\u4e0b:`0` * @note \u6ce8\u610f\u6b64\u51fd\u6570\u6709\u54cd\u5e94\u4f18\u5148\u7ea7,`KEY0 > KEY1 > WK_UP` */ uint8_t key_scan(uint8_t mode) { static uint8_t key_up = 1; /* \u6309\u952e\u677e\u5f00\u6807\u5fd7 */ if (mode == 1) { key_up = 1; /* \u652f\u6301\u8fde\u6309 */ } if (key_up && (KEY0 == 0 || KEY1 == 0 || WK_UP == 1)) { delay_ms(10); key_up = 0; if (KEY0 == 0) { return KEY0_PRES; } else if (KEY1 == 0) { return KEY1_PRES; } else if (WK_UP == 1) { return WKUP_PRES; } } else if (KEY0 == 1 && KEY1 == 1 && WK_UP == 0) { key_up = 1; } return 0; /* \u65e0\u6309\u952e\u6309\u4e0b */ } /* \u62ec\u53f7\u5185\u6362\u884c */ xTaskCreate((TaskFunction_t)start_task, /* \u4efb\u52a1\u51fd\u6570 */ (const char *)\"start_task\", /* \u4efb\u52a1\u540d\u79f0 */ (uint16_t)START_STK_SIZE, /* \u4efb\u52a1\u5806\u6808\u5927\u5c0f */ (void *)NULL, /* \u4f20\u5165\u7ed9\u4efb\u52a1\u51fd\u6570\u7684\u53c2\u6570 */ (UBaseType_t)START_TASK_PRIO, /* \u4efb\u52a1\u4f18\u5148\u7ea7 */ (TaskHandle_t *)&g_start_task_handler); /* \u4efb\u52a1\u53e5\u67c4 */ /* \u4e0b\u4e00\u884c\u7684\u4f4d\u7f6e\u4e0e\u7b2c\u4e00\u884c\u62ec\u53f7\u540e\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5bf9\u9f50, \u6700\u540e\u7684\u53f3\u62ec\u53f7\u4e0d\u6362\u884c */ ring_fifo_t *ring_fifo_init(void *buf, uint32_t size, enum ring_fifo_type type); \u7a7a\u884c \u6587\u4ef6\u5934\u6ce8\u91ca\u540e\u6709\u4e00\u4e2a\u7a7a\u884c \u51fd\u6570\u4e4b\u95f4\u987b\u52a0\u4e00\u4e2a\u7a7a\u884c \u5728\u6ce8\u91ca\u67d0\u4e2a\u51fd\u6570\u3001\u7ed3\u6784\u4f53\u3001\u679a\u4e3e\u3001\u53d8\u91cf\u7684\u529f\u80fd\u65f6\u5019\u4e0d\u8981\u52a0\u7a7a\u884c\uff0c\u89c1\u4e0b\u9762\u6ce8\u91ca\u7684\u8bf4\u660e \u5728\u4e00\u4e2a\u51fd\u6570\u4e2d\uff0c\u6bcf\u4e2a\u76f8\u5bf9\u72ec\u7acb\u7684\u64cd\u4f5c\u5b8c\u6210\u4ee5\u540e\u6700\u597d\u6709\u4e00\u4e2a\u7a7a\u884c\uff0c\u6bd4\u5982\u4e0b\u9762\u7684\u4ee3\u7801\u5757\uff0c11,17,23\u884c\u90fd\u6709\u4e00\u4e2a\u7a7a\u884c\uff0c\u8868\u793a\u4e0a\u4e00\u4e2a\u64cd\u4f5c\u5b8c\u6210\u4e86\uff0c\u8be5\u4e0b\u4e00\u4e2a\u64cd\u4f5c\u4e86\uff0c\u65b9\u4fbf\u9605\u8bfb /** * @brief \u7528\u6237\u4ece\u5feb\u9012\u67dc\u53d6\u5305\u88f9 * * @param pick_up_code \u53d6\u4ef6\u7801 * @return status_t \u64cd\u4f5c\u72b6\u6001 */ status_t user_pick_up_express(uint32_t pick_up_code) { if (pick_up_code == 0) { return ERR_INPUT_NULL; } uint32_t cabinet_number = seek_express_by_code(pick_up_code); if (cabinet_number == 0) { /* \u67dc\u5b50\u7f16\u53f7\u4e0d\u5b58\u5728 */ return ERR_NO_FOUND; } status_t cabient_status = cabient_open_the_door(cabient_number); if (cabient_status == ERROR) { /* \u5f00\u95e8\u51fa\u9519, \u53ef\u80fd\u662f\u67dc\u5b50\u7ee7\u7535\u5668\u51fa\u95ee\u9898\u4e86, \u63d0\u793a\u8054\u7cfb\u7ba1\u7406\u5458 */ return ERR_OPEN_DOOR; } return OK; } \u7528\u4e00\u5806 * \u9694\u5f00\u4e5f\u662f\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\uff0c\u4e0d\u8fc7\u8981\u6ce8\u610f\u4e00\u884c80\u4e2a\u5b57\u7b26 \u4ee3\u7801\u884c \u4e00\u884c\u4ee3\u7801\u53ea\u505a\u4e00\u4ef6\u4e8b\u60c5\uff0c\u6bd4\u5982\u53ea\u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cf\uff0c\u6216\u8005\u4e00\u6761\u8bed\u53e5\uff0c\u8fd9\u6837\u65b9\u4fbf\u9605\u8bfb\u4e0e\u6ce8\u91ca \u591a\u4e2a\u8bed\u53e5\u4e0d\u8981\u653e\u5728\u4e00\u884c\u91cc\uff0c\u4e00\u884c\u5185\u4e0d\u8981\u5199\u591a\u4e2a\u8fde\u7eed\u8d4b\u503c\u7684\u8bed\u53e5 \u4e00\u884c\u4ee3\u7801\u5c3d\u91cf\u4e0d\u8981\u591a\u4e2a\u53d8\u91cf\u3002\u5982\u679c\u5728\u903b\u8f91\u4e0a\u6bd4\u8f83\u76f8\u8fd1\uff0c\u53ef\u4ee5\u5199\u5728\u4e00\u884c\u4e0a\uff0c\u6bd4\u5982 float width, height; \u4e00\u884c\u6700\u591a80\u4e2a\u5b57\u7b26\uff0c\u5199\u4ee3\u7801\u7ecf\u5e38\u9700\u8981\u5206\u5c4f\uff0c\u4e00\u884c\u4ee3\u7801\u5982\u679c\u592a\u957f\u5c31\u4e0d\u592a\u65b9\u4fbf\u4e86\u3002 /* \u4e0d\u89c4\u8303\u5199\u6cd5 */ a = x + y; b = x - y; a = b = 0; /* \u89c4\u8303\u5199\u6cd5 */ a = x + y; b = x - y; a = 0; b = 0; \u4ee3\u7801\u5757 if, for, while, do \u8fd9\u7c7b\u8bed\u53e5\uff0c\u5fc5\u987b\u52a0\u82b1\u62ec\u53f7\uff0c\u4e00\u4e2a\u8bed\u53e5\u4e5f\u5fc5\u987b\u52a0 \uff0c\u8fd9\u6837\u53ef\u4ee5\u6709\u6548\u9632\u6b62\u7f16\u7801\u65f6\u51fa\u73b0\u7684\u5931\u8bef \u53ca\u65f6\u6e05\u7406\u672a\u4f7f\u7528\u7684\u51fd\u6570\u3001\u53d8\u91cf\u7b49\u6b7b\u4ee3\u7801 \uff0c\u4e0d\u8981\u59a8\u788d\u9605\u8bfb\u3002\u5982\u679c\u6ca1\u6709\u66f4\u6539Template\u7684\u8b66\u544a\u7b49\u7ea7\uff0c\u672a\u4f7f\u7528\u7684\u53d8\u91cf\u3001\u51fd\u6570\u90fd\u4f1a\u7ed9\u8b66\u544a\u3002\u6211\u7ed9\u7684Template\u662f\u4e3a\u901a\u7528\u6027\u8003\u8651\u7684\uff0c\u8981\u662f\u4f60\u81ea\u5df1\u5199\u7684\u4e1c\u897f\u53ca\u65f6\u6e05\u7406\u6ca1\u6709\u7528\u5230\u7684\u4ee3\u7801\uff0c\u53ef\u8bfb\u6027\u662f\u7b2c\u4e00\u4f4d\u7684\u3002 \u672a\u4f7f\u7528\u7684\u4ee3\u7801\u53eb\u505a\u6b7b\u4ee3\u7801(Dead-code)\uff0cDead-code\u5728\u4e00\u4e2a\u4f01\u4e1a\u9879\u76ee\u4e2d\u90fd\u662f\u5f88\u5371\u9669\u7684\uff0c\u8fd9\u662f\u7531\u4e8eDead-code\u4e00\u822c\u5199\u5b8c\u4ee5\u540e\u5c31\u4e0d\u4f1a\u518d\u770b\u4e86\uff0c\u5c31\u7b97code reviewing\u65f6reviewer\u4e5f\u53ea\u662f\u5927\u6982\u626b\u4e24\u773c\uff0c\u4e0d\u4f1a\u53bb\u6267\u884c\u8c03\u7528\uff0c\u8fd9\u6bb5\u4ee3\u7801\u5c31\u4f1a\u5931\u53bb\u7ef4\u62a4\u3002\u5982\u679c\u54ea\u4e00\u5929\u67d0\u4e2a\u4eba\u7a81\u7136\u8c03\u7528\u4e86Dead-code\u4e2d\u7684\u51fd\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u6709\u5f88\u9690\u853d\u7684bug\uff0c\u7a81\u7136\u6709\u4e00\u5929\u5c31\u89e6\u53d1\u4e86\uff0c\u8fd9\u4f1a\u9020\u6210\u4e0d\u53ef\u9884\u4f30\u7684\u635f\u5931\u3002\u56e0\u6b64\u5bf9\u4e8eDead-code\uff0c\u5b81\u613f\u79fb\u9664\uff0c\u672a\u6765\u67d0\u5929\u518d\u91cd\u5199\u4e00\u904d\uff0c\u4e5f\u4e0d\u4f1a\u653e\u5728\u54ea\u91cc\u4e0d\u7ba1\u3002 \u8981\u6ce8\u610f\u903b\u8f91\u4e0a\u6c38\u8fdc\u4e0d\u53ef\u80fd\u6267\u884c\u7684\u4ee3\u7801\uff0c\u5982\u679c\u6ca1\u6709\u66f4\u6539Template\u7684\u8b66\u544a\u7b49\u7ea7\uff0c\u7f16\u8bd1\u4f1a\u7ed9\u8b66\u544a\uff1a \u5bf9\u4e8e\u7a7a\u8bed\u53e5\uff0c\u4fdd\u7559\u4e00\u4e2a {} \u5373\u53ef\uff0c\u62ec\u53f7\u91cc\u9762\u5373\u6ca1\u6709\u7a7a\u683c\uff0c\u4e5f\u4e0d\u6362\u884c\uff0c\u4f46\u662f\u5bf9\u4e8e if else \uff0c\u62ec\u53f7\u5185\u8981\u6362\u884c\uff1b\u5982\u679c\u4f7f\u7528\u5206\u53f7\uff0c\u5fc5\u987b\u6362\u884c\uff0c\u4e14\u5206\u53f7\u524d\u7f29\u8fdb\u3002\u8fd9\u6837\u505a\u610f\u5728\u63d0\u793a\u9605\u8bfb\u8005\u6ce8\u610f\u6b64\u5904\u7684\u903b\u8f91\u3002 /* \u4e0d\u89c4\u8303\u5199\u6cd5 */ if (condition) return true; if (condition) return true; if (condition) { return true; } if (condition) {} else { ... } while (condition) { } /* \u89c4\u8303\u5199\u6cd5 */ if (condition) { return true; } /* \u7a7a\u8bed\u53e5\u89c4\u8303\u5199\u6cd5 */ while (condition) {} /* \u5982\u679c\u4e0d\u7528\u4e0a\u9762\u7684\u65b9\u5f0f, \u53ef\u4ee5\u91c7\u7528\u4e0b\u9762\u7684\u65b9\u5f0f. \u5982\u679c\u5206\u53f7\u4e0d\u6362\u884c\u6613\u88ab\u8bef\u8ba4\u6210\u51fd\u6570\u8c03\u7528 */ while (condition) ; /* if else\u4e2d\u7684\u7a7a\u8bed\u53e5\u62ec\u53f7\u9700\u6362\u884c. \u5982\u679c\u5927\u62ec\u53f7\u4e2d\u95f4\u4e0d\u6362\u884c\u6613\u88ab\u8bef\u8ba4\u6210if\u6761\u4ef6\u6210\u7acb\u540e\u6267\u884c */ if (condition) { } else { ... } \u51fd\u6570 \u4e00\u4e2a\u51fd\u6570\u5c3d\u91cf\u4e0d\u8981\u8d85\u8fc710\u4e2a\u5c40\u90e8\u53d8\u91cf \uff0c\u8d85\u8fc7\u8bf4\u660e\u4f60\u7684\u529f\u80fd\u592a\u590d\u6742\u4e86\uff0c\u8981\u8003\u8651\u4f18\u5316 \u51fd\u6570\u53c2\u6570\u4e5f\u4e0d\u8981\u592a\u591a\uff0c\u6700\u591a6\u4e2a\uff0c\u592a\u591a\u8bf4\u660e\u4f60\u7684\u529f\u80fd\u592a\u590d\u6742\u4e86\uff0c\u8981\u8003\u8651\u4f18\u5316 \u4e00\u4e2a\u51fd\u6570\u4e5f\u4e0d\u8981\u592a\u957f\uff0c100\u884c\u5de6\u53f3\u4e3a\u5b9c\uff0c\u592a\u957f\u540c\u7406 \u6821\u9a8c\u903b\u8f91\u653e\u524d\u9762\uff0c\u53d1\u73b0\u9519\u8bef\u65e9\u8fd4\u56de\uff0c\u8fd9\u6837\u80fd\u6709\u6548\u51cf\u5c11\u5d4c\u5957\uff0c\u907f\u514d\u4ee3\u7801\u903b\u8f91\u9519\u8bef \u4e0d\u5141\u8bb8\u4f7f\u7528\u9012\u5f52 \uff0c\u9012\u5f52\u5bf9\u4e8e\u8d44\u6e90\u6d88\u8017\u5de8\u5927\uff0c\u6613\u9020\u6210\u6808\u6ea2\u51fa\uff08\u9ed8\u8ba4\u60c5\u51b5\u4e0b startup \u5b9a\u4e49\u7684\u6808\u5927\u5c0f\u53ea\u6709200\u5b57\u8282\uff09 \u9664 void \u51fd\u6570\u3001\u6784\u9020\u51fd\u6570\u3001\u6790\u6784\u51fd\u6570\u4ee5\u5916\uff0c \u51fd\u6570\u672b\u5c3e\u5fc5\u987b\u8981 return \u8fd4\u56de\u503c \uff0c\u5982\u679c\u6ca1\u6709\u8fd4\u56de\u4efb\u4f55\u503c\u7f16\u8bd1\u4f1a\u7ed9\u8b66\u544a \u51fd\u6570\u7684\u529f\u80fd\u8981\u5355\u4e00\uff0c\u4e0d\u80fd\u5904\u7406\u592a\u591a\u7684\u4e1a\u52a1\u903b\u8f91\uff0c\u5bf9\u4e8e\u5355\u4e00\u6a21\u5757\u7684\u6587\u4ef6\u670d\u52a1\u7684\u5bf9\u8c61\u4e5f\u8981\u5355\u4e00\uff0c\u4e0d\u8981\u8ba9\u4e00\u4e2a\u6587\u4ef6\u6216\u8005\u51fd\u6570\u6210\u5927\u6742\u70e9\u3002 \u6587\u4ef6\u548c\u51fd\u6570\u7684\u529f\u80fd\u8981\u4e13\u4e00\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u533b\u9662\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u7a0b\u5e8f\uff0c\u4e00\u5bb6\u7efc\u5408\u6027\u533b\u9662\u4e00\u822c\u90fd\u4f1a\u6709\u82e5\u5e72\u4e2a\u79d1\u5ba4\uff0c\u6bd4\u5982\u5185\u79d1\u3001\u5916\u79d1\u3001\u653e\u5c04\u79d1\u7b49\u7b49\u3002\u800c\u5185\u79d1\u53c8\u5305\u62ec\u547c\u5438\u79d1\u3001\u5fc3\u8840\u7ba1\u79d1\uff0c\u4f46\u662f\u5185\u79d1\u4e0d\u4f1a\u6709\u76ae\u80a4\u79d1\u3002\u5916\u79d1\u5305\u62ec\u9aa8\u79d1\u3001\u8111\u5916\u79d1\uff0c\u4f46\u662f\u4e0d\u4f1a\u6709\u6d88\u5316\u5185\u79d1\u3002\u540c\u6837\u7684\uff0c\u5728\u7a0b\u5e8f\u4e2d\u4e5f\u4e0d\u80fd\u8fd9\u6837\uff0c\u4fdd\u8bc1\u670d\u52a1\u7684\u5bf9\u8c61\u7edf\u4e00\u3002\u50cf\u547c\u5438\u79d1\u8fd9\u6837\u7684\u4e13\u79d1\u95e8\u8bca\u5c31\u53ef\u4ee5\u770b\u4f5c\u4e00\u4e2a\u72ec\u7acb\u7684\u6587\u4ef6\uff0c\u533b\u751f\u7ed9\u4f60\u6cbb\u75c5\u7684\u6d41\u7a0b\u76f8\u5f53\u4e8e\u51fd\u6570\u3002 \u4f46\u662f\u6211\u4eec\u5728\u7a0b\u5e8f\u4e2d\u7ecf\u5e38\u4f1a\u9047\u5230\u4e00\u4e9b\u4ea4\u53c9\u7684\u529f\u80fd\uff0c\u6bd4\u5982\u533b\u9662\u7684\u653e\u5c04\u79d1\uff0c\u5c31\u4f1a\u6709\u5185\u5916\u79d1\u4ea4\u53c9\u3002\u9aa8\u6298\u4e86\u5f97\u53bb\u653e\u5c04\u79d1\u62cd\u7247\u5b50\uff0c\u8111\u5b50\u91cc\u6709\u80bf\u7624\uff0c\u4e5f\u5f97\u53bb\u653e\u5c04\u79d1\u62cd\u7247\u5b50\u3002\u90a3\u4e48\u5bf9\u4e8e\u8fd9\u79cd\u4ee3\u7801\u9700\u8981\u6211\u4eec\u5904\u7406\u597d\u5185\u5916\u7684\u903b\u8f91\uff0c\u4e0d\u8981\u4e71\u4e03\u516b\u7cdf\u7684\uff0c\u4e5f\u4e0d\u8981\u4e00\u80a1\u8111\u5168\u653e\u5230\u4e00\u4e2a\u5730\u65b9\u3002\u5f53\u7136\u5b9e\u9645\u60c5\u51b5\u5f53\u7136\u6ca1\u6709\u6ca1\u6709\u90a3\u4e48\u7406\u60f3\uff0c\u8fd9\u5c31\u9700\u8981\u4f60\u81ea\u5df1\u601d\u8003\uff0c\u4ed4\u7ec6\u659f\u914c\uff0c\u627e\u5230\u6700\u4f18\u89e3\u3002 \u53d8\u91cf \u6240\u6709\u5c40\u90e8\u53d8\u91cf\u54ea\u91cc\u7528\u5728\u54ea\u91cc\u58f0\u660e\u3002 \u4e0d\u5141\u8bb8\u4f7f\u7528\u672a\u5b9a\u4e49\u521d\u503c\u7684\u53d8\u91cf \u5982\u679c\u521d\u503c\u53ef\u4ee5\u786e\u5b9a\uff0c\u5199\u5728\u4e00\u884c\u4e0a\uff0c\u4e0d\u8981\u5206\u5f00\u5199\uff1a xxxStatus_t xxx_status = get_xxx_status(xxx); \u4e0d\u786e\u5b9a\u521d\u503c\u7684\u53d8\u91cf\u7ed9 0 \u6216 1 \uff0c\u4e0d\u786e\u5b9a\u521d\u503c\u7684\u6307\u9488\u7ed9 NULL \uff0c\u4e0d\u786e\u5b9a\u7684\u7ed3\u6784\u4f53\u53d8\u91cf\u7ed9 {0} \u4e0d\u80fd\u8ba9\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u8d85\u51fa\u5b83\u7684\u5b9e\u9645\u4f5c\u7528\u8303\u56f4\uff0c\u6bd4\u5982\u4e00\u4e2a\u53d8\u91cf\u5c31\u5728 if \u6761\u4ef6\u6210\u7acb\u91cc\u7528\uff0c\u4f60\u5c31\u4e0d\u5e94\u8be5\u58f0\u660e\u5728 if \u5916\u3002 \u5c24\u5176\u662f\u5bf9\u4e8e\u5faa\u73af\u53d8\u91cf i, j, k \uff0c\u5982\u679c\u53ea\u662f\u5355\u7eaf\u7684\u4e0b\u6807\u610f\u4e49\uff0c\u5728 for \u91cc\u9762\u58f0\u660e\u5e76\u5b9a\u4e49\uff0c\u4e0d\u8981\u5728\u5916\u8fb9\u58f0\u660e\uff0c\u4e5f\u5c31\u662f\uff1a for (int i = 0, i < count; i++) \u5982\u679c\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u53ea\u6709\u4e00\u4e2a\u6587\u4ef6\u4f7f\u7528\uff0c\u5c3d\u91cf\u52a0 static \u4fee\u9970\u7b26\uff0c\u8fd9\u6837\u80fd\u907f\u514d\u5176\u4ed6\u4eba\u5728\u5176\u4ed6\u6587\u4ef6\u8c03\u7528\u672c\u6587\u4ef6\u7684\u53d8\u91cf\uff0c\u4ea7\u751f\u9884\u671f\u4e4b\u5916\u7684\u540e\u679c\u3002 \u5168\u5c40\u53d8\u91cf\u5982\u679c\u4e0d\u52a0 static \uff0c\u6574\u4e2a\u7a0b\u5e8f\u662f\u53ef\u4ee5\u8bbf\u95ee\u7684\uff0c\u4efb\u4f55\u4e00\u4e2a\u5730\u65b9\u7684 extern \u58f0\u660e\u90fd\u53ef\u4ee5\u8bbf\u95ee\u5230\u8fd9\u4e2a\u53d8\u91cf\u3002 \u5bf9\u4e8e\u53ea\u7528\u5199\u5165\u4e00\u6b21\u521d\u503c\u7684\u53d8\u91cf\uff0c\u5c3d\u91cf\u52a0 const \u4fee\u9970\u7b26\uff0c\u8fd9\u6837\u80fd\u591f\u907f\u514d\u5176\u4ed6\u4eba\u4e71\u6539\u53d8\u91cf\u7684\u503c\u4ea7\u751f\u9884\u671f\u4e4b\u5916\u7684\u540e\u679c\u3002 \u4e00\u4e2a\u6709\u8da3\u7684\u51b7\u77e5\u8bc6\uff0c\u6211\u4eec\u5199\u7684\u7a0b\u5e8f\u5927\u90e8\u5206\u53d8\u91cf\uff0c\u5927\u591a\u53ea\u662f\u7ed9\u4e86\u4e00\u6b21\u521d\u503c\u540e\u518d\u6ca1\u53d8\u8fc7\u3002\u4f46\u5927\u91cf\u7684 const \u4fee\u9970\u7b26\u52bf\u5fc5\u4f1a\u9020\u6210\u9605\u8bfb\u8d1f\u62c5\uff0c\u56e0\u6b64\u5bf9\u4e8e\u4e00\u4e9b\u91cd\u8981\u7684\u53d8\u91cf\u8003\u8651\u662f\u5426\u52a0 const \u4fee\u9970\u7b26\u662f\u975e\u5e38\u6709\u5fc5\u8981\u7684\uff0c\u8fd9\u6837\u5c31\u4e0d\u7528\u62c5\u5fc3\u53d8\u91cf\u5728\u67d0\u4e2a\u9690\u853d\u7684\u89d2\u843d\u88ab\u91cd\u65b0\u8d4b\u503c\u3002 uint32_t arr[4]; int16_t foo; /* \u4e0d\u5141\u8bb8\u672a\u5b9a\u4e49\u5c31\u4f7f\u7528arr\u6570\u7ec4 */ printf(\"%d\", a[1]); /* \u4e0d\u5141\u8bb8\u4f7f\u7528\u672a\u5b9a\u4e49\u7684\u53d8\u91cf */ int16_t bar = foo + 1; /* \u5bf9\u4e8e\u4e0d\u786e\u5b9a\u5185\u5bb9\u7684\u6570\u7ec4, \u4f7f\u7528memset\u521d\u59cb\u5316 */ memset(arr, 0, sizeof(arr)); /* \u7533\u8bf7\u5806\u5185\u5b58\u65f6, \u4f7f\u7528calloc\u53ef\u4ee5\u5c06\u7533\u8bf7\u7684\u5185\u5b58\u8bbe\u7f6e\u4e3a\u96f6 */ uint16_t *new_data = (uint16_t *)calloc(sizeof(uint16_t) * MAX_LEN); \u590d\u6742\u6570\u636e\u7c7b\u578b \u5bf9\u4e8e\u7ed3\u6784\u4f53\u6216\u8005\u8054\u5408\u4f53\uff0c\u9664\u975e\u4e0d\u516c\u5f00\uff0c\u53ea\u7528\u6765\u58f0\u660e\u4e00\u4e2a\u6216\u51e0\u4e2a\u53d8\u91cf\uff0c\u5426\u5219 \u7edf\u4e00\u4f7f\u7528 typedef \u5b9a\u4e49\u540d\u79f0 \uff0c\u5e76\u7ed3\u5c3e\u5e26 _t \u540e\u7f00 /* \u6b63\u786e\u5199\u6cd5 */ typedef struct foo { /* \u6b64\u5904foo\u53ef\u5199\u53ef\u4e0d\u5199, \u5982\u679c\u6709\u50cf\u4e0b\u9762\u8fd9\u6837\u9700\u8981\u5f15\u7528\u8be5\u7ed3\u6784\u4f53\u6307\u9488\u7684\u90a3\u5fc5\u987b\u5199 */ struct foo *next; /*!< next item */ int index; /*!< index of item */ uint8_t flag; /*!< flag of item */ ... } foo_t; /* \u4f7f\u7528_t\u540e\u7f00 */ foo_t foo_obj; /* \u5b9a\u4e49\u7ed3\u6784\u4f53\u53d8\u91cf */ /* \u9519\u8bef\u5199\u6cd5 */ struct foo { struct foo *next; /*!< next item */ int index; /*!< index of item */ uint8_t flag; /*!< flag of item */ ... }; sturct foo foo_obj; /* \u5b9a\u4e49\u7ed3\u6784\u4f53\u53d8\u91cf */ /* \u7279\u6b8a\u60c5\u51b5, \u53ea\u58f0\u660e\u4e00\u4e2a\u6216\u51e0\u4e2a\u7ed3\u6784\u4f53\u53d8\u91cf, \u8fd9\u79cd\u4e0d\u7528typedef\u540d\u8bcd */ /* \u5982\u679c\u5185\u90e8\u4f7f\u7528\u8003\u8651\u662f\u5426\u9700\u8981static\u4fee\u9970\u7b26, \u52a0\u5728struct\u524d\u9762 */ struct foo { int index_of_foo; /*!< \u7d22\u5f15 */ data_t data_of_foo; /*!< \u6570\u636e */ ... } foo_variable_1, foo_variable_2 ... ; \u5bf9\u4e8e\u679a\u4e3e\uff0c\u679a\u4e3e\u6210\u5458\u4f7f\u7528\u5927\u5199\uff08\u5f53\u7136\u67d0\u4e9b\u60c5\u51b5\u4e0b\u53ef\u4ee5\u4f7f\u7528\u5c0f\u5199\uff09 \u4e0e\u5b8f\u5b9a\u4e49\u7c7b\u4f3c\uff0c\u5982\u679c\u53ea\u7528\u6765\u5217\u4e3e\u6570\u636e\uff0c\u6bd4\u5982\u6570\u7ec4\u4e0b\u6807\uff0c\u90a3\u4e48\u53ef\u4ee5\u4e0d\u5b9a\u4e49\u540d\u79f0 \u679a\u4e3e\u7c7b\u578b\u53ef\u4ee5\u7528\u6765\u4f5c\u4e3a\u53c2\u6570\u6216\u8005\u8fd4\u56de\u503c\u3002\u679a\u4e3e\u6210\u5458\u4e00\u884c\u53ea\u5199\u4e00\u4e2a\u6210\u5458\uff0c\u4e0d\u8981\u5806\u5728\u4e00\u884c\u4e0a\u3002 /** * @brief GPIO\u7535\u5e73\u5b9a\u4e49 */ typedef enum { GPIO_PIN_RESET = 0x00U, GPIO_PIN_SET } GPIO_PinState_t; /** * @brief \u72b6\u6001\u5b9a\u4e49 */ typedef enum { HAL_OK = 0x00U, HAL_ERROR, HAL_BUSY, HAL_TIMEOUT } HAL_Status_t; /* \u4e0d\u8981\u5199\u6210\u8fd9\u6837, \u6210\u5458\u4e0d\u6362\u884c */ typedef enum { HAL_OK = 0x00U, HAL_ERROR, HAL_BUSY, HAL_TIMEOUT } HAL_Status_t; /** * @brief HAL\u5199\u5165GPIO\u7535\u5e73 * * @param GPIOx GPIO\u7aef\u53e3 * @param GPIO_Pin GPIO\u5f15\u811a * @param PinState \u5199\u5165\u7535\u5e73 * @return `HAL_Status_t` \u662f\u5426\u5199\u5165\u6210\u529f * @note \u5b9e\u9645HAL\u5e93\u903b\u8f91\u5e76\u975e\u8fd9\u6837, \u53ea\u662f\u4e3e\u4e2a\u4f8b\u5b50 */ HAL_Status_t HAL_GPIO_Write_Pin(GPIO_t *GPIOx, uint16_t GPIO_Pin, GPIO_PinState_t PinState) { assert_param(IS_GPIO_PIN(GPIO_Pin)); ... GPIOx->ODR = GPIO->IDR | (GPIO_PinState << GPIO_Pin); if (GPIOx->IDR == GPIOx->ODR) { return HAL_OK; } else { return HAL_ERROR } } /* \u7eaf\u4e0b\u6807\u5b9a\u4e49, \u53ef\u4ee5\u4e0d\u7528typedef\u5b9a\u4e49\u540d\u79f0 */ enum { LAST = 0x00U, NOW, NEXT }; array[LAST] = ...; \u6570\u7ec4\u4e0e\u6307\u9488 \u5bf9\u4e8e\u6307\u9488\uff0c * \u653e\u5728\u53d8\u91cf\u540d\u7684\u4e00\u4fa7 \uff0c\u5373 char *pointer = NULL \uff0c\u800c\u975e\u7c7b\u578b\u7684\u4e00\u4fa7\uff0c\u5373 char* pointer = NULL \u3002\u653e\u5728\u53f3\u8fb9\u662f\u8981\u6ce8\u610f\u4e0b\u9762\u7684\u60c5\u51b5\uff1a int* p, q; /* \u5f53\u8fd9\u6837\u58f0\u660e\u7684\u65f6\u5019p\u662fint\u6307\u9488, q\u662fint\u53d8\u91cf, \u76f8\u5f53\u4e8e: int* p; int q; */ /* \u6240\u4ee5\u91c7\u7528\u4e0b\u9762\u7684\u65b9\u5f0f, \u770b\u8d77\u6765\u7edf\u4e00 */ int *p, *q; \u4e0d\u5efa\u8bae\u4e00\u884c\u4ee3\u7801\u58f0\u660e\u591a\u4e2a\u53d8\u91cf\uff0c\u56e0\u6b64\u5c3d\u91cf\u907f\u514d\u50cf\u4e0a\u9762\u8fd9\u6837\u5373\u58f0\u660e\u6307\u9488\u53c8\u58f0\u660e\u53d8\u91cf\u3002 \u7533\u8bf7\u7684\u5185\u5b58\u5fc5\u987b\u53ca\u65f6\u91ca\u653e\uff0c\u5426\u5219\u4f1a\u9020\u6210\u5185\u5b58\u6cc4\u6f0f\u3002 \u6307\u9488\u5d4c\u5957\uff08\u6bd4\u5982\u6307\u5411\u6307\u9488 int* \u7684\u6307\u9488 int** \uff09\u6700\u591a\u4e09\u5c42\uff0c\u6570\u7ec4\u6700\u591a\u4e09\u7ef4\u6570\u7ec4 \u58f0\u660e\u6570\u7ec4\u5fc5\u987b\u521d\u59cb\u5316\uff0c\u5982\u679c\u4e0d\u786e\u5b9a\u7ed90\u503c\u3002\u4e0d\u5141\u8bb8\u51fa\u73b0\u672a\u521d\u59cb\u5316\u7684\u6570\u7ec4 \u5bf9\u4e8e\u7ed3\u6784\u4f53\u3001\u8054\u5408\u4f53\u8fd9\u79cd\u590d\u6742\u6570\u636e\u7c7b\u578b\uff0c\u51fd\u6570\u4e4b\u95f4\u4f20\u9012\u65f6\u5c3d\u91cf\u4f7f\u7528\u6307\u9488\uff0c\u4ee5\u51cf\u5c11\u5185\u5b58\u5f00\u9500\uff0c\u4ee5\u53ca\u907f\u514d\u53ef\u80fd\u4ea7\u751f\u7684\u5185\u5b58\u6cc4\u6f0f\u3002 HAL\u5e93\u4e2d\u7684\u53e5\u67c4\u5c31\u662f\u4e00\u4e2a\u7ed3\u6784\u4f53\u3002\u5bf9\u4e8e\u9700\u8981\u4f20\u9012\u53e5\u67c4\u53d8\u91cf\u7684\u5730\u65b9\uff0c\u5c3d\u91cf\u4f7f\u7528\u6307\u9488\uff0c\u4e0d\u8981\u4f7f\u7528\u6574\u4e2a\u53e5\u67c4\u53d8\u91cf\u3002\u5728HAL\u5e93\u4e2d\uff0c\u5982\u679c\u9700\u8981\u5224\u65ad\u67d0\u4e2a\u53e5\u67c4\u6307\u9488\u7684\u5177\u4f53\u5916\u8bbe\uff0c\u4f7f\u7528 handler->Instance \uff0c\u4e0d\u8981\u5224\u65ad\u6307\u9488\u662f\u5426\u4e0e\u67d0\u4e2a\u5916\u8bbe\u7684\u53e5\u67c4\u5730\u5740\u662f\u5426\u76f8\u7b49\uff0c\u8fd9\u6837\u5982\u679c\u67d0\u4e9b\u5730\u65b9\u65f6\u76f4\u63a5\u4f20\u5165\u7684\u53e5\u67c4\u53d8\u91cf\u800c\u4e0d\u662f\u53e5\u67c4\u6307\u9488\uff0c\u5b58\u5728\u5224\u65ad\u5931\u6548\u7684\u9690\u60a3\u3002\u5177\u4f53\u89c1 HAL\u5e93\u53e5\u67c4 \u3002 \u5b8f\u5b9a\u4e49 \u4ee3\u7801\u4e2d\u4e5f\u4e0d\u8981\u7528\u8fc7\u591a\u7684\u5b8f\u5b9a\u4e49\uff0c\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u9002\u5f53\u88c1\u526a\uff0c\u53ca\u65f6\u6e05\u7406\u672a\u4f7f\u7528\u7684\u51fd\u6570\u548c\u53d8\u91cf\uff0c\u800c\u4e0d\u662f\u4f9d\u8d56\u5b8f\u5b9a\u4e49 \u7eed\u884c\u7b26\u53f3\u5bf9\u9f50 \u5b8f\u5b9a\u4e49\u5982\u679c\u6709 #if \u5d4c\u5957\uff0c\u4e0d\u7f29\u8fdb \u4f7f\u7528 #define \u5b9a\u4e49\u5e38\u91cf\u65f6\uff0c\u5e38\u91cf\u503c\u81ea\u52a8\u5bf9\u9f50 /* \u4e0d\u89c4\u8303\u5199\u6cd5 */ #define USE_FOO 0 #define NOT_USE_BAR 1 #if NOT_USE_BAR #define IS_FOO void foo(void); #else /* NOT_USE_BAR */ #define IS_BAR void bar(void); #define LED0(x) \\ (x) ? HAL_GPIO_WritePin(LED0_PORT, LED0_PIN, GPIO_PIN_SET) \\ : HAL_GPIO_WritePin(LED0_PORT, LED0_PIN, GPIO_PIN_RESET) #endif /* NOT_USE_BAR */ /* \u89c4\u8303\u5199\u6cd5 */ #define USE_FOO 0 #define NOT_USE_BAR 1 #if NOT_USE_BAR #define IS_FOO void foo(void); #else /* NOT_USE_BAR */ #define IS_BAR void bar(void); /* \u6700\u53f3\u8fb9\u7684\u53cd\u659c\u6760\u5c31\u662f\u7eed\u884c\u7b26, \u53f3\u5bf9\u9f50 */ #define LED0(x) \\ (x) ? HAL_GPIO_WritePin(LED0_PORT, LED0_PIN, GPIO_PIN_SET) \\ : HAL_GPIO_WritePin(LED0_PORT, LED0_PIN, GPIO_PIN_RESET) #endif /* NOT_USE_BAR */ VSCode\u548cKeil\u53ef\u4ee5\u6298\u53e0\u5b8f\u5b9a\u4e49\uff0c\u8fd9\u6837\u672a\u542f\u7528\u7684\u5b8f\u5b9a\u4e49\u53ef\u4ee5\u4e0d\u663e\u793a goto \u53ef\u4ee5\u4f7f\u7528 goto \uff0c goto \u4f5c\u4e3a\u51fd\u6570\u9000\u51fa\u65f6\u4f7f\u7528\u975e\u5e38\u65b9\u4fbf\uff0cLinux\u5185\u6838\u4e2d\u4e5f\u6709\u4e0d\u5c11\u4ee3\u7801\u7528\u4e86 goto \u3002\u4f46\u8bf7\u4e0d\u8981\u6ee5\u7528 goto \u4e0d\u8981\u8de8\u51fd\u6570\uff1b\u4f7f\u7528 goto \u4e0d\u8981\u5f62\u6210\u5faa\u73af\uff1b\u5c3d\u91cf\u5f80\u540e\u8df3\u8f6c\uff0c\u4e0d\u8981\u8df3\u8f6c\u5230\u524d\u9762\u3002\u5f80\u524d\u8df3\u8f6c\u5bb9\u6613\u5f62\u6210\u6f5c\u5728\u7684\u903b\u8f91\u9519\u8bef\u3002 \u6742\u9879 \u4e0d\u8981\u4f7f\u7528\u9b54\u6cd5\u6570\u5b57(Magic Number)\uff0c\u5373\u7a81\u5982\u5176\u6765\u7684\u6570\u5b57\uff0c\u610f\u4e49\u4e0d\u660e\uff0c\u6bd4\u5982 int magic_number = 3; \u4f60\u544a\u8bc9\u6211\u8fd9\u4e2a3\u662f\u5e72\u4ec0\u4e48\u7684 \u5982\u679c\u8981\u4f7f\u7528\u5e38\u6570\u5c3d\u91cf\u7528\u5b8f\u5b9a\u4e49\uff0c\u4f46\u662f\u4e0d\u8981\u51fa\u73b0\u8fd9\u79cd\u5b8f\u5b9a\u4e49\uff1a #define FIVE 5 \uff0c\u8c01\u4e0d\u77e5\u9053FIVE\u662f5\u554a\uff0c\u4ee3\u7801\u91cc\u4e0d\u80fd\u76f4\u63a5\u51995\u5417 \u4e0d\u8981\u5bf9\u6d6e\u70b9\u6570\u505a\u76f8\u7b49\u6216\u8005\u4e0d\u7b49\u5224\u65ad\uff0c\u6d6e\u70b9\u6570\u7531\u4e8e\u7cbe\u5ea6\u95ee\u9898\u5e76\u4e0d\u4f1a\u6309\u7167\u6211\u4eec\u9884\u671f\u7684\u65b9\u5f0f\u6267\u884c\u3002\u5f88\u5178\u578b\u7684\u4f8b\u5b50\uff0c\u53ef\u4ee5\u81ea\u5df1\u5199\u4e2a\u7a0b\u5e8f\u770b\u4e00\u4e0b 0.1 + 0.2 == 0.3 \u7684\u503c\uff0c\u4f60\u4f1a\u53d1\u73b0\u8fd9\u4e2a\u6761\u4ef6\u7684\u7ed3\u679c\u662f0\u5373 false \u6ce8\u610f\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c\u4ed4\u7ec6\u601d\u8003\u8fd9\u6837\u505a\u662f\u5426\u6709\u95ee\u9898 \u6ce8\u91ca \u4ee3\u7801\u5fc5\u987b\u5199\u6ce8\u91ca\uff0c\u4e0d\u5199\u6ce8\u91ca\u7684\u90fd\u662f \u3002** \u6ce8\u91ca\u4f7f\u7528 doxygen \u6807\u51c6\u3002\u884c\u6ce8\u91ca // \u7528\u5728\u6ce8\u91ca\u4ee3\u7801\u4e0a\u3002doxygen\u652f\u6301 Markdown \u8bed\u6cd5 doxygen\u7684\u6807\u7b7e\u53ef\u4ee5\u4ee5 @ \u6216\u8005 \\ \u5f00\u5934\uff0c \u8fd9\u91cc\u7edf\u4e00\u89c4\u5b9a\u4f7f\u7528 @ \u4f5c\u4e3a\u6807\u7b7e\u5f00\u5934 \u3002 doxygen\u89c4\u5b9a\u7684\u6807\u7b7e\u53ef\u70b9\u51fb \u6b64\u5904 \u67e5\u9605\uff0c\u5982\u679c\u6807\u7b7e\u662fdoxygen\u89c4\u5b9a\u7684\uff0cvscode\u4f1a\u81ea\u52a8\u8bc6\u522b\u6807\u7b7e\u5e76\u663e\u793a\u76f8\u5e94\u7684\u989c\u8272\u3002\u4e0b\u9762\u5217\u4e3e\u51e0\u4e2a\u5e38\u7528\u7684\uff0c\u7528\u6cd5\u53c2\u7167\u5b98\u65b9\u6587\u6863\uff0c\u6216\u8005\u4e0b\u9762\u7684\u5185\u5bb9 /** * @arg @attention @author @brief @bug * @copyright @date @def @defgroup @details * @note @param @private @public @ref * @return @retval @see @todo @version * @warning */ \u5728VSCode\u4e2d\u5207\u6362\u884c\u6ce8\u91ca\u7684\u5feb\u6377\u952e\u662f Ctrl + / \uff0c\u6309\u4e0b\u540e\u5c31\u4f1a\u81ea\u52a8\u6dfb\u52a0\u7a7a\u683c\u3002\u5207\u6362\u5757\u6ce8\u91ca\u7684\u5feb\u6377\u952e\u662f Alt + Shift + A \uff0c\u6309\u4e0b\u540e\u524d\u540e\u4e5f\u4f1a\u81ea\u52a8\u52a0\u7a7a\u683c\u3002\u6211\u4e00\u822c\u628a\u8fd9\u4e2a\u5feb\u6377\u952e\u6539\u6210 Alt + / \uff0c\u5728\u5de6\u4e0b\u89d2\u9f7f\u8f6e\uff0cKeyBoard Shortcuts(\u952e\u76d8\u5feb\u6377\u952e)\uff0c\u7136\u540e\u641c\u7d22 blockComment \uff0c\u627e\u5230Toogle Block Comment(\u5207\u6362\u5757\u6ce8\u91ca)\uff0c\u70b9\u7b2c\u4e8c\u5217\u7684\u5feb\u6377\u952e\uff0c\u6309\u4e0b\u4f60\u60f3\u8981\u7684\u5feb\u6377\u952e\uff0c\u4fdd\u5b58\u5373\u53ef\u3002\u5982\u679c\u5feb\u6377\u952e\u51b2\u7a81\uff0c\u53ef\u4ee5\u5148\u67e5\u627e\u8fd9\u4e2a\u5feb\u6377\u952e\uff0c\u89e3\u9664\u540e\u518d\u5f55\u5165\u65b0\u7684\u5feb\u6377\u952e\u3002 \u6587\u4ef6\u5934 \u6587\u4ef6\u6ce8\u91ca\u6807\u51c6, \u5199\u660e\u6587\u4ef6\u540d @file , \u4f5c\u8005 @author , \u7b80\u4ecb @brief , \u7248\u672c @version , \u65e5\u671f @date , \u7248\u6743\u4fe1\u606f\u7b49\u3002\u5efa\u8bae\u4f7f\u7528\u7a7a\u683c\u5bf9\u9f50\uff08\u6309\u4e00\u4e2aTab\u4e3a4\u7a7a\u683c\uff09\uff0c\u770b\u8d77\u6765\u8f83\u4e3a\u6574\u9f50\u3002 \u6ce8\u610f\u7248\u672c\u53f7\u7684\u66f4\u65b0\uff0c\u5bf9\u4e8e\u5f00\u53d1\u521d\u671f\u7684\u7248\u672c\uff0c\u4e3b\u7248\u672c\u53f7\u4f7f\u75280\uff0c\u66f4\u65b0\u526f\u7248\u672c\u53f7\uff1b\u5982\u679c\u662f\u8f83\u4e3a\u7a33\u5b9a\u7684\u53d1\u5e03\u7248\u672c\uff0c\u66f4\u65b0\u4e3b\u7248\u672c\u53f7 /** * @file commune.c * @author Deadline039 * @brief \u901a\u4fe1\u4ee3\u7801 * @version 0.1 * @date 2023-11-05 * @note \u9065\u63a7\u5668\u53d1\u9001\u7684\u6570\u636e\u5e27\u90fd\u4e3a8\u4e2a\u5b57\u8282, \u5f00\u5934\u7edf\u4e00\u4e3a0xFF, \u7ed3\u5c3e\u7edf\u4e00\u4e3a0xCC * -------------------------------------------------------------------- * \u9065\u63a7\u5668\u6570\u636e\u5e27\u683c\u5f0f: * 0xFF, 0xAA(\u6807\u8bc6\u9065\u63a7\u5668), x1, y1, x2, y2, keys, 0xCC * -------------------------------------------------------------------- * \u63e1\u624b\u6570\u636e\u5e27\u683c\u5f0f: * 0xFF, 'h'(\u6807\u8bc6\u63e1\u624b), 'e', 'l', 'l', 'o', 0x00, 0xCC * \u4e3b\u677f\u56de\u590d\u683c\u5f0f * 'O', 'K', 0x00, 0xCC * -------------------------------------------------------------------- * \u53d1\u9001key\u6570\u636e\u5e27\u683c\u5f0f * 0xFF, 0xFE(\u6807\u8bc6key), key, key, key, key, 0x00, 0xCC * -------------------------------------------------------------------- * \u68c0\u67e5\u8fde\u63a5\u6570\u636e\u5e27\u683c\u5f0f * 0xFF, 0xFF(\u6807\u8bc6\u68c0\u9a8c), 0x00, 0x00, 0x00, 0x00, 0x00, 0xCC * \u4e3b\u677f\u56de\u590d\u683c\u5f0f * key, key, key, key, 0x00, 0xCC ******************************************************************************* * CHECK_CONNECT\u5b8f\u7528\u6765\u5b9a\u4e49\u662f\u5426\u8fdb\u884c\u8fde\u63a5\u68c0\u67e5, 0\u4e3a\u4e0d\u4f7f\u7528; 1\u4e3a\u4f7f\u7528 * \u5982\u679c\u4e0d\u4f7f\u7528\u8fde\u63a5\u68c0\u67e5, \u5f00\u673a\u76f4\u63a5\u5411\u4e3b\u677f\u53d1\u9001\u9065\u63a7\u5668\u6570\u636e * * \u5982\u679c\u4f7f\u7528\u8fde\u63a5\u68c0\u67e5, \u4e0a\u7535\u4f1a\u6301\u7eed\u53d1\u9001\u63e1\u624b\u6570\u636e\u5e27, \u7b49\u5f85\u4e3b\u677f\u56de\u590dOK * \u4e3b\u677f\u56de\u590d\u540e, \u5411\u4e3b\u677f\u53d1\u9001\u4e00\u4e2a32\u4f4d\u7684key, \u8fd9\u4e2akey\u662f\u968f\u673a\u751f\u6210\u7684 * \u53d1\u9001\u683c\u5f0f\u5c31\u662fkey\u6570\u636e\u5e27\u683c\u5f0f * * \u9065\u63a7\u5668\u6bcf\u53d1\u900120\u5e27\u9065\u63a7\u5668\u6570\u636e, \u4f1a\u53d1\u9001\u4e00\u4e2a\u68c0\u67e5\u8fde\u63a5\u6570\u636e\u5e27, * \u4e3b\u677f\u5c06key\u53d1\u9001\u7ed9\u9065\u63a7\u5668, \u9065\u63a7\u5668\u8fdb\u884c\u6821\u9a8c. \u5982\u679c\u9519\u8bef, \u63d0\u793a\u8fde\u63a5\u51fa\u9519 */ \u51fd\u6570 \u6ce8\u660e\u7b80\u4ecb @brief , \u53c2\u6570 @param , \u6709\u65f6\u8fd8\u4f7f\u7528 @arg \u6765\u6307\u5b9a\u4f20\u5165\u7684\u53c2\u6570\u503c, \u8fd4\u56de\u503c @retval, @return \u7b49\u3002\u53c2\u6570\u4f5c\u4e3a\u8f93\u5165 [in] \u53ef\u4ee5\u7701\u7565\uff0c\u4f5c\u4e3a\u8f93\u51fa\u9700\u52a0 [out] \uff0cC\u4e0d\u652f\u6301\u5f15\u7528\u53c2\u6570\uff0c\u4e00\u822c\u4e3a\u6307\u9488 \u6bcf\u6761\u5217\u8868\u9879\u76ee\u53ef\u4ee5\u4e0d\u7528\u7a7a\u683c\u5bf9\u9f50\uff0c arg \u4e0e param \u524d\u9519\u5f00\u4e00\u4e2a\u7a7a\u683c\uff0c\u4f46\u662f\u5982\u679c\u4e00\u4e2a\u5217\u8868\u5185\u7684\u5185\u5bb9\u8981\u6362\u884c\uff0c\u5bf9\u9f50\u4e0a\u4e00\u884c\u7684\u5f00\u5934 /** * @brief Starts the TIM Input Capture measurement. \u8fd9\u91cc\u53ef\u4ee5\u4e0d\u4e0e\u4e0b\u9762\u7684retval\u5bf9\u9f50 * @param htim TIM Input Capture handle * @param Channel TIM Channels to be enabled. This parameter can be one of the * following values: (\u8fd9\u91cc\u6362\u884c\u4e86, \u4e0e\u4e0a\u4e00\u884c\u5f00\u5934\u5bf9\u9f50) * @arg TIM_CHANNEL_1: TIM Channel 1 selected \u5f00\u5934\u4e0e@param\u9519\u5f00\u4e00\u4e2a\u7a7a\u683c * @arg TIM_CHANNEL_2: TIM Channel 2 selected * @arg TIM_CHANNEL_3: TIM Channel 3 selected * @arg TIM_CHANNEL_4: TIM Channel 4 selected * @retval HAL status * @note \u6ce8\u610f12\u884c\u548c13\u884c\u4e4b\u95f4\u4e0d\u5e94\u8be5\u6709\u7a7a\u683c */ HAL_StatusTypeDef HAL_TIM_IC_Start(TIM_HandleTypeDef *htim, uint32_t Channel) { uint32_t tmpsmcr; /* \u53cc\u659c\u6760\u4ec5\u5728\u6ce8\u91ca\u4ee3\u7801\u65f6\u4f7f\u7528 */ // HAL_TIM_ChannelStateTypeDef channel_state = TIM_CHANNEL_STATE_GET(htim, Channel); // HAL_TIM_ChannelStateTypeDef complementary_channel_state = TIM_CHANNEL_N_STATE_GET(htim, Channel); /* Check the parameters */ assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel)); ... /* Return function status */ return HAL_OK; } /** * @brief \u6839\u636e\u4f20\u611f\u5668\u6570\u636e\u83b7\u53d6\u5b9e\u9645\u4f4d\u7f6e * * @param[out] real_x x\u4f4d\u7f6e\u6307\u9488 * @param[out] real_y y\u4f4d\u7f6e\u6307\u9488 */ void GetPosition(double* real_x, double* real_y) { *real_x = ...; *real_y = ...; } \u5982\u679c\u51fd\u6570\u4f7f\u7528\u7684\u662f\u6807\u51c6\u7684doxygen\u6ce8\u91ca\u7684\uff0c\u5728vscode\u91cc\u9f20\u6807\u653e\u5230\u4e00\u4e2a\u51fd\u6570\u4e0a\u60ac\u505c\u4f1a\u663e\u793a\u76f8\u5173\u4fe1\u606f\uff0c\u8f93\u5165\u53c2\u6570\u65f6\u4e5f\u4f1a\u63d0\u793a\u73b0\u5728\u8f93\u5165\u7684\u662f\u4ec0\u4e48\u53c2\u6570\u3002\u7a7a\u683c\u4e0d\u5f71\u54cd\u8fd9\u91cc\u5c55\u793a\u7684\u5185\u5bb9\uff0cvscode\u4f1a\u81ea\u52a8\u5ffd\u7565\u7a7a\u683c\u3002\u6ce8\u610f\u6587\u4ef6\u7f16\u7801\u4e3aUTF-8\u3002 \u7ed3\u6784\u4f53 \u7ed3\u6784\u4f53\u524d\u6ce8\u660e\u7b80\u4ecb\uff0c\u6bcf\u4e2a\u6210\u5458\u90fd\u8bf4\u660e\u4f5c\u7528\uff0c\u8bf4\u660e\u6210\u5458\u4f5c\u7528\u65f6\u4f7f\u7528 /*!< xx */ /** * @brief TIM Clear Input Configuration Handle Structure definition */ typedef struct { uint32_t ClearInputState; /*!< TIM clear Input state This parameter can be ENABLE or DISABLE */ uint32_t ClearInputSource; /*!< TIM clear Input sources This parameter can be a value of @ref TIM_ClearInput_Source */ uint32_t ClearInputPolarity; /*!< TIM Clear Input polarity This parameter can be a value of @ref TIM_ClearInput_Polarity */ uint32_t ClearInputPrescaler; /*!< TIM Clear Input prescaler This parameter must be 0: When OCRef clear feature is used with ETR source, ETR prescaler must be off */ uint32_t ClearInputFilter; /*!< TIM Clear Input filter This parameter can be a number between Min_Data = 0x0 and Max_Data = 0xF */ } TIM_ClearInputConfigTypeDef; \u6a21\u5757 \u5f53\u4e00\u6bb5\u4ee3\u7801\u662f\u4e00\u4e2a\u6a21\u5757\u65f6\u53ef\u4ee5\u7528 defgroup \uff1a /** * @defgroup Moudle 1 * @{ */ ... /** * @} */ /* \u4e5f\u53ef\u4ee5\u52a0\u4e00\u5806*\u6765\u533a\u5206, \u4e00\u884c80\u4e2a\u5b57\u7b26 */ /******************************************************************************* * @defgroup Moudle 2 * @{ */ ... /** * @} ******************************************************************************/ \u9884\u7f16\u8bd1\u547d\u4ee4 \u9884\u7f16\u8bd1\u547d\u4ee4\u7684 #else, #endif \u5fc5\u987b\u5728\u884c\u672b\u6ce8\u91ca #if \u7684\u6761\u4ef6\uff0c\u8981\u4e0d\u7136\u4e00\u5806 #endif \u66f4\u6839\u672c\u4e0d\u77e5\u9053\u662f\u54ea\u91cc\u7684 \u6839\u636e\u5b9e\u9645\u60c5\u51b5\u9002\u5f53\u88c1\u526a\uff0c\u53ca\u65f6\u6e05\u7406\u672a\u4f7f\u7528\u7684\u51fd\u6570\u548c\u53d8\u91cf \u5b8f\u5b9a\u4e49\u5982\u679c\u6709 #if \u5d4c\u5957\uff0c\u4e0d\u7f29\u8fdb \u6742\u9879 \u4e0d\u8981\u8fc7\u5ea6\u6ce8\u91ca\uff0c\u6bd4\u5982 key = key_scan(0); /* \u626b\u63cf\u6309\u952e */ \uff0c\u8fd9\u4e2a\u51fd\u6570\u4e00\u773c\u5c31\u77e5\u9053\u662f\u626b\u63cf\u6309\u952e\u7684\uff0c\u6ca1\u5fc5\u8981\u6ce8\u91ca\u3002\u6b63\u70b9\u539f\u5b50\u7684\u6ce8\u91ca\u662f\u4e3a\u521d\u5b66\u8005\u8003\u8651\u7684\uff0c\u6240\u4ee5\u6bcf\u884c\u4ee3\u7801\u57fa\u672c\u90fd\u4f1a\u6ce8\u91ca\u4e00\u4e0b\u3002 \u4ee3\u7801\u91cc\u4e0d\u8981\u5199\u65e0\u610f\u4e49\u7684\u6ce8\u91ca\u3002\u4e0d\u8981\u628a\u6ce8\u91ca\u5199\u6210\u82f1\u8bed\u53e5\u5b50\u7684\u7ffb\u8bd1\uff0c\u6211\u4eec\u5e94\u8be5\u7ffb\u8bd1\u7684\u662f\u4ee3\u7801\u4e2d\u7684\u903b\u8f91\uff0c\u800c\u4e0d\u662f\u7ffb\u8bd1\u5355\u8bcd\uff0c\u8fd9\u79cd\u6ce8\u91ca\u6ca1\u6709\u610f\u4e49 \u5bf9\u4e8e\u51fd\u6570\u6216\u8005\u6587\u4ef6\u6765\u8bf4\uff0c\u6ce8\u91ca\u7684\u4e3b\u8981\u76ee\u6807\u662f\u8bb2\u6e05\u695a\u8fd9\u90e8\u5206\u4ee3\u7801\u6709\u4ec0\u4e48\u529f\u80fd\uff0c\u5982\u4f55\u4f7f\u7528\uff0c\u6700\u597d\u5c06\u4ee3\u7801\u903b\u8f91\u7684\u89e3\u91ca\u653e\u5230\u5177\u4f53\u7684\u4ee3\u7801\u4e2d\uff0c\u53ef\u4ee5\u7b80\u5355\u8bf4\u4e00\u4e0b\u8fd0\u884c\u6d41\u7a0b\u3002\u51fd\u6570\u3001\u6587\u4ef6\u7684\u529f\u80fd\u6ce8\u91ca\u53eb brief \uff0c\u800c\u4e0d\u662f details \u6ce8\u91ca\u5173\u952e\u90e8\u5206\u548c\u96be\u4ee5\u7406\u89e3\u7684\u70b9\u5fc5\u987b\u6ce8\u91ca\uff0c\u6bd4\u5982\u64cd\u4f5c\u5bc4\u5b58\u5668\u7684\u4ee3\u7801\uff0c\u5982\u679c\u4e0d\u67e5\u9605\u624b\u518c\u57fa\u672c\u770b\u4e0d\u61c2 \u6ce8\u610f\u6ce8\u91ca\u8981\u548c\u4ee3\u7801\u76f8\u7b26\uff0c\u4e0d\u8981\u590d\u5236\u7c98\u8d34\u7684\u65f6\u5019\u4e0d\u6539\u6ce8\u91ca \u6ce8\u91ca\u5e94\u8be5\u5728\u4ee3\u7801\u7684\u4e0a\u4e00\u884c\u6216\u8005\u884c\u672b\uff0c\u4e0d\u5e94\u8be5\u5728\u4e0b\u4e00\u884c\uff0c\u4e5f\u4e0d\u8981\u6709\u7a7a\u884c \u5c1a\u672a\u5b9e\u73b0\u5b8c\u6574\u529f\u80fd\uff0c\u6216\u8005\u9700\u8981\u66f4\u8fdb\u4e00\u6b65\u4f18\u5316\u7684\u4ee3\u7801\uff0c\u5e94\u4f7f\u7528 todo \uff1b\u5982\u679c\u4ee3\u7801\u6709bug\uff0c\u4f7f\u7528 bug \uff0c\u5176\u4ed6tag\u7528\u6cd5\u53c2\u7167doxygen\u5b98\u65b9\u6587\u6863 /* \u6ce8\u91ca\u5e94\u8be5\u5728\u8fd9\u91cc */ event_val |= event_bit; /* \u6216\u8005\u6ce8\u91ca\u5728\u8fd9\u91cc */ /* \u4e0d\u5e94\u8be5\u5728\u8fd9\u91cc\u6ce8\u91ca */ /* \u8fd9\u662f\u8bf4\u660e\u7b2c7\u884c\u4ee3\u7801\u7684\u6ce8\u91ca, \u7b2c6\u884c\u4e0d\u5e94\u8be5\u7a7a */ event_val <<= 1; /** * @todo \u6b64\u5904\u5224\u65ad\u903b\u8f91\u5e94\u8be5\u4f18\u5316 */ if ((event_val & 0x01) && !(event_val & 0x02) || !(event_val & 0x04) && (event_val & 0x08)) { ... } /** * @bug \u8fd9\u91cc\u7684\u65ad\u8a00\u6709\u65f6\u5019\u4f1a\u5931\u6548 */ if (!event_val_assert(event_val)) { ... } \u81ea\u52a8\u751f\u6210\u6ce8\u91ca \u5982\u679c\u6b63\u786e\u5b89\u88c5\u4e86EIDE\u4e14\u6ca1\u6709\u51fa\u9519\uff0c\u90a3\u4e48\u6269\u5c55\u4f1a\u81ea\u52a8\u5b89\u88c5Doxygen Documentation Generator\u6269\u5c55\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u641c\u7d22\u6269\u5c55\u540d\u79f0\u5230\u5546\u5e97\u81ea\u884c\u5b89\u88c5\u3002 \u6211\u4eec\u4e0d\u9700\u8981\u624b\u52a8\u8f93\u5165\u4e0a\u9762\u7684\u4e00\u5806\u4e1c\u897f\uff0c\u6269\u5c55\u4f1a\u81ea\u52a8\u5e2e\u6211\u4eec\u751f\u6210\uff0c\u4e0b\u9762\u5c31\u6765\u6f14\u793a\u4e00\u4e0b\uff1a \u6587\u4ef6\u5934\u6ce8\u91ca\uff1a\u5f53\u6211\u4eec\u5728\u4e00\u4e2a \u65b0\u6587\u4ef6\u7684\u7b2c\u4e00\u884c \u8f93\u5165 /** \u56de\u8f66\uff0c\u5c31\u4f1a\u81ea\u52a8\u5e2e\u6211\u4eec\u751f\u6210\u6587\u4ef6\u5934\u6a21\u677f\uff1a \u51fd\u6570\u6ce8\u91ca\uff1a\u8f93\u5165 /** \u56de\u8f66\uff0c\u6269\u5c55\u4f1a\u81ea\u52a8\u8bc6\u522b\u53c2\u6570\u548c\u8fd4\u56de\u503c\uff0c\u6211\u4eec\u53ea\u7528\u8f93\u5165\u5185\u5bb9\u5c31\u53ef\u4ee5\uff1a \u5f53\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u4e0a\u9762 file, author \u7684\u5185\u5bb9\uff0c\u5177\u4f53\u4f4d\u7f6e\u5982\u4e0b\uff1a \u6587\u4ef6\u7f16\u7801 \u4e3a\u907f\u514d\u540c\u6b65\u4ed3\u5e93\u4ee3\u7801\u65f6\u4ea7\u751f\u4e71\u7801\uff0c\u5bfc\u81f4\u4e00\u4e9b\u4e0d\u5fc5\u8981\u7684\u95ee\u9898\uff0c \u6587\u4ef6\u7f16\u7801\u7edf\u4e00\u4f7f\u7528UTF-8 \u3002\u6b63\u70b9\u539f\u5b50\u7684\u4ee3\u7801\u5168\u90e8\u7528\u7684\u662fGB2312\u3002 \u5982\u679c\u4f7f\u7528GB2312\u7f16\u7801\uff0cvscode\u60ac\u6d6e\u7684\u63d0\u793a\u4f1a\u4e2d\u6587\u4e71\u7801\u3002\u5c31\u6bd4\u5982\u521a\u624d\u7684\u51fd\u6570\u63d0\u793a \u3002 \u4e0b\u9762\u7684Gif\u6f14\u793a\u4e86\u5982\u4f55\u4fee\u6539\u7f16\u7801\u3002 \u5982\u679c\u6253\u5f00\u6587\u4ef6\u4e2d\u6587\u4e71\u7801\uff0c\u70b9ReOpen With Encoding\u5c1d\u8bd5\u7f16\u7801\u5373\u53ef\uff0c \u5343\u4e07\u4e0d\u8981\u70b9\u6210Save with Encoding\uff0c\u5426\u5219\u53ef\u80fd\u65e0\u6cd5\u590d\u539f\u539f\u672c\u7684\u5185\u5bb9 \u3002 \u63a8\u8350\u5927\u5bb6\u5b89\u88c5GBK to UTF8 for vscode\u6269\u5c55\uff0c\u53ef\u4ee5\u8bc6\u522b\u5230\u5927\u90e8\u5206GBK\u7f16\u7801\u7684\u6587\u4ef6\uff0c\u800c\u4e14\u53ef\u4ee5\u6279\u91cf\u8f6c\u6362\u7f16\u7801\u3002 XCOM\u4e0d\u652f\u6301UTF-8\u7f16\u7801\uff0c\u4e32\u53e3\u8f93\u51fa\u4e2d\u6587\u4f1a\u4e71\u7801\uff0c\u56e0\u6b64\u8fd9\u91cc\u63a8\u8350\u4f7f\u7528\u652f\u6301\u7f16\u7801\u66f4\u591a\uff0c\u529f\u80fd\u66f4\u5f3a\u5927\u7684 COMTool \u3002\u4f7f\u7528\u6559\u7a0b\u89c1 \u6b64\u5904 \u3002 \u6bb5\u672b\u6362\u884c\u7b26 \u6362\u884c\u7b26\u6709\u4e24\u4e2a\uff0c CR(\\r), LF(\\n) \uff0c \u5177\u4f53\u53c2\u89c1\u6b64\u6587\u7ae0 \u3002\u7b80\u5355\u6765\u8bf4\uff0c\u5728\u6253\u5b57\u673a\u65f6\u4ee3\uff0c\u8ba1\u7b97\u673a\u8fd8\u4e0d\u80fd\u505a\u6587\u6863\u5904\u7406\u7684\u65f6\u5019\uff0c\u60f3\u8981\u6362\u884c\u8fdb\u5165\u4e0b\u4e00\u4e2a\u6bb5\u843d\u5fc5\u987b\u5148\u6309\u4e00\u4e0b\u56de\u8f66\uff08Carriage Return, CR\uff09\u8ba9\u6253\u5b57\u673a\u7684\u6253\u5370\u5934\u56de\u5230\u6700\u5de6\u8fb9\uff08\u5199\u5b57\u90fd\u662f\u4ece\u5de6\u5f80\u53f3\u5199\uff0c\u6bb5\u672b\u5c31\u662f\u6700\u53f3\u8fb9\uff09\uff0c\u7136\u540e\u518d\u6362\u884c\uff08Line Feed, LF\uff09\u3002\u4f46\u662f\u5230\u4e86\u8ba1\u7b97\u673a\u65f6\u4ee3\u4e0d\u9700\u8981\u56de\u8f66\u6362\u884c\u4e86\uff0c\u53ea\u9700\u8981\u6362\u884c\u7b26\u5c31\u591f\u4e86\u3002\u4f46\u5fae\u8f6f\u4e3a\u4e86\u4fdd\u7559\u5386\u53f2\u4e60\u60ef\uff0cMS-DOS\u548cWindows\u7684\u9ed8\u8ba4\u6362\u884c\u7b26\u90fd\u662f CRLF \uff1bLinux\u548cUnix\u4e3a\u4e86\u65b9\u4fbf\u4f7f\u7528\u7684\u662f LF \uff0cmacOS\u4e0a\u4e5f\u7528\u7684\u662f LF \u3002 \u7531\u4e8e\u6211\u4eec\u4e3b\u8981\u5728Windows\u4e0b\u505a\u5f00\u53d1\uff0c\u56e0\u6b64 \u6362\u884c\u7b26\u7edf\u4e00\u7528 CRLF \u3002 \u70b9\u53f3\u4e0b\u89d2\u7684CRLF\u5c31\u53ef\u4ee5\u66f4\u6539\u6bb5\u672b\u6362\u884c\u7b26\u3002","title":"C standard"},{"location":"STM32/C_standard/#_1","text":"\u4ee3\u7801\u89c4\u8303\u5bf9\u4e8e\u63d0\u9ad8\u4ee3\u7801\u8d28\u91cf\u975e\u5e38\u91cd\u8981 \u547d\u540d\u7528\u4e0b\u5212\u7ebf\u547d\u540d\u6cd5\uff0c\u5b8f\u5b9a\u4e49\u5b57\u6bcd\u5168\u5927\u5199\uff0c\u9884\u7f16\u8bd1\u547d\u4ee4\u7684 #else, #endif \u884c\u672b\u52a0\u6ce8\u91ca\u8bf4\u660e\u6761\u4ef6 \u5168\u5c40\u53d8\u91cf\u52a0 g_ \u524d\u7f00\uff0c\u5168\u5c40\u6307\u9488\u52a0 p_ \u524d\u7f00\uff0c\u5982\u679c\u4e0d\u516c\u5f00\u4f7f\u7528\u52a0 static \u4fee\u9970\u7b26 \u547d\u540d\u52a1\u5fc5\u7b80\u660e\u627c\u8981\uff0c\u4e0d\u8981\u610f\u4e49\u4e0d\u660e \u7ed3\u6784\u4f53/\u8054\u5408\u4f53/\u679a\u4e3e\u7b49\u590d\u6742\u6570\u636e\u7c7b\u578b\uff0c\u9664\u975e\u4e0d\u516c\u5f00\uff0c\u7edf\u4e00\u7528 typedef \u5b9a\u4e49\u540d\u79f0\uff0c\u5e76\u52a0\u4e0a _t \u540e\u7f00 \u7f29\u8fdb\u6700\u591a\u63a5\u53d76\u5c42\uff0c\u8d85\u8fc76\u5c42\u5fc5\u987b\u91cd\u5199\uff1b\u9884\u7f16\u8bd1\u5982\u679c\u5d4c\u5957\u547d\u4ee4\u4e0d\u7f29\u8fdb \u4e0d\u51c6\u4f7f\u7528\u9012\u5f52 \u5bf9\u4e8e\u6709\u8fd4\u56de\u503c\u7684\u51fd\u6570\uff0c\u5fc5\u987b\u8fd4\u56de\u4e00\u4e2a\u9ed8\u8ba4\u503c\uff0c\u4e0d\u80fd\u6709\u4ec0\u4e48\u90fd\u4e0d\u8fd4\u56de\u7684\u60c5\u51b5 \u4e0d\u51c6\u4f7f\u7528\u672a\u5b9a\u4e49\u7684\u53d8\u91cf\uff0c\u4f7f\u7528\u53d8\u91cf\u524d\u5fc5\u987b\u5b9a\u4e49\u521d\u503c \u4ee3\u7801\u6392\u7248\u6309\u7167\u6211\u5199\u7684 .clang-format \u683c\u5f0f\u5316 \u6ce8\u91ca\u7528 doxygen","title":"\u7701\u6d41"},{"location":"STM32/C_standard/#_2","text":"\u5bf9\u4e8e\u4e00\u4e2a\u9ad8\u8d28\u91cf\u7684\u5de5\u7a0b\uff0c\u4e00\u822c\u4f1a\u505a\u5230\uff1a \u4ee3\u7801\u7b80\u6d01\u7cbe\u70bc\uff0c\u7f8e\u89c2\uff0c\u53ef\u8bfb\u6027\u597d\uff0c\u9ad8\u6548\u7387\uff0c\u9ad8\u590d\u7528\uff0c\u53ef\u79fb\u690d\u6027\u597d\uff0c\u9ad8\u5185\u805a\uff0c\u4f4e\u8026\u5408\uff0c\u6ca1\u6709\u5197\u4f59\uff0c\u4e0d\u7b26\u5408\u8fd9\u4e9b\u539f\u5219\uff0c\u5fc5\u987b\u7279\u522b\u8bf4\u660e\u3002 \u89c4\u8303\u6027\uff0c\u4ee3\u7801\u6709\u89c4\u53ef\u5faa\u3002\u7279\u6b8a\u6392\u7248\u3001\u7279\u6b8a\u8bed\u6cd5\u3001\u7279\u6b8a\u6307\u4ee4\uff0c\u5fc5\u987b\u7279\u522b\u8bf4\u660e\u3002 \u6211\u4eec\u89c4\u8303\u4ee3\u7801\u98ce\u683c\u548c\u547d\u540d\u7684\u613f\u666f\u662f\u7801\u51fa\u9ad8\u6548\uff0c\u7801\u51fa\u8d28\u91cf\u3002\u73b0\u4ee3\u8f6f\u4ef6\u67b6\u6784\u7684\u590d\u6742\u6027\u9700\u8981\u534f\u540c\u5f00\u53d1\u5b8c\u6210\uff0c\u5982\u4f55\u9ad8\u6548\u5730\u534f\u540c\u5462\uff1f\u65e0\u89c4\u77e9\u4e0d\u6210\u65b9\u5706\uff0c\u65e0\u89c4\u8303\u96be\u4ee5\u534f\u540c\uff0c\u6bd4\u5982\uff0c\u5236\u5b9a\u4ea4\u901a\u6cd5\u89c4\u8868\u9762\u4e0a\u662f\u8981\u9650\u5236\u884c\u8f66\u6743\uff0c\u5b9e\u9645\u4e0a\u662f\u4fdd\u969c\u516c\u4f17\u7684\u4eba\u8eab\u5b89\u5168\uff0c\u8bd5\u60f3\u5982\u679c\u6ca1\u6709\u9650\u901f\uff0c\u6ca1\u6709\u7ea2\u7eff\u706f\uff0c\u8c01\u8fd8\u6562\u4e0a\u8def\u884c\u9a76\uff1f\u5bf9\u8f6f\u4ef6\u6765\u8bf4\uff0c\u9002\u5f53\u7684\u89c4\u8303\u548c\u6807\u51c6\u7edd\u4e0d\u662f\u6d88\u706d\u4ee3\u7801\u5185\u5bb9\u7684\u521b\u9020\u6027\u3001\u4f18\u96c5\u6027\uff0c\u800c\u662f\u9650\u5236\u8fc7\u5ea6\u4e2a\u6027\u5316\uff0c\u4ee5\u4e00\u79cd\u666e\u904d\u8ba4\u53ef\u7684\u7edf\u4e00\u65b9\u5f0f\u4e00\u8d77\u505a\u4e8b\uff0c\u63d0\u5347\u534f\u4f5c\u6548\u7387\uff0c\u964d\u4f4e\u6c9f\u901a\u6210\u672c\u3002\u4ee3\u7801\u7684\u5b57\u91cc\u884c\u95f4\u6d41\u6dcc\u7684\u662f\u8f6f\u4ef6\u7cfb\u7edf\u7684\u8840\u6db2\uff0c\u4ee3\u7801\u8d28\u91cf\u7684\u63d0\u5347\u662f\u5c3d\u53ef\u80fd\u5c11\u8e29\u5751\uff0c\u675c\u7edd\u8e29\u91cd\u590d\u7684\u5751\uff0c\u5207\u5b9e\u63d0\u5347\u7cfb\u7edf\u7a33\u5b9a\u6027\uff0c\u7801\u51fa\u8d28\u91cf\u3002 \u89c4\u8303\u4ee3\u7801\u98ce\u683c\u53ef\u4ee5\u65b9\u4fbf\u4ee3\u7801\u79fb\u690d\u548c\u590d\u7528\uff0c\u63d0\u9ad8\u4ee3\u7801\u53ef\u8bfb\u6027\uff0c\u800c\u597d\u7684\u547d\u540d\u662f\u5bf9\u7a0b\u5e8f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u547d\u540d\u662f\u7f16\u7a0b\u7684\u5fc3\u810f\uff0c\u5982\u679c\u8fde\u547d\u540d\u90fd\u505a\u4e0d\u597d\uff0c\u90a3\u4e48\u7a0b\u5e8f\u8fc7\u4e0d\u4e86\u591a\u4e45\u5c31\u4f1a\u53d8\u5f97\u96be\u4ee5\u7ef4\u62a4\u3002\u4f60\u7684\u4ee3\u7801\u662f\u5199\u7ed9\u522b\u4eba\u770b\u7684\uff0c\u5982\u679c\u4f60\u81ea\u5df1\u90fd\u770b\u4e0d\u61c2\u7684\u4ee3\u7801\u522b\u4eba\u66f4\u770b\u4e0d\u61c2\u3002\u6240\u4ee5\u4ee3\u7801\u548c\u547d\u540d\u89c4\u8303\uff0c\u975e\u5e38\u91cd\u8981\u3002 \u53c2\u7167\uff1a C Coding Standard (cmu.edu)","title":"\u4e3a\u4ec0\u4e48\u9700\u8981\u89c4\u8303\u4ee3\u7801\u98ce\u683c\u548c\u547d\u540d"},{"location":"STM32/C_standard/#_3","text":"\u4e0b\u9762\u7684\u547d\u540d\u7edd\u5bf9\u4e0d\u5141\u8bb8\u51fa\u73b0\uff0c\u5982\u679c\u5728\u4f01\u4e1a\u9879\u76ee\u4e2d\u6562\u8fd9\u6837\u547d\u540d\uff0c\u4f60\u7684\u4e0a\u53f8\u548c\u540c\u4e8b\u7edd\u5bf9\u4f1a\u62ff\u952e\u76d8\u6765\u7838\u4f60\u3002 \u53c2\u7167\u89c6\u9891\uff1a \u4ee3\u7801\u547d\u540d\u600e\u4e48\u53ef\u80fd\u8ba9\u522b\u4eba\u6ee1\u610f\uff1f\u81ea\u5df1\u6ee1\u610f\u5c31\u884c\u4e86 Naming Things in Code \u53d8\u91cf\u547d\u540d_\u54d4\u54e9\u54d4\u54e9 (\u309c-\u309c)\u3064\u30ed \u5e72\u676f~-bilibili \u5355\u5b57\u6bcd\uff1a int a, b, c; float x, y, z \uff0c\u5faa\u73af\u53d8\u91cf\u53ef\u4ee5\u4f7f\u7528 i,j,k \uff0c\u4f46 \u4e0d\u8981\u628a i,j,k \u5b9a\u4e49\u6210\u5168\u5c40\u53d8\u91cf \u91cd\u590d\u7684\u65e0\u610f\u4e49\u5b57\u6bcd\uff1a int aa, bb, cc, dd \u62fc\u97f3\u53ca\u62fc\u97f3\u9996\u5b57\u6bcd\u7f29\u5199\uff1a char[30] mingZi, sb, nb; char xingbie; int xh, nl \uff0c\u5bf9\u4e8e\u4e00\u4e9b\u516c\u8ba4\u7684\u62fc\u97f3\uff0c\u53ef\u4ee5\u4f7f\u7528\uff0c\u5982 Alibaba, Aliyun, Baidu, Bilibili, Sogou \u7b49\uff08\u8c8c\u4f3c\u90fd\u662f\u516c\u53f8\u540d\uff09 \u4e0d\u89c4\u8303\u7684\u7f29\u5199\uff1a int cont_freq \uff0c\u67e5\u8be2\u5e38\u89c1\u5355\u8bcd\u7684\u7f29\u5199\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u7f51\u7ad9\uff1a Abbreviations.com","title":"\u547d\u540d\u7981\u5fcc"},{"location":"STM32/C_standard/#_4","text":"\u547d\u540d\u7684\u603b\u539f\u5219\u662f\u7cbe\u51c6\u5730\u63cf\u8ff0\u529f\u80fd\u3002\u5982\u679c\u547d\u540d\u610f\u4e49\u4e0d\u660e\u786e\uff0c\u90a3\u4e48\u4ee3\u7801\u4e5f\u662f\u6ca1\u6709\u610f\u4e49\u7684\u3002\u547d\u540d\u8981\u505a\u5230\u89c1\u540d\u77e5\u610f\uff0c\u800c\u4e0d\u662f\u8ba9\u522b\u4eba\u53bb\u731c\u3002\u597d\u7684\u547d\u540d\u662f\u81ea\u89e3\u91ca\u7684\uff0c\u4e5f\u5c31\u662f\u4ece\u540d\u5b57\u5c31\u53ef\u4ee5\u770b\u51fa\u6765\u542b\u4e49\uff0c\u4e0d\u9700\u8981\u6ce8\u91ca\u53bb\u8bf4\u660e\u3002\u5728\u7a0b\u5e8f\u5f00\u53d1\u4e2d\uff0c \u5982\u679c\u4e00\u6bb5\u4ee3\u7801\u6216\u8005\u53d8\u91cf\u6ca1\u6709\u610f\u4e49\uff0c\u90a3\u4e48\u8fd9\u6bb5\u4ee3\u7801\u6216\u8005\u53d8\u91cf\u5c31\u4e0d\u5e94\u8be5\u5b58\u5728\u3002 \u7edf\u4e00\u4f7f\u7528\u4e0b\u5212\u7ebf\u547d\u540d\u6cd5\uff0c\u5373\u5355\u8bcd\u5168\u90e8\u4f7f\u7528\u5c0f\u5199\u5b57\u6bcd\uff0c\u5305\u62ec\u51fd\u6570\u3001\u53d8\u91cf\u3001\u7ed3\u6784\u4f53\u7b49\u3002\u5355\u8bcd\u4e4b\u95f4\u7528\u4e0b\u5212\u7ebf\u9694\u5f00\u3002\u5bf9\u4e8e\u7b2c\u4e09\u65b9\u4ee3\u7801\u4fdd\u7559\u5176\u547d\u540d\u98ce\u683c\uff0c\u4e0d\u8981\u4fee\u6539\u3002 \u7edf\u4e00\u6027\uff1a\u7f16\u5199\u4e00\u4e2a\u6a21\u5757\u7684\u4ee3\u7801\u65f6\uff0c\u6700\u597d\u4f7f\u7528\u4e00\u4e2a\u7edf\u4e00\u7684\u524d\u7f00\uff0c\u6bd4\u5982\u64cd\u4f5cNAND Flash\u7684\u4ee3\u7801\uff0c\u53ef\u4ee5\u52a0\u4e00\u4e2a nand_ \u524d\u7f00 \u4e0e\u4f5c\u7528\u57df\u5173\u8054\uff1a\u53d8\u91cf\u547d\u540d\u7684\u957f\u5ea6\u548c\u4ed6\u7684\u4f5c\u7528\u57df\u6709\u5173\uff0c\u4f5c\u7528\u57df\u8d8a\u5927\uff0c\u547d\u540d\u5c3d\u53ef\u80fd\u8d8a\u957f\u3002\u8fd9\u6837\u80fd\u6700\u5927\u7a0b\u5ea6\u907f\u514d\u547d\u540d\u51b2\u7a81 \u6700\u77ed\u957f\u5ea6\uff0c\u6700\u5927\u5316\u4fe1\u606f\uff1a\u5728\u4fdd\u6301\u4e00\u4e2a\u6807\u8bc6\u7b26\u610f\u601d\u660e\u786e\u7684\u540c\u65f6\uff0c\u5c3d\u91cf\u7f29\u77ed\u957f\u5ea6\u3002\u5c3d\u91cf\u4e0d\u8981\u8d85\u8fc76\u4e2a\u5355\u8bcd \u907f\u514d\u91cd\u540d\u6216\u76f8\u4f3c\uff1a\u907f\u514d\u5728\u4e0d\u540c\u7ea7\u522b\u4f5c\u7528\u57df\u4e2d\u91cd\u540d\uff0c\u867d\u7136\u5728C/C++\u4e2d\u5141\u8bb8\u5c40\u90e8\u53d8\u91cf\u548c\u5168\u5c40\u53d8\u91cf\u91cd\u540d\uff0c\u4f46\u8fd9\u6837\u5bb9\u6613\u5f15\u8d77\u8bef\u89e3 \u907f\u514d\u51fa\u73b0\u7f16\u53f7\uff1a\u5982 number1, number2 \uff0c\u53ef\u4ee5\u4f7f\u7528\u6570\u7ec4\u4ee3\u66ff\u3002\u9664\u975e\u5728\u903b\u8f91\u4e0a\u5fc5\u987b\u4f7f\u7528\u7f16\u53f7\uff0c\u65e0\u6cd5\u7528\u6570\u7ec4\u4ee3\u66ff\uff0c\u6bd4\u5982 USART1, USART2","title":"\u547d\u540d\u89c4\u5219"},{"location":"STM32/C_standard/#_5","text":"\u8fd9\u79cd\u547d\u540d\u9002\u5408\u7528\u5728\u53c2\u6570\u4e2d\uff0c\u6bd4\u5982\u8981\u4f20\u5165\u7b49\u5f85\u8d85\u65f6\u65f6\u95f4\uff0c\u5355\u4f4d\u662f\u6beb\u79d2\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5199 timeout_ms \uff1b\u8ba9\u7535\u673a\u8f6c\u5230\u4e00\u4e2a\u89d2\u5ea6\uff0c\u5355\u4f4d\u662f\u5ea6\uff0c\u53ef\u4ee5\u7528 target_angle_degree \u3002\u5f53\u7136\u5982\u679c\u592a\u957f\uff0c\u4e5f\u53ef\u4ee5\u5728\u6ce8\u91ca\u7684 @param \u6ce8\u660e\u3002","title":"\u5305\u542b\u5355\u4f4d"},{"location":"STM32/C_standard/#_6","text":"\u51fd\u6570\u547d\u540d\u8981\u548c\u529f\u80fd\u6216\u8005\u884c\u4e3a\u51c6\u786e\u5bf9\u5e94\u3002\u4e00\u822c\u662f\u52a8\u8bcd+\u540d\u8bcd\uff0c\u5982\u679c\u547d\u540d\u4e0d\u7b97\u957f\uff0c\u4ecb\u8bcd\u4e5f\u662f\u5fc5\u8981\u7684\uff0c\u6bd4\u5982 dump_data_to_file \uff0c\u8fd9\u6837\u9605\u8bfb\u8d77\u6765\u975e\u5e38\u81ea\u7136\uff0c\u4e5f\u597d\u5206\u8fa8\uff0c\u5f53\u7136\u4e00\u4e2a\u53d8\u91cf\u4e0d\u8981\u641e\u592a\u591a\u7684\u5355\u8bcd\uff0c\u5c3d\u91cf\u4e0d\u8d85\u8fc76\u4e2a\u3002 \u5982\u679c\u4e00\u4e2a\u51fd\u6570\u662f\u8fdb\u884c\u67d0\u4e2a\u52a8\u4f5c\uff0c\u5982 get, set \uff0c\u90a3\u4e48\u4e00\u822c\u628a\u52a8\u8bcd\u653e\u524d\u9762\u3002\u6bd4\u5982\u83b7\u53d6\u5f53\u524d\u961f\u5217\u7684\u6d88\u606f\uff0c\u6700\u597d\u7528 get_queue_msg \uff0c\u800c\u4e0d\u662f queue_msg_get \u3002\u5982\u679c\u67d0\u4e2a\u4e1c\u897f\u662f\u8fdb\u884c\u5224\u65ad\u7684\uff0c\u6700\u597d\u52a0 is \u524d\u7f00\uff0c\u6bd4\u5982\u5224\u65ad\u6d88\u606f\u961f\u5217\u662f\u5426\u5df2\u6ee1\u7684\u51fd\u6570\uff0c\u6700\u597d\u5199 is_msg_queue_full \uff0c\u800c\u4e0d\u662f msg_queue_full \u3002 \u6709\u65f6\u5019\u4f7f\u7528\u4e92\u65a5\u8bcd\u662f\u4e00\u4e2a\u8f83\u597d\u7684\u547d\u540d\u65b9\u5f0f\uff0c\u5e38\u89c1\u7684\u4e92\u65a5\u8bcd\u5982\u4e0b\uff1a add/remove begin/end create/destroy insert/delete first/last get/release increment/decrement put/get/add/delete lock/unlock open/close min/max old/new start/stop next/previous source/target show/hide send/receive source/destination copy/paste up/down","title":"\u51fd\u6570"},{"location":"STM32/C_standard/#_7","text":"\u53d8\u91cf\u547d\u540d\u5c3d\u91cf\u7528\u5f62\u5bb9\u8bcd+\u540d\u8bcd\uff0c\u53ef\u4ee5\u628a\u53d8\u91cf\u60f3\u8c61\u6210\u4e00\u4e2a\u5bb9\u5668\uff0c\u6bd4\u5982 red_envelop_money \u53ef\u4ee5\u52a0\u4fee\u9970\u8bcd\uff0c\u4e00\u822c\u628a\u4fee\u9970\u8bcd\u653e\u540e\u9762\uff0c\u8fd9\u4e9b\u4fee\u9970\u8bcd\u5305\u62ec max, min, count \u7b49\u3002\u6bd4\u5982\u6d88\u606f\u961f\u5217\u80fd\u5bb9\u7eb3\u7684\u6700\u5927\u503c\uff0c\u6700\u597d\u7528 msg_queue_max \uff0c\u800c\u4e0d\u662f max_msg_queue \u3002 \u5bf9\u4e8e\u5c40\u90e8\u53d8\u91cf\uff0c\u547d\u540d\u4e0d\u8981\u592a\u957f\uff0c1~3\u4e2a\u5355\u8bcd\u4e3a\u5b9c\u3002\u4e0d\u8981\u8fdd\u53cd\u4e0a\u9762\u6240\u8bf4\u7684\u7981\u5fcc\u3002 \u5168\u5c40\u53d8\u91cf\u7edf\u4e00\u52a0 g_ \u524d\u7f00\uff0c\u5168\u5c40\u6307\u9488\u52a0 p_ \u524d\u7f00\uff0c\u5168\u5c40\u53d8\u91cf\u9664\u524d\u7f00\u5916\u6700\u597d2~5\u4e2a\u5355\u8bcd\uff0c\u8fd9\u6837\u80fd\u6700\u5927\u7a0b\u5ea6\u907f\u514d\u91cd\u540d\u3002\u4e0d\u8981\u8fdd\u53cd\u4e0a\u9762\u6240\u8bf4\u7684\u7981\u5fcc\u3002 i,j,k \u53ef\u4ee5\u4f5c\u4e3a\u5faa\u73af\u53d8\u91cf\uff0c\u4f46\u53ea\u80fd\u5728\u5faa\u73af\u5185\u4f7f\u7528\uff0c\u4e0d\u80fd\u8ba9\u5faa\u73af\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u8d85\u51fa\u5faa\u73af\u4f53\uff1a /* \u4e0d\u5141\u8bb8, \u6b63\u70b9\u539f\u5b50\u91c7\u7528\u8fd9\u79cd\u65b9\u5f0f\u662f\u4e3a\u4e86\u517c\u5bb9C89 */ int i; for (i = 0; i < count; i++) { list[i] = ... } /* \u4f7f\u7528\u4e0b\u9762\u7684\u65b9\u5f0f\u8ba9\u5faa\u73af\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u53ea\u5728for\u5faa\u73af\u91cc */ /* PS: C\u6807\u51c6\u81f3\u5c11\u5728C99\u4ee5\u4e0a, C89\u8fd9\u6837\u5199\u4f1a\u62a5\u9519 */ for (int i = 0; i < count; i++) { list[i] = ... } \u5982\u679c\u8981\u5728\u5faa\u73af\u5916\u4f7f\u7528\u5faa\u73af\u53d8\u91cf\uff0c\u6bd4\u5982\u8981\u67e5\u627e\u4e00\u4e2a\u503c\u7684\u4f4d\u7f6e\uff0c \u90a3\u8bf4\u660e\u8fd9\u4e2a\u5faa\u73af\u53d8\u91cf\u662f\u6709\u610f\u4e49\u7684 \uff0c\u4e0d\u80fd\u7528 i,j,k \u8fd9\u79cd\u5355\u7eaf\u4e0b\u6807\u610f\u4e49\u7684\u53d8\u91cf\u6765\u547d\u540d\u3002","title":"\u53d8\u91cf"},{"location":"STM32/C_standard/#_8","text":"\u5b8f\u5b9a\u4e49\u5e38\u91cf\u65f6 \u5b57\u6bcd\u5168\u90e8\u7528\u5927\u5199 \uff0c\u540c\u65f6\u5b8f\u5b9a\u4e49\u5c3d\u91cf\u52a0\u524d\u7f00\u3002 \u5bf9\u4e8e\u5934\u6587\u4ef6\u4e2d\u907f\u514d\u91cd\u590d\u7f16\u8bd1\u7684\u5b8f #ifndef __XXX_H #define __XXX_H \uff0c\u6807\u8bc6\u7b26\u4f7f\u7528 __XXX_H \u7684\u5199\u6cd5\uff0c\u5373\u4e24\u4e2a\u4e0b\u5212\u7ebf\u5f00\u5934\uff0cXXX\u4e00\u822c\u662f\u6587\u4ef6\u540d\u7684\u5927\u5199\u5b57\u6bcd\uff0c\u968f\u540e\u8ddf\u4e0a\u4e00\u4e2a\u4e0b\u5212\u7ebf\u52a0\u4e00\u4e2aH\u3002","title":"\u5b8f\u5b9a\u4e49"},{"location":"STM32/C_standard/#_9","text":"\u53e5\u67c4\u52a0 _handle \u540e\u7f00\uff0c\u53e5\u67c4\u540d\u79f0\u4e0e\u7c7b\u578b\u548c\u529f\u80fd\u5339\u914d\u5c31\u53ef\u4ee5\u4e86","title":"\u53e5\u67c4"},{"location":"STM32/C_standard/#_10","text":"\u4fdd\u6301\u4ee3\u7801\u98ce\u683c\u7684\u7edf\u4e00\uff0c\u5bf9code reading, review, refactoring, porting\u7b49\u90fd\u6709\u597d\u5904\u3002\u8fd9\u4e9b\u4ee3\u7801\u89c4\u8303\u5927\u591a\u6570\u60c5\u51b5\u4e0bClang-format\u90fd\u4f1a\u5e2e\u6211\u4eec\u81ea\u52a8\u6392\u7248\uff0c\u65e0\u9700\u6211\u4eec\u624b\u52a8\u8c03\u6574\u3002 \u7edf\u4e00\u4f7f\u7528Github\u4e2d STM32_Template \u7684 .clang-format \u6587\u4ef6\u3002","title":"\u4ee3\u7801\u89c4\u8303"},{"location":"STM32/C_standard/#_11","text":"\u53ea\u5f15\u7528\u9700\u8981\u7684\u5934\u6587\u4ef6\uff0c\u4e0d\u8981\u5305\u542b\u4e00\u5806\u5934\u6587\u4ef6 #include \u4e2d\u7684\u6587\u4ef6\u540d\u5bf9\u5927\u5c0f\u5199\u654f\u611f \u5934\u6587\u4ef6\u653e\u5728 Inc \u76ee\u5f55\uff0c\u6e90\u6587\u4ef6\u653e\u5728 Src \u76ee\u5f55 \u5bf9\u4e8eC++\u4ee3\u7801\uff0c\u5934\u6587\u4ef6\u4f7f\u7528 .hpp \u540e\u7f00 \u5982\u679c\u4e00\u4e2a\u76ee\u5f55\u4e2d\u6709\u591a\u4e2a\u5b50\u76ee\u5f55\u4e2d\u7684\u5934\u6587\u4ef6\u9700\u8981\u5305\u542b\uff0c\u4f7f\u7528\u76f8\u5bf9\u8def\u5f84\uff0c\u4e0d\u8981\u5728 IncludePath \u4e2d\u6dfb\u52a0\uff0c\u4f8b\u5982\uff1a /* \u67d0\u4e2a\u6a21\u5757\u7684\u6587\u4ef6\u7ed3\u6784\uff1a model_root \u251c\u2500foldA \u2502 \u2514\u2500functionA.h \u251c\u2500foldB \u2502 \u2514\u2500functionB.h \u251c\u2500foldC \u2502 \u2514\u2500functionC.h \u251c\u2500foldnD \u2502 \u2514\u2500functionD.h \u251c\u2500foldE \u2502 \u2514\u2500functionE.h \u2514\u2500foldF \u2514\u2500functionF.h \u5047\u5982\u90fd\u9700\u8981\u8fd96\u4e2a\u6a21\u5757\u7684\u5934\u6587\u4ef6, IncludePath\u4e2d\u53ea\u6dfb\u52a0\u4e86model_root. */ /* \u4f60\u5f53\u7136\u53ef\u4ee5\u5927\u529b\u51fa\u5947\u8ff9, \u5c06\u8fd96\u4e2a\u6587\u4ef6\u5939\u5168\u90e8\u6dfb\u52a0\u5230IncludePath\u4e2d, \u7136\u540e */ #include \"functionA.h\" #include \"functionB.h\" ... #include \"functionF.h\" /* \u4f46\u6700\u597d\u7684\u505a\u6cd5\u662f, \u4e0d\u6dfb\u52a0IncludePath, \u4f7f\u7528\u76f8\u5bf9\u8def\u5f84\u5305\u542b, \u4fdd\u8bc1\u6839\u76ee\u5f55\u5728IncludePath\u5c31\u53ef\u4ee5 */ #include \"./flodA/functionA.h\" #include \"./foldB/functionB.h\" ... #include \"./foldF/functionf.h\"","title":"\u5934\u6587\u4ef6"},{"location":"STM32/C_standard/#_12","text":"\u5982\u679c\u6709\u516c\u5f00\u7684\u5185\u5bb9\uff0c\u5fc5\u987b\u8981\u6709\u4e00\u4e2a\u4e0e\u6e90\u6587\u4ef6\u540c\u540d\u7684\u5934\u6587\u4ef6\uff0c \u516c\u5f00\u5185\u5bb9\u5199\u5728\u5934\u6587\u4ef6\u4e2d \u4e0d\u8981\u4f7f\u7528\u65e0\u610f\u4e49\u7684\u540d\u79f0\uff0c\u5982\u679c\u662f\u67d0\u4e2a\u6a21\u5757\u7684\u4ee3\u7801\uff0c\u4fdd\u8bc1\u670d\u52a1\u5bf9\u8c61\u5355\u4e00\uff0c\u4e0d\u8981\u5305\u542b\u592a\u591a\u5176\u4ed6\u6a21\u5757\u7684\u4ee3\u7801\u3002 \u5bf9\u4e8eC++\u4ee3\u7801\uff0c\u4f7f\u7528 .cpp \u540e\u7f00 \u5934\u6587\u4ef6\u5f00\u5934\u548c\u672b\u5c3e\u5fc5\u987b\u52a0\u4e0a\u56fa\u5b9a\u683c\u5f0f\u7684\u5b8f\u5b9a\u4e49\uff0c\u5373 #ifndef ... #endif /** * @file xxx.h * @brief balabala * @auhor yourname * @date 2024-02-20 * @version 0.1 */ #ifndef __XXX_H #define __XXX_H ... #endif /* __XXX_H */","title":"\u6e90\u6587\u4ef6"},{"location":"STM32/C_standard/#_13","text":"\u7edf\u4e00\u4f7f\u75284\u4e2a\u7a7a\u683c\u7f29\u8fdb\uff0c\u4e0d\u4f7f\u7528Tab\u7f29\u8fdb\uff0c\u4e0d\u540c\u7f16\u8f91\u5668\u5b9a\u4e49\u7684\u5236\u8868\u7b26\u957f\u5ea6\u4e0d\u4e00\uff0c\u5bb9\u6613\u4ea7\u751f\u9519\u4f4d\uff0c\u6240\u4ee5\u4f7f\u7528 \u56db\u4e2a\u7a7a\u683c\u4ee3\u66ff\u5236\u8868\u7b26 \u5d4c\u5957\u7f29\u8fdb\u5c3d\u91cf\u63a7\u5236\u57284\u5c42\u4ee5\u5185\uff0c\u6700\u591a\u63a5\u53d76\u5c42\uff0c \u8d85\u8fc74\u5c42\u4f18\u5316\uff0c\u8d85\u8fc76\u5c42\u5fc5\u987b\u91cd\u5199 if () {}, switch () {}, case () {} \u8fd9\u7c7b\u5e26\u82b1\u62ec\u53f7\u7684\u5173\u952e\u5b57\u540e\u987b\u6709\u7a7a\u683c\uff1b\u4f46\u662f\u5bf9\u4e8e\u4e0d\u8ddf\u82b1\u62ec\u53f7\u7684\u5173\u952e\u5b57\uff0c\u5982 sizeof(), __arrtibute__() \uff0c\u4e0d\u5e26\u7a7a\u683c \u5706\u62ec\u53f7\u3001\u65b9\u62ec\u53f7\u5185\u7684\u4ee3\u7801\u4e0e\u62ec\u53f7\u4e4b\u95f4\u4e0d\u52a0\u7a7a\u683c\uff0c\u5916\u8fb9\u6839\u636e\u60c5\u51b5\u6dfb\u52a0\u7a7a\u683c\uff0c\u6bd4\u5982\u4e0b\u9762\u7b2c2\u884c\u7684\u4ee3\u7801\u4e0d\u5e94\u8be5\u5199\u6210\uff1a data [ 3 ] = ( uint8_t )( verify_key >> 8 ); \u4e8c\u5143\u3001\u4e09\u5143\u64cd\u4f5c\u7b26\u524d\u540e\u90fd\u8981\u52a0\u7a7a\u683c\uff0c\u5982\uff1a = + - < > * / % ^ <= >= == != ? : \u4e00\u5143\u64cd\u4f5c\u7b26\u540e\u4e0d\u8981\u52a0\u7a7a\u683c\uff0c\u5982\uff1a &(\u53d6\u5730\u5740) *(\u53d6\u6307\u9488\u7684\u5185\u5bb9) + - ~ ! \uff0c\u4f46\u662f\u5982\u679c\u58f0\u660e\u6307\u9488\u53d8\u91cf\uff0c * \u653e\u5728\u9760\u8fd1\u53d8\u91cf\u540d\u7684\u4e00\u4fa7\uff0c\u661f\u53f7\u5de6\u8fb9\u6709\u4e00\u4e2a\u7a7a\u683c \u81ea\u589e\u548c\u81ea\u51cf\u8fd0\u7b97\u7b26\u524d\u540e\u90fd\u4e0d\u52a0\u7a7a\u683c\uff0c\u5982\uff1a num++, --num \u8bbf\u95ee\u7ed3\u6784\u4f53\u6210\u5458\u7684\u64cd\u4f5c\u7b26\u524d\u540e\u4e0d\u52a0\u7a7a\u683c\uff0c\u5982\uff1a Init.Mode, hspi->Instance \u9017\u53f7\uff0c\u5206\u53f7\u53ea\u5728\u540e\u9762\u6dfb\u52a0\u7a7a\u683c\uff0c\u5982\uff1a int age_max, age_min; \u5982\u679c\u5206\u53f7\u5728\u884c\u672b\uff0c\u7a7a\u683c\u53ef\u52a0\u53ef\u4e0d\u52a0 \u6570\u7ec4\u4e0b\u6807\u7684\u65b9\u62ec\u53f7\u90fd\u6ca1\u6709\u7a7a\u683c\uff0c\u5982 buf[i] \u5757\u6ce8\u91ca /* xxx */ \u4e0e\u6ce8\u91ca\u5185\u5bb9xxx\u524d\u540e\u5404\u4e00\u4e2a\u7a7a\u683c \u884c\u6ce8\u91ca // xxx \u53cc\u659c\u7ebf\u540e\u6709\u4e00\u4e2a\u7a7a\u683c\uff0c\u4e14\u4e24\u6761\u659c\u7ebf\u4e0e\u884c\u5bf9\u9f50\uff0c\u4e0d\u8981\u653e\u5728\u884c\u9996 \u4ee5\u4e0a\u51e0\u70b9\u4ee3\u7801\u4e3e\u4f8b\uff1a /* \u8fd0\u7b97\u7b26\u4e0e\u6570\u7ec4\u4e0b\u6807 */ data[3] = (uint8_t)(verify_key >> 8); for (int i = 0; i <= num; i++) { datax->buf[i] = x1 * (x2 + i) + baseval; } /* \u58f0\u660e\u6307\u9488\u53d8\u91cf */ char *str = NULL; \u5f53\u7136\u4e86\uff0c\u6211\u4eec\u6ca1\u5fc5\u8981\u5173\u6ce8\u8fd9\u4e48\u591a\u7ec6\u8282\uff0c\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u81ea\u52a8\u683c\u5f0f\u5316\u90fd\u4f1a\u505a\u597d\u8fd9\u4e00\u5207\u3002","title":"\u7f29\u8fdb\u4e0e\u7a7a\u683c"},{"location":"STM32/C_standard/#_14","text":"\u6240\u6709\u5de6\u82b1\u62ec\u53f7\u4e0d\u6362\u884c\uff0c\u53f3\u82b1\u62ec\u53f7\u5355\u72ec\u4e00\u884c\uff0c\u5bf9\u4e8e else \u8bed\u53e5\u53f3\u82b1\u62ec\u53f7\u4e0d\u6362\u884c\u3002\u8fd9\u6837\u662f\u4e3a\u4e86\u51cf\u5c11\u4ee3\u7801\u9605\u8bfb\u8d1f\u62c5\uff0c\u4e00\u4e2a\u5de6\u82b1\u62ec\u53f7\u5360\u4e00\u884c\u4ee3\u7801\u4f1a\u770b\u8d77\u6765\u6bd4\u8f83\u957f\uff0c\u53f3\u82b1\u62ec\u53f7\u5355\u72ec\u4e00\u884c\u53ef\u4ee5\u63d0\u9192\u8bfb\u8005\u8fd9\u4e2a\u4ee3\u7801\u5757\u5230\u5e95\u4e86 \u5bf9\u4e8e\u53c2\u6570\u5217\u8868\u6216\u8005\u5176\u4ed6\u5706\u62ec\u53f7\u5185\u6362\u884c\u573a\u666f\uff0c\u540e\u884c\u4e0e\u7b2c\u4e00\u884c\u5de6\u62ec\u53f7\u540e\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5bf9\u9f50\uff0c\u53f3\u62ec\u53f7\u4e0d\u53e6\u8d77\u4e00\u884c /* \u82b1\u62ec\u53f7\u4f7f\u7528\u6848\u4f8b */ /** * @brief \u6309\u952e\u626b\u63cf * * @param mode \u662f\u5426\u652f\u6301\u8fde\u6309 * 0-\u4e0d\u652f\u6301\u8fde\u6309, 1-\u652f\u6301\u8fde\u6309 * @return \u6309\u4e0b\u7684\u6309\u952e * @retval \u6309\u4e0b:`KEY0_PRES ~ WKUP_PRES` * @retval \u672a\u6309\u4e0b:`0` * @note \u6ce8\u610f\u6b64\u51fd\u6570\u6709\u54cd\u5e94\u4f18\u5148\u7ea7,`KEY0 > KEY1 > WK_UP` */ uint8_t key_scan(uint8_t mode) { static uint8_t key_up = 1; /* \u6309\u952e\u677e\u5f00\u6807\u5fd7 */ if (mode == 1) { key_up = 1; /* \u652f\u6301\u8fde\u6309 */ } if (key_up && (KEY0 == 0 || KEY1 == 0 || WK_UP == 1)) { delay_ms(10); key_up = 0; if (KEY0 == 0) { return KEY0_PRES; } else if (KEY1 == 0) { return KEY1_PRES; } else if (WK_UP == 1) { return WKUP_PRES; } } else if (KEY0 == 1 && KEY1 == 1 && WK_UP == 0) { key_up = 1; } return 0; /* \u65e0\u6309\u952e\u6309\u4e0b */ } /* \u62ec\u53f7\u5185\u6362\u884c */ xTaskCreate((TaskFunction_t)start_task, /* \u4efb\u52a1\u51fd\u6570 */ (const char *)\"start_task\", /* \u4efb\u52a1\u540d\u79f0 */ (uint16_t)START_STK_SIZE, /* \u4efb\u52a1\u5806\u6808\u5927\u5c0f */ (void *)NULL, /* \u4f20\u5165\u7ed9\u4efb\u52a1\u51fd\u6570\u7684\u53c2\u6570 */ (UBaseType_t)START_TASK_PRIO, /* \u4efb\u52a1\u4f18\u5148\u7ea7 */ (TaskHandle_t *)&g_start_task_handler); /* \u4efb\u52a1\u53e5\u67c4 */ /* \u4e0b\u4e00\u884c\u7684\u4f4d\u7f6e\u4e0e\u7b2c\u4e00\u884c\u62ec\u53f7\u540e\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5bf9\u9f50, \u6700\u540e\u7684\u53f3\u62ec\u53f7\u4e0d\u6362\u884c */ ring_fifo_t *ring_fifo_init(void *buf, uint32_t size, enum ring_fifo_type type);","title":"\u62ec\u53f7\u6362\u884c"},{"location":"STM32/C_standard/#_15","text":"\u6587\u4ef6\u5934\u6ce8\u91ca\u540e\u6709\u4e00\u4e2a\u7a7a\u884c \u51fd\u6570\u4e4b\u95f4\u987b\u52a0\u4e00\u4e2a\u7a7a\u884c \u5728\u6ce8\u91ca\u67d0\u4e2a\u51fd\u6570\u3001\u7ed3\u6784\u4f53\u3001\u679a\u4e3e\u3001\u53d8\u91cf\u7684\u529f\u80fd\u65f6\u5019\u4e0d\u8981\u52a0\u7a7a\u884c\uff0c\u89c1\u4e0b\u9762\u6ce8\u91ca\u7684\u8bf4\u660e \u5728\u4e00\u4e2a\u51fd\u6570\u4e2d\uff0c\u6bcf\u4e2a\u76f8\u5bf9\u72ec\u7acb\u7684\u64cd\u4f5c\u5b8c\u6210\u4ee5\u540e\u6700\u597d\u6709\u4e00\u4e2a\u7a7a\u884c\uff0c\u6bd4\u5982\u4e0b\u9762\u7684\u4ee3\u7801\u5757\uff0c11,17,23\u884c\u90fd\u6709\u4e00\u4e2a\u7a7a\u884c\uff0c\u8868\u793a\u4e0a\u4e00\u4e2a\u64cd\u4f5c\u5b8c\u6210\u4e86\uff0c\u8be5\u4e0b\u4e00\u4e2a\u64cd\u4f5c\u4e86\uff0c\u65b9\u4fbf\u9605\u8bfb /** * @brief \u7528\u6237\u4ece\u5feb\u9012\u67dc\u53d6\u5305\u88f9 * * @param pick_up_code \u53d6\u4ef6\u7801 * @return status_t \u64cd\u4f5c\u72b6\u6001 */ status_t user_pick_up_express(uint32_t pick_up_code) { if (pick_up_code == 0) { return ERR_INPUT_NULL; } uint32_t cabinet_number = seek_express_by_code(pick_up_code); if (cabinet_number == 0) { /* \u67dc\u5b50\u7f16\u53f7\u4e0d\u5b58\u5728 */ return ERR_NO_FOUND; } status_t cabient_status = cabient_open_the_door(cabient_number); if (cabient_status == ERROR) { /* \u5f00\u95e8\u51fa\u9519, \u53ef\u80fd\u662f\u67dc\u5b50\u7ee7\u7535\u5668\u51fa\u95ee\u9898\u4e86, \u63d0\u793a\u8054\u7cfb\u7ba1\u7406\u5458 */ return ERR_OPEN_DOOR; } return OK; } \u7528\u4e00\u5806 * \u9694\u5f00\u4e5f\u662f\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\uff0c\u4e0d\u8fc7\u8981\u6ce8\u610f\u4e00\u884c80\u4e2a\u5b57\u7b26","title":"\u7a7a\u884c"},{"location":"STM32/C_standard/#_16","text":"\u4e00\u884c\u4ee3\u7801\u53ea\u505a\u4e00\u4ef6\u4e8b\u60c5\uff0c\u6bd4\u5982\u53ea\u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cf\uff0c\u6216\u8005\u4e00\u6761\u8bed\u53e5\uff0c\u8fd9\u6837\u65b9\u4fbf\u9605\u8bfb\u4e0e\u6ce8\u91ca \u591a\u4e2a\u8bed\u53e5\u4e0d\u8981\u653e\u5728\u4e00\u884c\u91cc\uff0c\u4e00\u884c\u5185\u4e0d\u8981\u5199\u591a\u4e2a\u8fde\u7eed\u8d4b\u503c\u7684\u8bed\u53e5 \u4e00\u884c\u4ee3\u7801\u5c3d\u91cf\u4e0d\u8981\u591a\u4e2a\u53d8\u91cf\u3002\u5982\u679c\u5728\u903b\u8f91\u4e0a\u6bd4\u8f83\u76f8\u8fd1\uff0c\u53ef\u4ee5\u5199\u5728\u4e00\u884c\u4e0a\uff0c\u6bd4\u5982 float width, height; \u4e00\u884c\u6700\u591a80\u4e2a\u5b57\u7b26\uff0c\u5199\u4ee3\u7801\u7ecf\u5e38\u9700\u8981\u5206\u5c4f\uff0c\u4e00\u884c\u4ee3\u7801\u5982\u679c\u592a\u957f\u5c31\u4e0d\u592a\u65b9\u4fbf\u4e86\u3002 /* \u4e0d\u89c4\u8303\u5199\u6cd5 */ a = x + y; b = x - y; a = b = 0; /* \u89c4\u8303\u5199\u6cd5 */ a = x + y; b = x - y; a = 0; b = 0;","title":"\u4ee3\u7801\u884c"},{"location":"STM32/C_standard/#_17","text":"if, for, while, do \u8fd9\u7c7b\u8bed\u53e5\uff0c\u5fc5\u987b\u52a0\u82b1\u62ec\u53f7\uff0c\u4e00\u4e2a\u8bed\u53e5\u4e5f\u5fc5\u987b\u52a0 \uff0c\u8fd9\u6837\u53ef\u4ee5\u6709\u6548\u9632\u6b62\u7f16\u7801\u65f6\u51fa\u73b0\u7684\u5931\u8bef \u53ca\u65f6\u6e05\u7406\u672a\u4f7f\u7528\u7684\u51fd\u6570\u3001\u53d8\u91cf\u7b49\u6b7b\u4ee3\u7801 \uff0c\u4e0d\u8981\u59a8\u788d\u9605\u8bfb\u3002\u5982\u679c\u6ca1\u6709\u66f4\u6539Template\u7684\u8b66\u544a\u7b49\u7ea7\uff0c\u672a\u4f7f\u7528\u7684\u53d8\u91cf\u3001\u51fd\u6570\u90fd\u4f1a\u7ed9\u8b66\u544a\u3002\u6211\u7ed9\u7684Template\u662f\u4e3a\u901a\u7528\u6027\u8003\u8651\u7684\uff0c\u8981\u662f\u4f60\u81ea\u5df1\u5199\u7684\u4e1c\u897f\u53ca\u65f6\u6e05\u7406\u6ca1\u6709\u7528\u5230\u7684\u4ee3\u7801\uff0c\u53ef\u8bfb\u6027\u662f\u7b2c\u4e00\u4f4d\u7684\u3002 \u672a\u4f7f\u7528\u7684\u4ee3\u7801\u53eb\u505a\u6b7b\u4ee3\u7801(Dead-code)\uff0cDead-code\u5728\u4e00\u4e2a\u4f01\u4e1a\u9879\u76ee\u4e2d\u90fd\u662f\u5f88\u5371\u9669\u7684\uff0c\u8fd9\u662f\u7531\u4e8eDead-code\u4e00\u822c\u5199\u5b8c\u4ee5\u540e\u5c31\u4e0d\u4f1a\u518d\u770b\u4e86\uff0c\u5c31\u7b97code reviewing\u65f6reviewer\u4e5f\u53ea\u662f\u5927\u6982\u626b\u4e24\u773c\uff0c\u4e0d\u4f1a\u53bb\u6267\u884c\u8c03\u7528\uff0c\u8fd9\u6bb5\u4ee3\u7801\u5c31\u4f1a\u5931\u53bb\u7ef4\u62a4\u3002\u5982\u679c\u54ea\u4e00\u5929\u67d0\u4e2a\u4eba\u7a81\u7136\u8c03\u7528\u4e86Dead-code\u4e2d\u7684\u51fd\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u6709\u5f88\u9690\u853d\u7684bug\uff0c\u7a81\u7136\u6709\u4e00\u5929\u5c31\u89e6\u53d1\u4e86\uff0c\u8fd9\u4f1a\u9020\u6210\u4e0d\u53ef\u9884\u4f30\u7684\u635f\u5931\u3002\u56e0\u6b64\u5bf9\u4e8eDead-code\uff0c\u5b81\u613f\u79fb\u9664\uff0c\u672a\u6765\u67d0\u5929\u518d\u91cd\u5199\u4e00\u904d\uff0c\u4e5f\u4e0d\u4f1a\u653e\u5728\u54ea\u91cc\u4e0d\u7ba1\u3002 \u8981\u6ce8\u610f\u903b\u8f91\u4e0a\u6c38\u8fdc\u4e0d\u53ef\u80fd\u6267\u884c\u7684\u4ee3\u7801\uff0c\u5982\u679c\u6ca1\u6709\u66f4\u6539Template\u7684\u8b66\u544a\u7b49\u7ea7\uff0c\u7f16\u8bd1\u4f1a\u7ed9\u8b66\u544a\uff1a \u5bf9\u4e8e\u7a7a\u8bed\u53e5\uff0c\u4fdd\u7559\u4e00\u4e2a {} \u5373\u53ef\uff0c\u62ec\u53f7\u91cc\u9762\u5373\u6ca1\u6709\u7a7a\u683c\uff0c\u4e5f\u4e0d\u6362\u884c\uff0c\u4f46\u662f\u5bf9\u4e8e if else \uff0c\u62ec\u53f7\u5185\u8981\u6362\u884c\uff1b\u5982\u679c\u4f7f\u7528\u5206\u53f7\uff0c\u5fc5\u987b\u6362\u884c\uff0c\u4e14\u5206\u53f7\u524d\u7f29\u8fdb\u3002\u8fd9\u6837\u505a\u610f\u5728\u63d0\u793a\u9605\u8bfb\u8005\u6ce8\u610f\u6b64\u5904\u7684\u903b\u8f91\u3002 /* \u4e0d\u89c4\u8303\u5199\u6cd5 */ if (condition) return true; if (condition) return true; if (condition) { return true; } if (condition) {} else { ... } while (condition) { } /* \u89c4\u8303\u5199\u6cd5 */ if (condition) { return true; } /* \u7a7a\u8bed\u53e5\u89c4\u8303\u5199\u6cd5 */ while (condition) {} /* \u5982\u679c\u4e0d\u7528\u4e0a\u9762\u7684\u65b9\u5f0f, \u53ef\u4ee5\u91c7\u7528\u4e0b\u9762\u7684\u65b9\u5f0f. \u5982\u679c\u5206\u53f7\u4e0d\u6362\u884c\u6613\u88ab\u8bef\u8ba4\u6210\u51fd\u6570\u8c03\u7528 */ while (condition) ; /* if else\u4e2d\u7684\u7a7a\u8bed\u53e5\u62ec\u53f7\u9700\u6362\u884c. \u5982\u679c\u5927\u62ec\u53f7\u4e2d\u95f4\u4e0d\u6362\u884c\u6613\u88ab\u8bef\u8ba4\u6210if\u6761\u4ef6\u6210\u7acb\u540e\u6267\u884c */ if (condition) { } else { ... }","title":"\u4ee3\u7801\u5757"},{"location":"STM32/C_standard/#_18","text":"\u4e00\u4e2a\u51fd\u6570\u5c3d\u91cf\u4e0d\u8981\u8d85\u8fc710\u4e2a\u5c40\u90e8\u53d8\u91cf \uff0c\u8d85\u8fc7\u8bf4\u660e\u4f60\u7684\u529f\u80fd\u592a\u590d\u6742\u4e86\uff0c\u8981\u8003\u8651\u4f18\u5316 \u51fd\u6570\u53c2\u6570\u4e5f\u4e0d\u8981\u592a\u591a\uff0c\u6700\u591a6\u4e2a\uff0c\u592a\u591a\u8bf4\u660e\u4f60\u7684\u529f\u80fd\u592a\u590d\u6742\u4e86\uff0c\u8981\u8003\u8651\u4f18\u5316 \u4e00\u4e2a\u51fd\u6570\u4e5f\u4e0d\u8981\u592a\u957f\uff0c100\u884c\u5de6\u53f3\u4e3a\u5b9c\uff0c\u592a\u957f\u540c\u7406 \u6821\u9a8c\u903b\u8f91\u653e\u524d\u9762\uff0c\u53d1\u73b0\u9519\u8bef\u65e9\u8fd4\u56de\uff0c\u8fd9\u6837\u80fd\u6709\u6548\u51cf\u5c11\u5d4c\u5957\uff0c\u907f\u514d\u4ee3\u7801\u903b\u8f91\u9519\u8bef \u4e0d\u5141\u8bb8\u4f7f\u7528\u9012\u5f52 \uff0c\u9012\u5f52\u5bf9\u4e8e\u8d44\u6e90\u6d88\u8017\u5de8\u5927\uff0c\u6613\u9020\u6210\u6808\u6ea2\u51fa\uff08\u9ed8\u8ba4\u60c5\u51b5\u4e0b startup \u5b9a\u4e49\u7684\u6808\u5927\u5c0f\u53ea\u6709200\u5b57\u8282\uff09 \u9664 void \u51fd\u6570\u3001\u6784\u9020\u51fd\u6570\u3001\u6790\u6784\u51fd\u6570\u4ee5\u5916\uff0c \u51fd\u6570\u672b\u5c3e\u5fc5\u987b\u8981 return \u8fd4\u56de\u503c \uff0c\u5982\u679c\u6ca1\u6709\u8fd4\u56de\u4efb\u4f55\u503c\u7f16\u8bd1\u4f1a\u7ed9\u8b66\u544a \u51fd\u6570\u7684\u529f\u80fd\u8981\u5355\u4e00\uff0c\u4e0d\u80fd\u5904\u7406\u592a\u591a\u7684\u4e1a\u52a1\u903b\u8f91\uff0c\u5bf9\u4e8e\u5355\u4e00\u6a21\u5757\u7684\u6587\u4ef6\u670d\u52a1\u7684\u5bf9\u8c61\u4e5f\u8981\u5355\u4e00\uff0c\u4e0d\u8981\u8ba9\u4e00\u4e2a\u6587\u4ef6\u6216\u8005\u51fd\u6570\u6210\u5927\u6742\u70e9\u3002 \u6587\u4ef6\u548c\u51fd\u6570\u7684\u529f\u80fd\u8981\u4e13\u4e00\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u533b\u9662\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u7a0b\u5e8f\uff0c\u4e00\u5bb6\u7efc\u5408\u6027\u533b\u9662\u4e00\u822c\u90fd\u4f1a\u6709\u82e5\u5e72\u4e2a\u79d1\u5ba4\uff0c\u6bd4\u5982\u5185\u79d1\u3001\u5916\u79d1\u3001\u653e\u5c04\u79d1\u7b49\u7b49\u3002\u800c\u5185\u79d1\u53c8\u5305\u62ec\u547c\u5438\u79d1\u3001\u5fc3\u8840\u7ba1\u79d1\uff0c\u4f46\u662f\u5185\u79d1\u4e0d\u4f1a\u6709\u76ae\u80a4\u79d1\u3002\u5916\u79d1\u5305\u62ec\u9aa8\u79d1\u3001\u8111\u5916\u79d1\uff0c\u4f46\u662f\u4e0d\u4f1a\u6709\u6d88\u5316\u5185\u79d1\u3002\u540c\u6837\u7684\uff0c\u5728\u7a0b\u5e8f\u4e2d\u4e5f\u4e0d\u80fd\u8fd9\u6837\uff0c\u4fdd\u8bc1\u670d\u52a1\u7684\u5bf9\u8c61\u7edf\u4e00\u3002\u50cf\u547c\u5438\u79d1\u8fd9\u6837\u7684\u4e13\u79d1\u95e8\u8bca\u5c31\u53ef\u4ee5\u770b\u4f5c\u4e00\u4e2a\u72ec\u7acb\u7684\u6587\u4ef6\uff0c\u533b\u751f\u7ed9\u4f60\u6cbb\u75c5\u7684\u6d41\u7a0b\u76f8\u5f53\u4e8e\u51fd\u6570\u3002 \u4f46\u662f\u6211\u4eec\u5728\u7a0b\u5e8f\u4e2d\u7ecf\u5e38\u4f1a\u9047\u5230\u4e00\u4e9b\u4ea4\u53c9\u7684\u529f\u80fd\uff0c\u6bd4\u5982\u533b\u9662\u7684\u653e\u5c04\u79d1\uff0c\u5c31\u4f1a\u6709\u5185\u5916\u79d1\u4ea4\u53c9\u3002\u9aa8\u6298\u4e86\u5f97\u53bb\u653e\u5c04\u79d1\u62cd\u7247\u5b50\uff0c\u8111\u5b50\u91cc\u6709\u80bf\u7624\uff0c\u4e5f\u5f97\u53bb\u653e\u5c04\u79d1\u62cd\u7247\u5b50\u3002\u90a3\u4e48\u5bf9\u4e8e\u8fd9\u79cd\u4ee3\u7801\u9700\u8981\u6211\u4eec\u5904\u7406\u597d\u5185\u5916\u7684\u903b\u8f91\uff0c\u4e0d\u8981\u4e71\u4e03\u516b\u7cdf\u7684\uff0c\u4e5f\u4e0d\u8981\u4e00\u80a1\u8111\u5168\u653e\u5230\u4e00\u4e2a\u5730\u65b9\u3002\u5f53\u7136\u5b9e\u9645\u60c5\u51b5\u5f53\u7136\u6ca1\u6709\u6ca1\u6709\u90a3\u4e48\u7406\u60f3\uff0c\u8fd9\u5c31\u9700\u8981\u4f60\u81ea\u5df1\u601d\u8003\uff0c\u4ed4\u7ec6\u659f\u914c\uff0c\u627e\u5230\u6700\u4f18\u89e3\u3002","title":"\u51fd\u6570"},{"location":"STM32/C_standard/#_19","text":"\u6240\u6709\u5c40\u90e8\u53d8\u91cf\u54ea\u91cc\u7528\u5728\u54ea\u91cc\u58f0\u660e\u3002 \u4e0d\u5141\u8bb8\u4f7f\u7528\u672a\u5b9a\u4e49\u521d\u503c\u7684\u53d8\u91cf \u5982\u679c\u521d\u503c\u53ef\u4ee5\u786e\u5b9a\uff0c\u5199\u5728\u4e00\u884c\u4e0a\uff0c\u4e0d\u8981\u5206\u5f00\u5199\uff1a xxxStatus_t xxx_status = get_xxx_status(xxx); \u4e0d\u786e\u5b9a\u521d\u503c\u7684\u53d8\u91cf\u7ed9 0 \u6216 1 \uff0c\u4e0d\u786e\u5b9a\u521d\u503c\u7684\u6307\u9488\u7ed9 NULL \uff0c\u4e0d\u786e\u5b9a\u7684\u7ed3\u6784\u4f53\u53d8\u91cf\u7ed9 {0} \u4e0d\u80fd\u8ba9\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u8d85\u51fa\u5b83\u7684\u5b9e\u9645\u4f5c\u7528\u8303\u56f4\uff0c\u6bd4\u5982\u4e00\u4e2a\u53d8\u91cf\u5c31\u5728 if \u6761\u4ef6\u6210\u7acb\u91cc\u7528\uff0c\u4f60\u5c31\u4e0d\u5e94\u8be5\u58f0\u660e\u5728 if \u5916\u3002 \u5c24\u5176\u662f\u5bf9\u4e8e\u5faa\u73af\u53d8\u91cf i, j, k \uff0c\u5982\u679c\u53ea\u662f\u5355\u7eaf\u7684\u4e0b\u6807\u610f\u4e49\uff0c\u5728 for \u91cc\u9762\u58f0\u660e\u5e76\u5b9a\u4e49\uff0c\u4e0d\u8981\u5728\u5916\u8fb9\u58f0\u660e\uff0c\u4e5f\u5c31\u662f\uff1a for (int i = 0, i < count; i++) \u5982\u679c\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u53ea\u6709\u4e00\u4e2a\u6587\u4ef6\u4f7f\u7528\uff0c\u5c3d\u91cf\u52a0 static \u4fee\u9970\u7b26\uff0c\u8fd9\u6837\u80fd\u907f\u514d\u5176\u4ed6\u4eba\u5728\u5176\u4ed6\u6587\u4ef6\u8c03\u7528\u672c\u6587\u4ef6\u7684\u53d8\u91cf\uff0c\u4ea7\u751f\u9884\u671f\u4e4b\u5916\u7684\u540e\u679c\u3002 \u5168\u5c40\u53d8\u91cf\u5982\u679c\u4e0d\u52a0 static \uff0c\u6574\u4e2a\u7a0b\u5e8f\u662f\u53ef\u4ee5\u8bbf\u95ee\u7684\uff0c\u4efb\u4f55\u4e00\u4e2a\u5730\u65b9\u7684 extern \u58f0\u660e\u90fd\u53ef\u4ee5\u8bbf\u95ee\u5230\u8fd9\u4e2a\u53d8\u91cf\u3002 \u5bf9\u4e8e\u53ea\u7528\u5199\u5165\u4e00\u6b21\u521d\u503c\u7684\u53d8\u91cf\uff0c\u5c3d\u91cf\u52a0 const \u4fee\u9970\u7b26\uff0c\u8fd9\u6837\u80fd\u591f\u907f\u514d\u5176\u4ed6\u4eba\u4e71\u6539\u53d8\u91cf\u7684\u503c\u4ea7\u751f\u9884\u671f\u4e4b\u5916\u7684\u540e\u679c\u3002 \u4e00\u4e2a\u6709\u8da3\u7684\u51b7\u77e5\u8bc6\uff0c\u6211\u4eec\u5199\u7684\u7a0b\u5e8f\u5927\u90e8\u5206\u53d8\u91cf\uff0c\u5927\u591a\u53ea\u662f\u7ed9\u4e86\u4e00\u6b21\u521d\u503c\u540e\u518d\u6ca1\u53d8\u8fc7\u3002\u4f46\u5927\u91cf\u7684 const \u4fee\u9970\u7b26\u52bf\u5fc5\u4f1a\u9020\u6210\u9605\u8bfb\u8d1f\u62c5\uff0c\u56e0\u6b64\u5bf9\u4e8e\u4e00\u4e9b\u91cd\u8981\u7684\u53d8\u91cf\u8003\u8651\u662f\u5426\u52a0 const \u4fee\u9970\u7b26\u662f\u975e\u5e38\u6709\u5fc5\u8981\u7684\uff0c\u8fd9\u6837\u5c31\u4e0d\u7528\u62c5\u5fc3\u53d8\u91cf\u5728\u67d0\u4e2a\u9690\u853d\u7684\u89d2\u843d\u88ab\u91cd\u65b0\u8d4b\u503c\u3002 uint32_t arr[4]; int16_t foo; /* \u4e0d\u5141\u8bb8\u672a\u5b9a\u4e49\u5c31\u4f7f\u7528arr\u6570\u7ec4 */ printf(\"%d\", a[1]); /* \u4e0d\u5141\u8bb8\u4f7f\u7528\u672a\u5b9a\u4e49\u7684\u53d8\u91cf */ int16_t bar = foo + 1; /* \u5bf9\u4e8e\u4e0d\u786e\u5b9a\u5185\u5bb9\u7684\u6570\u7ec4, \u4f7f\u7528memset\u521d\u59cb\u5316 */ memset(arr, 0, sizeof(arr)); /* \u7533\u8bf7\u5806\u5185\u5b58\u65f6, \u4f7f\u7528calloc\u53ef\u4ee5\u5c06\u7533\u8bf7\u7684\u5185\u5b58\u8bbe\u7f6e\u4e3a\u96f6 */ uint16_t *new_data = (uint16_t *)calloc(sizeof(uint16_t) * MAX_LEN);","title":"\u53d8\u91cf"},{"location":"STM32/C_standard/#_20","text":"\u5bf9\u4e8e\u7ed3\u6784\u4f53\u6216\u8005\u8054\u5408\u4f53\uff0c\u9664\u975e\u4e0d\u516c\u5f00\uff0c\u53ea\u7528\u6765\u58f0\u660e\u4e00\u4e2a\u6216\u51e0\u4e2a\u53d8\u91cf\uff0c\u5426\u5219 \u7edf\u4e00\u4f7f\u7528 typedef \u5b9a\u4e49\u540d\u79f0 \uff0c\u5e76\u7ed3\u5c3e\u5e26 _t \u540e\u7f00 /* \u6b63\u786e\u5199\u6cd5 */ typedef struct foo { /* \u6b64\u5904foo\u53ef\u5199\u53ef\u4e0d\u5199, \u5982\u679c\u6709\u50cf\u4e0b\u9762\u8fd9\u6837\u9700\u8981\u5f15\u7528\u8be5\u7ed3\u6784\u4f53\u6307\u9488\u7684\u90a3\u5fc5\u987b\u5199 */ struct foo *next; /*!< next item */ int index; /*!< index of item */ uint8_t flag; /*!< flag of item */ ... } foo_t; /* \u4f7f\u7528_t\u540e\u7f00 */ foo_t foo_obj; /* \u5b9a\u4e49\u7ed3\u6784\u4f53\u53d8\u91cf */ /* \u9519\u8bef\u5199\u6cd5 */ struct foo { struct foo *next; /*!< next item */ int index; /*!< index of item */ uint8_t flag; /*!< flag of item */ ... }; sturct foo foo_obj; /* \u5b9a\u4e49\u7ed3\u6784\u4f53\u53d8\u91cf */ /* \u7279\u6b8a\u60c5\u51b5, \u53ea\u58f0\u660e\u4e00\u4e2a\u6216\u51e0\u4e2a\u7ed3\u6784\u4f53\u53d8\u91cf, \u8fd9\u79cd\u4e0d\u7528typedef\u540d\u8bcd */ /* \u5982\u679c\u5185\u90e8\u4f7f\u7528\u8003\u8651\u662f\u5426\u9700\u8981static\u4fee\u9970\u7b26, \u52a0\u5728struct\u524d\u9762 */ struct foo { int index_of_foo; /*!< \u7d22\u5f15 */ data_t data_of_foo; /*!< \u6570\u636e */ ... } foo_variable_1, foo_variable_2 ... ; \u5bf9\u4e8e\u679a\u4e3e\uff0c\u679a\u4e3e\u6210\u5458\u4f7f\u7528\u5927\u5199\uff08\u5f53\u7136\u67d0\u4e9b\u60c5\u51b5\u4e0b\u53ef\u4ee5\u4f7f\u7528\u5c0f\u5199\uff09 \u4e0e\u5b8f\u5b9a\u4e49\u7c7b\u4f3c\uff0c\u5982\u679c\u53ea\u7528\u6765\u5217\u4e3e\u6570\u636e\uff0c\u6bd4\u5982\u6570\u7ec4\u4e0b\u6807\uff0c\u90a3\u4e48\u53ef\u4ee5\u4e0d\u5b9a\u4e49\u540d\u79f0 \u679a\u4e3e\u7c7b\u578b\u53ef\u4ee5\u7528\u6765\u4f5c\u4e3a\u53c2\u6570\u6216\u8005\u8fd4\u56de\u503c\u3002\u679a\u4e3e\u6210\u5458\u4e00\u884c\u53ea\u5199\u4e00\u4e2a\u6210\u5458\uff0c\u4e0d\u8981\u5806\u5728\u4e00\u884c\u4e0a\u3002 /** * @brief GPIO\u7535\u5e73\u5b9a\u4e49 */ typedef enum { GPIO_PIN_RESET = 0x00U, GPIO_PIN_SET } GPIO_PinState_t; /** * @brief \u72b6\u6001\u5b9a\u4e49 */ typedef enum { HAL_OK = 0x00U, HAL_ERROR, HAL_BUSY, HAL_TIMEOUT } HAL_Status_t; /* \u4e0d\u8981\u5199\u6210\u8fd9\u6837, \u6210\u5458\u4e0d\u6362\u884c */ typedef enum { HAL_OK = 0x00U, HAL_ERROR, HAL_BUSY, HAL_TIMEOUT } HAL_Status_t; /** * @brief HAL\u5199\u5165GPIO\u7535\u5e73 * * @param GPIOx GPIO\u7aef\u53e3 * @param GPIO_Pin GPIO\u5f15\u811a * @param PinState \u5199\u5165\u7535\u5e73 * @return `HAL_Status_t` \u662f\u5426\u5199\u5165\u6210\u529f * @note \u5b9e\u9645HAL\u5e93\u903b\u8f91\u5e76\u975e\u8fd9\u6837, \u53ea\u662f\u4e3e\u4e2a\u4f8b\u5b50 */ HAL_Status_t HAL_GPIO_Write_Pin(GPIO_t *GPIOx, uint16_t GPIO_Pin, GPIO_PinState_t PinState) { assert_param(IS_GPIO_PIN(GPIO_Pin)); ... GPIOx->ODR = GPIO->IDR | (GPIO_PinState << GPIO_Pin); if (GPIOx->IDR == GPIOx->ODR) { return HAL_OK; } else { return HAL_ERROR } } /* \u7eaf\u4e0b\u6807\u5b9a\u4e49, \u53ef\u4ee5\u4e0d\u7528typedef\u5b9a\u4e49\u540d\u79f0 */ enum { LAST = 0x00U, NOW, NEXT }; array[LAST] = ...;","title":"\u590d\u6742\u6570\u636e\u7c7b\u578b"},{"location":"STM32/C_standard/#_21","text":"\u5bf9\u4e8e\u6307\u9488\uff0c * \u653e\u5728\u53d8\u91cf\u540d\u7684\u4e00\u4fa7 \uff0c\u5373 char *pointer = NULL \uff0c\u800c\u975e\u7c7b\u578b\u7684\u4e00\u4fa7\uff0c\u5373 char* pointer = NULL \u3002\u653e\u5728\u53f3\u8fb9\u662f\u8981\u6ce8\u610f\u4e0b\u9762\u7684\u60c5\u51b5\uff1a int* p, q; /* \u5f53\u8fd9\u6837\u58f0\u660e\u7684\u65f6\u5019p\u662fint\u6307\u9488, q\u662fint\u53d8\u91cf, \u76f8\u5f53\u4e8e: int* p; int q; */ /* \u6240\u4ee5\u91c7\u7528\u4e0b\u9762\u7684\u65b9\u5f0f, \u770b\u8d77\u6765\u7edf\u4e00 */ int *p, *q; \u4e0d\u5efa\u8bae\u4e00\u884c\u4ee3\u7801\u58f0\u660e\u591a\u4e2a\u53d8\u91cf\uff0c\u56e0\u6b64\u5c3d\u91cf\u907f\u514d\u50cf\u4e0a\u9762\u8fd9\u6837\u5373\u58f0\u660e\u6307\u9488\u53c8\u58f0\u660e\u53d8\u91cf\u3002 \u7533\u8bf7\u7684\u5185\u5b58\u5fc5\u987b\u53ca\u65f6\u91ca\u653e\uff0c\u5426\u5219\u4f1a\u9020\u6210\u5185\u5b58\u6cc4\u6f0f\u3002 \u6307\u9488\u5d4c\u5957\uff08\u6bd4\u5982\u6307\u5411\u6307\u9488 int* \u7684\u6307\u9488 int** \uff09\u6700\u591a\u4e09\u5c42\uff0c\u6570\u7ec4\u6700\u591a\u4e09\u7ef4\u6570\u7ec4 \u58f0\u660e\u6570\u7ec4\u5fc5\u987b\u521d\u59cb\u5316\uff0c\u5982\u679c\u4e0d\u786e\u5b9a\u7ed90\u503c\u3002\u4e0d\u5141\u8bb8\u51fa\u73b0\u672a\u521d\u59cb\u5316\u7684\u6570\u7ec4 \u5bf9\u4e8e\u7ed3\u6784\u4f53\u3001\u8054\u5408\u4f53\u8fd9\u79cd\u590d\u6742\u6570\u636e\u7c7b\u578b\uff0c\u51fd\u6570\u4e4b\u95f4\u4f20\u9012\u65f6\u5c3d\u91cf\u4f7f\u7528\u6307\u9488\uff0c\u4ee5\u51cf\u5c11\u5185\u5b58\u5f00\u9500\uff0c\u4ee5\u53ca\u907f\u514d\u53ef\u80fd\u4ea7\u751f\u7684\u5185\u5b58\u6cc4\u6f0f\u3002 HAL\u5e93\u4e2d\u7684\u53e5\u67c4\u5c31\u662f\u4e00\u4e2a\u7ed3\u6784\u4f53\u3002\u5bf9\u4e8e\u9700\u8981\u4f20\u9012\u53e5\u67c4\u53d8\u91cf\u7684\u5730\u65b9\uff0c\u5c3d\u91cf\u4f7f\u7528\u6307\u9488\uff0c\u4e0d\u8981\u4f7f\u7528\u6574\u4e2a\u53e5\u67c4\u53d8\u91cf\u3002\u5728HAL\u5e93\u4e2d\uff0c\u5982\u679c\u9700\u8981\u5224\u65ad\u67d0\u4e2a\u53e5\u67c4\u6307\u9488\u7684\u5177\u4f53\u5916\u8bbe\uff0c\u4f7f\u7528 handler->Instance \uff0c\u4e0d\u8981\u5224\u65ad\u6307\u9488\u662f\u5426\u4e0e\u67d0\u4e2a\u5916\u8bbe\u7684\u53e5\u67c4\u5730\u5740\u662f\u5426\u76f8\u7b49\uff0c\u8fd9\u6837\u5982\u679c\u67d0\u4e9b\u5730\u65b9\u65f6\u76f4\u63a5\u4f20\u5165\u7684\u53e5\u67c4\u53d8\u91cf\u800c\u4e0d\u662f\u53e5\u67c4\u6307\u9488\uff0c\u5b58\u5728\u5224\u65ad\u5931\u6548\u7684\u9690\u60a3\u3002\u5177\u4f53\u89c1 HAL\u5e93\u53e5\u67c4 \u3002","title":"\u6570\u7ec4\u4e0e\u6307\u9488"},{"location":"STM32/C_standard/#_22","text":"\u4ee3\u7801\u4e2d\u4e5f\u4e0d\u8981\u7528\u8fc7\u591a\u7684\u5b8f\u5b9a\u4e49\uff0c\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u9002\u5f53\u88c1\u526a\uff0c\u53ca\u65f6\u6e05\u7406\u672a\u4f7f\u7528\u7684\u51fd\u6570\u548c\u53d8\u91cf\uff0c\u800c\u4e0d\u662f\u4f9d\u8d56\u5b8f\u5b9a\u4e49 \u7eed\u884c\u7b26\u53f3\u5bf9\u9f50 \u5b8f\u5b9a\u4e49\u5982\u679c\u6709 #if \u5d4c\u5957\uff0c\u4e0d\u7f29\u8fdb \u4f7f\u7528 #define \u5b9a\u4e49\u5e38\u91cf\u65f6\uff0c\u5e38\u91cf\u503c\u81ea\u52a8\u5bf9\u9f50 /* \u4e0d\u89c4\u8303\u5199\u6cd5 */ #define USE_FOO 0 #define NOT_USE_BAR 1 #if NOT_USE_BAR #define IS_FOO void foo(void); #else /* NOT_USE_BAR */ #define IS_BAR void bar(void); #define LED0(x) \\ (x) ? HAL_GPIO_WritePin(LED0_PORT, LED0_PIN, GPIO_PIN_SET) \\ : HAL_GPIO_WritePin(LED0_PORT, LED0_PIN, GPIO_PIN_RESET) #endif /* NOT_USE_BAR */ /* \u89c4\u8303\u5199\u6cd5 */ #define USE_FOO 0 #define NOT_USE_BAR 1 #if NOT_USE_BAR #define IS_FOO void foo(void); #else /* NOT_USE_BAR */ #define IS_BAR void bar(void); /* \u6700\u53f3\u8fb9\u7684\u53cd\u659c\u6760\u5c31\u662f\u7eed\u884c\u7b26, \u53f3\u5bf9\u9f50 */ #define LED0(x) \\ (x) ? HAL_GPIO_WritePin(LED0_PORT, LED0_PIN, GPIO_PIN_SET) \\ : HAL_GPIO_WritePin(LED0_PORT, LED0_PIN, GPIO_PIN_RESET) #endif /* NOT_USE_BAR */ VSCode\u548cKeil\u53ef\u4ee5\u6298\u53e0\u5b8f\u5b9a\u4e49\uff0c\u8fd9\u6837\u672a\u542f\u7528\u7684\u5b8f\u5b9a\u4e49\u53ef\u4ee5\u4e0d\u663e\u793a","title":"\u5b8f\u5b9a\u4e49"},{"location":"STM32/C_standard/#goto","text":"\u53ef\u4ee5\u4f7f\u7528 goto \uff0c goto \u4f5c\u4e3a\u51fd\u6570\u9000\u51fa\u65f6\u4f7f\u7528\u975e\u5e38\u65b9\u4fbf\uff0cLinux\u5185\u6838\u4e2d\u4e5f\u6709\u4e0d\u5c11\u4ee3\u7801\u7528\u4e86 goto \u3002\u4f46\u8bf7\u4e0d\u8981\u6ee5\u7528 goto \u4e0d\u8981\u8de8\u51fd\u6570\uff1b\u4f7f\u7528 goto \u4e0d\u8981\u5f62\u6210\u5faa\u73af\uff1b\u5c3d\u91cf\u5f80\u540e\u8df3\u8f6c\uff0c\u4e0d\u8981\u8df3\u8f6c\u5230\u524d\u9762\u3002\u5f80\u524d\u8df3\u8f6c\u5bb9\u6613\u5f62\u6210\u6f5c\u5728\u7684\u903b\u8f91\u9519\u8bef\u3002","title":"goto"},{"location":"STM32/C_standard/#_23","text":"\u4e0d\u8981\u4f7f\u7528\u9b54\u6cd5\u6570\u5b57(Magic Number)\uff0c\u5373\u7a81\u5982\u5176\u6765\u7684\u6570\u5b57\uff0c\u610f\u4e49\u4e0d\u660e\uff0c\u6bd4\u5982 int magic_number = 3; \u4f60\u544a\u8bc9\u6211\u8fd9\u4e2a3\u662f\u5e72\u4ec0\u4e48\u7684 \u5982\u679c\u8981\u4f7f\u7528\u5e38\u6570\u5c3d\u91cf\u7528\u5b8f\u5b9a\u4e49\uff0c\u4f46\u662f\u4e0d\u8981\u51fa\u73b0\u8fd9\u79cd\u5b8f\u5b9a\u4e49\uff1a #define FIVE 5 \uff0c\u8c01\u4e0d\u77e5\u9053FIVE\u662f5\u554a\uff0c\u4ee3\u7801\u91cc\u4e0d\u80fd\u76f4\u63a5\u51995\u5417 \u4e0d\u8981\u5bf9\u6d6e\u70b9\u6570\u505a\u76f8\u7b49\u6216\u8005\u4e0d\u7b49\u5224\u65ad\uff0c\u6d6e\u70b9\u6570\u7531\u4e8e\u7cbe\u5ea6\u95ee\u9898\u5e76\u4e0d\u4f1a\u6309\u7167\u6211\u4eec\u9884\u671f\u7684\u65b9\u5f0f\u6267\u884c\u3002\u5f88\u5178\u578b\u7684\u4f8b\u5b50\uff0c\u53ef\u4ee5\u81ea\u5df1\u5199\u4e2a\u7a0b\u5e8f\u770b\u4e00\u4e0b 0.1 + 0.2 == 0.3 \u7684\u503c\uff0c\u4f60\u4f1a\u53d1\u73b0\u8fd9\u4e2a\u6761\u4ef6\u7684\u7ed3\u679c\u662f0\u5373 false \u6ce8\u610f\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c\u4ed4\u7ec6\u601d\u8003\u8fd9\u6837\u505a\u662f\u5426\u6709\u95ee\u9898","title":"\u6742\u9879"},{"location":"STM32/C_standard/#_24","text":"\u4ee3\u7801\u5fc5\u987b\u5199\u6ce8\u91ca\uff0c\u4e0d\u5199\u6ce8\u91ca\u7684\u90fd\u662f \u3002** \u6ce8\u91ca\u4f7f\u7528 doxygen \u6807\u51c6\u3002\u884c\u6ce8\u91ca // \u7528\u5728\u6ce8\u91ca\u4ee3\u7801\u4e0a\u3002doxygen\u652f\u6301 Markdown \u8bed\u6cd5 doxygen\u7684\u6807\u7b7e\u53ef\u4ee5\u4ee5 @ \u6216\u8005 \\ \u5f00\u5934\uff0c \u8fd9\u91cc\u7edf\u4e00\u89c4\u5b9a\u4f7f\u7528 @ \u4f5c\u4e3a\u6807\u7b7e\u5f00\u5934 \u3002 doxygen\u89c4\u5b9a\u7684\u6807\u7b7e\u53ef\u70b9\u51fb \u6b64\u5904 \u67e5\u9605\uff0c\u5982\u679c\u6807\u7b7e\u662fdoxygen\u89c4\u5b9a\u7684\uff0cvscode\u4f1a\u81ea\u52a8\u8bc6\u522b\u6807\u7b7e\u5e76\u663e\u793a\u76f8\u5e94\u7684\u989c\u8272\u3002\u4e0b\u9762\u5217\u4e3e\u51e0\u4e2a\u5e38\u7528\u7684\uff0c\u7528\u6cd5\u53c2\u7167\u5b98\u65b9\u6587\u6863\uff0c\u6216\u8005\u4e0b\u9762\u7684\u5185\u5bb9 /** * @arg @attention @author @brief @bug * @copyright @date @def @defgroup @details * @note @param @private @public @ref * @return @retval @see @todo @version * @warning */ \u5728VSCode\u4e2d\u5207\u6362\u884c\u6ce8\u91ca\u7684\u5feb\u6377\u952e\u662f Ctrl + / \uff0c\u6309\u4e0b\u540e\u5c31\u4f1a\u81ea\u52a8\u6dfb\u52a0\u7a7a\u683c\u3002\u5207\u6362\u5757\u6ce8\u91ca\u7684\u5feb\u6377\u952e\u662f Alt + Shift + A \uff0c\u6309\u4e0b\u540e\u524d\u540e\u4e5f\u4f1a\u81ea\u52a8\u52a0\u7a7a\u683c\u3002\u6211\u4e00\u822c\u628a\u8fd9\u4e2a\u5feb\u6377\u952e\u6539\u6210 Alt + / \uff0c\u5728\u5de6\u4e0b\u89d2\u9f7f\u8f6e\uff0cKeyBoard Shortcuts(\u952e\u76d8\u5feb\u6377\u952e)\uff0c\u7136\u540e\u641c\u7d22 blockComment \uff0c\u627e\u5230Toogle Block Comment(\u5207\u6362\u5757\u6ce8\u91ca)\uff0c\u70b9\u7b2c\u4e8c\u5217\u7684\u5feb\u6377\u952e\uff0c\u6309\u4e0b\u4f60\u60f3\u8981\u7684\u5feb\u6377\u952e\uff0c\u4fdd\u5b58\u5373\u53ef\u3002\u5982\u679c\u5feb\u6377\u952e\u51b2\u7a81\uff0c\u53ef\u4ee5\u5148\u67e5\u627e\u8fd9\u4e2a\u5feb\u6377\u952e\uff0c\u89e3\u9664\u540e\u518d\u5f55\u5165\u65b0\u7684\u5feb\u6377\u952e\u3002","title":"\u6ce8\u91ca"},{"location":"STM32/C_standard/#_25","text":"\u6587\u4ef6\u6ce8\u91ca\u6807\u51c6, \u5199\u660e\u6587\u4ef6\u540d @file , \u4f5c\u8005 @author , \u7b80\u4ecb @brief , \u7248\u672c @version , \u65e5\u671f @date , \u7248\u6743\u4fe1\u606f\u7b49\u3002\u5efa\u8bae\u4f7f\u7528\u7a7a\u683c\u5bf9\u9f50\uff08\u6309\u4e00\u4e2aTab\u4e3a4\u7a7a\u683c\uff09\uff0c\u770b\u8d77\u6765\u8f83\u4e3a\u6574\u9f50\u3002 \u6ce8\u610f\u7248\u672c\u53f7\u7684\u66f4\u65b0\uff0c\u5bf9\u4e8e\u5f00\u53d1\u521d\u671f\u7684\u7248\u672c\uff0c\u4e3b\u7248\u672c\u53f7\u4f7f\u75280\uff0c\u66f4\u65b0\u526f\u7248\u672c\u53f7\uff1b\u5982\u679c\u662f\u8f83\u4e3a\u7a33\u5b9a\u7684\u53d1\u5e03\u7248\u672c\uff0c\u66f4\u65b0\u4e3b\u7248\u672c\u53f7 /** * @file commune.c * @author Deadline039 * @brief \u901a\u4fe1\u4ee3\u7801 * @version 0.1 * @date 2023-11-05 * @note \u9065\u63a7\u5668\u53d1\u9001\u7684\u6570\u636e\u5e27\u90fd\u4e3a8\u4e2a\u5b57\u8282, \u5f00\u5934\u7edf\u4e00\u4e3a0xFF, \u7ed3\u5c3e\u7edf\u4e00\u4e3a0xCC * -------------------------------------------------------------------- * \u9065\u63a7\u5668\u6570\u636e\u5e27\u683c\u5f0f: * 0xFF, 0xAA(\u6807\u8bc6\u9065\u63a7\u5668), x1, y1, x2, y2, keys, 0xCC * -------------------------------------------------------------------- * \u63e1\u624b\u6570\u636e\u5e27\u683c\u5f0f: * 0xFF, 'h'(\u6807\u8bc6\u63e1\u624b), 'e', 'l', 'l', 'o', 0x00, 0xCC * \u4e3b\u677f\u56de\u590d\u683c\u5f0f * 'O', 'K', 0x00, 0xCC * -------------------------------------------------------------------- * \u53d1\u9001key\u6570\u636e\u5e27\u683c\u5f0f * 0xFF, 0xFE(\u6807\u8bc6key), key, key, key, key, 0x00, 0xCC * -------------------------------------------------------------------- * \u68c0\u67e5\u8fde\u63a5\u6570\u636e\u5e27\u683c\u5f0f * 0xFF, 0xFF(\u6807\u8bc6\u68c0\u9a8c), 0x00, 0x00, 0x00, 0x00, 0x00, 0xCC * \u4e3b\u677f\u56de\u590d\u683c\u5f0f * key, key, key, key, 0x00, 0xCC ******************************************************************************* * CHECK_CONNECT\u5b8f\u7528\u6765\u5b9a\u4e49\u662f\u5426\u8fdb\u884c\u8fde\u63a5\u68c0\u67e5, 0\u4e3a\u4e0d\u4f7f\u7528; 1\u4e3a\u4f7f\u7528 * \u5982\u679c\u4e0d\u4f7f\u7528\u8fde\u63a5\u68c0\u67e5, \u5f00\u673a\u76f4\u63a5\u5411\u4e3b\u677f\u53d1\u9001\u9065\u63a7\u5668\u6570\u636e * * \u5982\u679c\u4f7f\u7528\u8fde\u63a5\u68c0\u67e5, \u4e0a\u7535\u4f1a\u6301\u7eed\u53d1\u9001\u63e1\u624b\u6570\u636e\u5e27, \u7b49\u5f85\u4e3b\u677f\u56de\u590dOK * \u4e3b\u677f\u56de\u590d\u540e, \u5411\u4e3b\u677f\u53d1\u9001\u4e00\u4e2a32\u4f4d\u7684key, \u8fd9\u4e2akey\u662f\u968f\u673a\u751f\u6210\u7684 * \u53d1\u9001\u683c\u5f0f\u5c31\u662fkey\u6570\u636e\u5e27\u683c\u5f0f * * \u9065\u63a7\u5668\u6bcf\u53d1\u900120\u5e27\u9065\u63a7\u5668\u6570\u636e, \u4f1a\u53d1\u9001\u4e00\u4e2a\u68c0\u67e5\u8fde\u63a5\u6570\u636e\u5e27, * \u4e3b\u677f\u5c06key\u53d1\u9001\u7ed9\u9065\u63a7\u5668, \u9065\u63a7\u5668\u8fdb\u884c\u6821\u9a8c. \u5982\u679c\u9519\u8bef, \u63d0\u793a\u8fde\u63a5\u51fa\u9519 */","title":"\u6587\u4ef6\u5934"},{"location":"STM32/C_standard/#_26","text":"\u6ce8\u660e\u7b80\u4ecb @brief , \u53c2\u6570 @param , \u6709\u65f6\u8fd8\u4f7f\u7528 @arg \u6765\u6307\u5b9a\u4f20\u5165\u7684\u53c2\u6570\u503c, \u8fd4\u56de\u503c @retval, @return \u7b49\u3002\u53c2\u6570\u4f5c\u4e3a\u8f93\u5165 [in] \u53ef\u4ee5\u7701\u7565\uff0c\u4f5c\u4e3a\u8f93\u51fa\u9700\u52a0 [out] \uff0cC\u4e0d\u652f\u6301\u5f15\u7528\u53c2\u6570\uff0c\u4e00\u822c\u4e3a\u6307\u9488 \u6bcf\u6761\u5217\u8868\u9879\u76ee\u53ef\u4ee5\u4e0d\u7528\u7a7a\u683c\u5bf9\u9f50\uff0c arg \u4e0e param \u524d\u9519\u5f00\u4e00\u4e2a\u7a7a\u683c\uff0c\u4f46\u662f\u5982\u679c\u4e00\u4e2a\u5217\u8868\u5185\u7684\u5185\u5bb9\u8981\u6362\u884c\uff0c\u5bf9\u9f50\u4e0a\u4e00\u884c\u7684\u5f00\u5934 /** * @brief Starts the TIM Input Capture measurement. \u8fd9\u91cc\u53ef\u4ee5\u4e0d\u4e0e\u4e0b\u9762\u7684retval\u5bf9\u9f50 * @param htim TIM Input Capture handle * @param Channel TIM Channels to be enabled. This parameter can be one of the * following values: (\u8fd9\u91cc\u6362\u884c\u4e86, \u4e0e\u4e0a\u4e00\u884c\u5f00\u5934\u5bf9\u9f50) * @arg TIM_CHANNEL_1: TIM Channel 1 selected \u5f00\u5934\u4e0e@param\u9519\u5f00\u4e00\u4e2a\u7a7a\u683c * @arg TIM_CHANNEL_2: TIM Channel 2 selected * @arg TIM_CHANNEL_3: TIM Channel 3 selected * @arg TIM_CHANNEL_4: TIM Channel 4 selected * @retval HAL status * @note \u6ce8\u610f12\u884c\u548c13\u884c\u4e4b\u95f4\u4e0d\u5e94\u8be5\u6709\u7a7a\u683c */ HAL_StatusTypeDef HAL_TIM_IC_Start(TIM_HandleTypeDef *htim, uint32_t Channel) { uint32_t tmpsmcr; /* \u53cc\u659c\u6760\u4ec5\u5728\u6ce8\u91ca\u4ee3\u7801\u65f6\u4f7f\u7528 */ // HAL_TIM_ChannelStateTypeDef channel_state = TIM_CHANNEL_STATE_GET(htim, Channel); // HAL_TIM_ChannelStateTypeDef complementary_channel_state = TIM_CHANNEL_N_STATE_GET(htim, Channel); /* Check the parameters */ assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel)); ... /* Return function status */ return HAL_OK; } /** * @brief \u6839\u636e\u4f20\u611f\u5668\u6570\u636e\u83b7\u53d6\u5b9e\u9645\u4f4d\u7f6e * * @param[out] real_x x\u4f4d\u7f6e\u6307\u9488 * @param[out] real_y y\u4f4d\u7f6e\u6307\u9488 */ void GetPosition(double* real_x, double* real_y) { *real_x = ...; *real_y = ...; } \u5982\u679c\u51fd\u6570\u4f7f\u7528\u7684\u662f\u6807\u51c6\u7684doxygen\u6ce8\u91ca\u7684\uff0c\u5728vscode\u91cc\u9f20\u6807\u653e\u5230\u4e00\u4e2a\u51fd\u6570\u4e0a\u60ac\u505c\u4f1a\u663e\u793a\u76f8\u5173\u4fe1\u606f\uff0c\u8f93\u5165\u53c2\u6570\u65f6\u4e5f\u4f1a\u63d0\u793a\u73b0\u5728\u8f93\u5165\u7684\u662f\u4ec0\u4e48\u53c2\u6570\u3002\u7a7a\u683c\u4e0d\u5f71\u54cd\u8fd9\u91cc\u5c55\u793a\u7684\u5185\u5bb9\uff0cvscode\u4f1a\u81ea\u52a8\u5ffd\u7565\u7a7a\u683c\u3002\u6ce8\u610f\u6587\u4ef6\u7f16\u7801\u4e3aUTF-8\u3002","title":"\u51fd\u6570"},{"location":"STM32/C_standard/#_27","text":"\u7ed3\u6784\u4f53\u524d\u6ce8\u660e\u7b80\u4ecb\uff0c\u6bcf\u4e2a\u6210\u5458\u90fd\u8bf4\u660e\u4f5c\u7528\uff0c\u8bf4\u660e\u6210\u5458\u4f5c\u7528\u65f6\u4f7f\u7528 /*!< xx */ /** * @brief TIM Clear Input Configuration Handle Structure definition */ typedef struct { uint32_t ClearInputState; /*!< TIM clear Input state This parameter can be ENABLE or DISABLE */ uint32_t ClearInputSource; /*!< TIM clear Input sources This parameter can be a value of @ref TIM_ClearInput_Source */ uint32_t ClearInputPolarity; /*!< TIM Clear Input polarity This parameter can be a value of @ref TIM_ClearInput_Polarity */ uint32_t ClearInputPrescaler; /*!< TIM Clear Input prescaler This parameter must be 0: When OCRef clear feature is used with ETR source, ETR prescaler must be off */ uint32_t ClearInputFilter; /*!< TIM Clear Input filter This parameter can be a number between Min_Data = 0x0 and Max_Data = 0xF */ } TIM_ClearInputConfigTypeDef;","title":"\u7ed3\u6784\u4f53"},{"location":"STM32/C_standard/#_28","text":"\u5f53\u4e00\u6bb5\u4ee3\u7801\u662f\u4e00\u4e2a\u6a21\u5757\u65f6\u53ef\u4ee5\u7528 defgroup \uff1a /** * @defgroup Moudle 1 * @{ */ ... /** * @} */ /* \u4e5f\u53ef\u4ee5\u52a0\u4e00\u5806*\u6765\u533a\u5206, \u4e00\u884c80\u4e2a\u5b57\u7b26 */ /******************************************************************************* * @defgroup Moudle 2 * @{ */ ... /** * @} ******************************************************************************/","title":"\u6a21\u5757"},{"location":"STM32/C_standard/#_29","text":"\u9884\u7f16\u8bd1\u547d\u4ee4\u7684 #else, #endif \u5fc5\u987b\u5728\u884c\u672b\u6ce8\u91ca #if \u7684\u6761\u4ef6\uff0c\u8981\u4e0d\u7136\u4e00\u5806 #endif \u66f4\u6839\u672c\u4e0d\u77e5\u9053\u662f\u54ea\u91cc\u7684 \u6839\u636e\u5b9e\u9645\u60c5\u51b5\u9002\u5f53\u88c1\u526a\uff0c\u53ca\u65f6\u6e05\u7406\u672a\u4f7f\u7528\u7684\u51fd\u6570\u548c\u53d8\u91cf \u5b8f\u5b9a\u4e49\u5982\u679c\u6709 #if \u5d4c\u5957\uff0c\u4e0d\u7f29\u8fdb","title":"\u9884\u7f16\u8bd1\u547d\u4ee4"},{"location":"STM32/C_standard/#_30","text":"\u4e0d\u8981\u8fc7\u5ea6\u6ce8\u91ca\uff0c\u6bd4\u5982 key = key_scan(0); /* \u626b\u63cf\u6309\u952e */ \uff0c\u8fd9\u4e2a\u51fd\u6570\u4e00\u773c\u5c31\u77e5\u9053\u662f\u626b\u63cf\u6309\u952e\u7684\uff0c\u6ca1\u5fc5\u8981\u6ce8\u91ca\u3002\u6b63\u70b9\u539f\u5b50\u7684\u6ce8\u91ca\u662f\u4e3a\u521d\u5b66\u8005\u8003\u8651\u7684\uff0c\u6240\u4ee5\u6bcf\u884c\u4ee3\u7801\u57fa\u672c\u90fd\u4f1a\u6ce8\u91ca\u4e00\u4e0b\u3002 \u4ee3\u7801\u91cc\u4e0d\u8981\u5199\u65e0\u610f\u4e49\u7684\u6ce8\u91ca\u3002\u4e0d\u8981\u628a\u6ce8\u91ca\u5199\u6210\u82f1\u8bed\u53e5\u5b50\u7684\u7ffb\u8bd1\uff0c\u6211\u4eec\u5e94\u8be5\u7ffb\u8bd1\u7684\u662f\u4ee3\u7801\u4e2d\u7684\u903b\u8f91\uff0c\u800c\u4e0d\u662f\u7ffb\u8bd1\u5355\u8bcd\uff0c\u8fd9\u79cd\u6ce8\u91ca\u6ca1\u6709\u610f\u4e49 \u5bf9\u4e8e\u51fd\u6570\u6216\u8005\u6587\u4ef6\u6765\u8bf4\uff0c\u6ce8\u91ca\u7684\u4e3b\u8981\u76ee\u6807\u662f\u8bb2\u6e05\u695a\u8fd9\u90e8\u5206\u4ee3\u7801\u6709\u4ec0\u4e48\u529f\u80fd\uff0c\u5982\u4f55\u4f7f\u7528\uff0c\u6700\u597d\u5c06\u4ee3\u7801\u903b\u8f91\u7684\u89e3\u91ca\u653e\u5230\u5177\u4f53\u7684\u4ee3\u7801\u4e2d\uff0c\u53ef\u4ee5\u7b80\u5355\u8bf4\u4e00\u4e0b\u8fd0\u884c\u6d41\u7a0b\u3002\u51fd\u6570\u3001\u6587\u4ef6\u7684\u529f\u80fd\u6ce8\u91ca\u53eb brief \uff0c\u800c\u4e0d\u662f details \u6ce8\u91ca\u5173\u952e\u90e8\u5206\u548c\u96be\u4ee5\u7406\u89e3\u7684\u70b9\u5fc5\u987b\u6ce8\u91ca\uff0c\u6bd4\u5982\u64cd\u4f5c\u5bc4\u5b58\u5668\u7684\u4ee3\u7801\uff0c\u5982\u679c\u4e0d\u67e5\u9605\u624b\u518c\u57fa\u672c\u770b\u4e0d\u61c2 \u6ce8\u610f\u6ce8\u91ca\u8981\u548c\u4ee3\u7801\u76f8\u7b26\uff0c\u4e0d\u8981\u590d\u5236\u7c98\u8d34\u7684\u65f6\u5019\u4e0d\u6539\u6ce8\u91ca \u6ce8\u91ca\u5e94\u8be5\u5728\u4ee3\u7801\u7684\u4e0a\u4e00\u884c\u6216\u8005\u884c\u672b\uff0c\u4e0d\u5e94\u8be5\u5728\u4e0b\u4e00\u884c\uff0c\u4e5f\u4e0d\u8981\u6709\u7a7a\u884c \u5c1a\u672a\u5b9e\u73b0\u5b8c\u6574\u529f\u80fd\uff0c\u6216\u8005\u9700\u8981\u66f4\u8fdb\u4e00\u6b65\u4f18\u5316\u7684\u4ee3\u7801\uff0c\u5e94\u4f7f\u7528 todo \uff1b\u5982\u679c\u4ee3\u7801\u6709bug\uff0c\u4f7f\u7528 bug \uff0c\u5176\u4ed6tag\u7528\u6cd5\u53c2\u7167doxygen\u5b98\u65b9\u6587\u6863 /* \u6ce8\u91ca\u5e94\u8be5\u5728\u8fd9\u91cc */ event_val |= event_bit; /* \u6216\u8005\u6ce8\u91ca\u5728\u8fd9\u91cc */ /* \u4e0d\u5e94\u8be5\u5728\u8fd9\u91cc\u6ce8\u91ca */ /* \u8fd9\u662f\u8bf4\u660e\u7b2c7\u884c\u4ee3\u7801\u7684\u6ce8\u91ca, \u7b2c6\u884c\u4e0d\u5e94\u8be5\u7a7a */ event_val <<= 1; /** * @todo \u6b64\u5904\u5224\u65ad\u903b\u8f91\u5e94\u8be5\u4f18\u5316 */ if ((event_val & 0x01) && !(event_val & 0x02) || !(event_val & 0x04) && (event_val & 0x08)) { ... } /** * @bug \u8fd9\u91cc\u7684\u65ad\u8a00\u6709\u65f6\u5019\u4f1a\u5931\u6548 */ if (!event_val_assert(event_val)) { ... }","title":"\u6742\u9879"},{"location":"STM32/C_standard/#_31","text":"\u5982\u679c\u6b63\u786e\u5b89\u88c5\u4e86EIDE\u4e14\u6ca1\u6709\u51fa\u9519\uff0c\u90a3\u4e48\u6269\u5c55\u4f1a\u81ea\u52a8\u5b89\u88c5Doxygen Documentation Generator\u6269\u5c55\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u641c\u7d22\u6269\u5c55\u540d\u79f0\u5230\u5546\u5e97\u81ea\u884c\u5b89\u88c5\u3002 \u6211\u4eec\u4e0d\u9700\u8981\u624b\u52a8\u8f93\u5165\u4e0a\u9762\u7684\u4e00\u5806\u4e1c\u897f\uff0c\u6269\u5c55\u4f1a\u81ea\u52a8\u5e2e\u6211\u4eec\u751f\u6210\uff0c\u4e0b\u9762\u5c31\u6765\u6f14\u793a\u4e00\u4e0b\uff1a \u6587\u4ef6\u5934\u6ce8\u91ca\uff1a\u5f53\u6211\u4eec\u5728\u4e00\u4e2a \u65b0\u6587\u4ef6\u7684\u7b2c\u4e00\u884c \u8f93\u5165 /** \u56de\u8f66\uff0c\u5c31\u4f1a\u81ea\u52a8\u5e2e\u6211\u4eec\u751f\u6210\u6587\u4ef6\u5934\u6a21\u677f\uff1a \u51fd\u6570\u6ce8\u91ca\uff1a\u8f93\u5165 /** \u56de\u8f66\uff0c\u6269\u5c55\u4f1a\u81ea\u52a8\u8bc6\u522b\u53c2\u6570\u548c\u8fd4\u56de\u503c\uff0c\u6211\u4eec\u53ea\u7528\u8f93\u5165\u5185\u5bb9\u5c31\u53ef\u4ee5\uff1a \u5f53\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u4e0a\u9762 file, author \u7684\u5185\u5bb9\uff0c\u5177\u4f53\u4f4d\u7f6e\u5982\u4e0b\uff1a","title":"\u81ea\u52a8\u751f\u6210\u6ce8\u91ca"},{"location":"STM32/C_standard/#_32","text":"\u4e3a\u907f\u514d\u540c\u6b65\u4ed3\u5e93\u4ee3\u7801\u65f6\u4ea7\u751f\u4e71\u7801\uff0c\u5bfc\u81f4\u4e00\u4e9b\u4e0d\u5fc5\u8981\u7684\u95ee\u9898\uff0c \u6587\u4ef6\u7f16\u7801\u7edf\u4e00\u4f7f\u7528UTF-8 \u3002\u6b63\u70b9\u539f\u5b50\u7684\u4ee3\u7801\u5168\u90e8\u7528\u7684\u662fGB2312\u3002 \u5982\u679c\u4f7f\u7528GB2312\u7f16\u7801\uff0cvscode\u60ac\u6d6e\u7684\u63d0\u793a\u4f1a\u4e2d\u6587\u4e71\u7801\u3002\u5c31\u6bd4\u5982\u521a\u624d\u7684\u51fd\u6570\u63d0\u793a \u3002 \u4e0b\u9762\u7684Gif\u6f14\u793a\u4e86\u5982\u4f55\u4fee\u6539\u7f16\u7801\u3002 \u5982\u679c\u6253\u5f00\u6587\u4ef6\u4e2d\u6587\u4e71\u7801\uff0c\u70b9ReOpen With Encoding\u5c1d\u8bd5\u7f16\u7801\u5373\u53ef\uff0c \u5343\u4e07\u4e0d\u8981\u70b9\u6210Save with Encoding\uff0c\u5426\u5219\u53ef\u80fd\u65e0\u6cd5\u590d\u539f\u539f\u672c\u7684\u5185\u5bb9 \u3002 \u63a8\u8350\u5927\u5bb6\u5b89\u88c5GBK to UTF8 for vscode\u6269\u5c55\uff0c\u53ef\u4ee5\u8bc6\u522b\u5230\u5927\u90e8\u5206GBK\u7f16\u7801\u7684\u6587\u4ef6\uff0c\u800c\u4e14\u53ef\u4ee5\u6279\u91cf\u8f6c\u6362\u7f16\u7801\u3002 XCOM\u4e0d\u652f\u6301UTF-8\u7f16\u7801\uff0c\u4e32\u53e3\u8f93\u51fa\u4e2d\u6587\u4f1a\u4e71\u7801\uff0c\u56e0\u6b64\u8fd9\u91cc\u63a8\u8350\u4f7f\u7528\u652f\u6301\u7f16\u7801\u66f4\u591a\uff0c\u529f\u80fd\u66f4\u5f3a\u5927\u7684 COMTool \u3002\u4f7f\u7528\u6559\u7a0b\u89c1 \u6b64\u5904 \u3002","title":"\u6587\u4ef6\u7f16\u7801"},{"location":"STM32/C_standard/#_33","text":"\u6362\u884c\u7b26\u6709\u4e24\u4e2a\uff0c CR(\\r), LF(\\n) \uff0c \u5177\u4f53\u53c2\u89c1\u6b64\u6587\u7ae0 \u3002\u7b80\u5355\u6765\u8bf4\uff0c\u5728\u6253\u5b57\u673a\u65f6\u4ee3\uff0c\u8ba1\u7b97\u673a\u8fd8\u4e0d\u80fd\u505a\u6587\u6863\u5904\u7406\u7684\u65f6\u5019\uff0c\u60f3\u8981\u6362\u884c\u8fdb\u5165\u4e0b\u4e00\u4e2a\u6bb5\u843d\u5fc5\u987b\u5148\u6309\u4e00\u4e0b\u56de\u8f66\uff08Carriage Return, CR\uff09\u8ba9\u6253\u5b57\u673a\u7684\u6253\u5370\u5934\u56de\u5230\u6700\u5de6\u8fb9\uff08\u5199\u5b57\u90fd\u662f\u4ece\u5de6\u5f80\u53f3\u5199\uff0c\u6bb5\u672b\u5c31\u662f\u6700\u53f3\u8fb9\uff09\uff0c\u7136\u540e\u518d\u6362\u884c\uff08Line Feed, LF\uff09\u3002\u4f46\u662f\u5230\u4e86\u8ba1\u7b97\u673a\u65f6\u4ee3\u4e0d\u9700\u8981\u56de\u8f66\u6362\u884c\u4e86\uff0c\u53ea\u9700\u8981\u6362\u884c\u7b26\u5c31\u591f\u4e86\u3002\u4f46\u5fae\u8f6f\u4e3a\u4e86\u4fdd\u7559\u5386\u53f2\u4e60\u60ef\uff0cMS-DOS\u548cWindows\u7684\u9ed8\u8ba4\u6362\u884c\u7b26\u90fd\u662f CRLF \uff1bLinux\u548cUnix\u4e3a\u4e86\u65b9\u4fbf\u4f7f\u7528\u7684\u662f LF \uff0cmacOS\u4e0a\u4e5f\u7528\u7684\u662f LF \u3002 \u7531\u4e8e\u6211\u4eec\u4e3b\u8981\u5728Windows\u4e0b\u505a\u5f00\u53d1\uff0c\u56e0\u6b64 \u6362\u884c\u7b26\u7edf\u4e00\u7528 CRLF \u3002 \u70b9\u53f3\u4e0b\u89d2\u7684CRLF\u5c31\u53ef\u4ee5\u66f4\u6539\u6bb5\u672b\u6362\u884c\u7b26\u3002","title":"\u6bb5\u672b\u6362\u884c\u7b26"},{"location":"STM32/HAL_LL_lib/","text":"HAL\u79f0\u4e4b\u4e3aHardware Abstraction Layer\uff0c\u786c\u4ef6\u62bd\u8c61\u5c42\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5382\u5546\u628a\u786c\u4ef6\u7684\u6240\u6709\u5e95\u5c42\u5bc4\u5b58\u5668\u64cd\u4f5c\u5c01\u88c5\u6210\u5404\u79cdAPI(Application Programmable Interface)\u548c\u62bd\u8c61\u7c7b\uff08\u7528\u7ed3\u6784\u4f53\u5b9e\u73b0\u7684\u7c7b\u4f3cClass\u64cd\u4f5c\uff09\uff0c\u4f9b\u4e0a\u5c42\u5e94\u7528\u8c03\u7528\u3002\u4e0a\u5c42\u5f00\u53d1\u65e0\u9700\u5173\u5fc3\u5e95\u5c42\u662f\u5982\u4f55\u5b9e\u73b0\u7684\uff0c\u53ea\u9700\u8981\u8c03\u7528\u5b83\u4eec\u5373\u53ef\u3002 HAL\u4e0d\u4ec5\u662fSTM32\u4e2d\u7684\u4e00\u4e2a\u5e93\uff0c\u800c\u4e14\u8fd8\u662f\u64cd\u4f5c\u7cfb\u7edf\u7684\u57fa\u672c\u7ec4\u6210\u90e8\u5206\u3002 \u5b89\u5353\u7cfb\u7edf\u7684\u67b6\u6784\uff0cHAL\u662f\u4ec5\u6b21\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u7684Layer\uff0c\u7ba1\u7406\u5404\u79cd\u5982\u97f3\u9891\u3001\u84dd\u7259\u3001\u76f8\u673a\u3001\u4f20\u611f\u5668\u3001\u7f51\u7edc\u7b49\u5e95\u5c42\u786c\u4ef6 ST\u5b98\u65b9\u7684HAL\u5e93\u53ef\u4ece\u6b64\u5904\u4e0b\u8f7d STM32F1: https://github.com/STMicroelectronics/stm32f1xx_hal_driver/ STM32F4: https://github.com/STMicroelectronics/stm32f4xx_hal_driver/ STM32H7: https://github.com/STMicroelectronics/stm32h7xx_hal_driver/ HAL\u5e93\u4e2d\u6709\u51e0\u4e2a\u6bd4\u8f83\u57fa\u7840\u7684\u6982\u5ff5\uff0c\u53ef\u80fd\u4e4b\u524d\u90fd\u662f\u7a00\u91cc\u7cca\u6d82\u7528\uff0c\u4f46\u662f\u73b0\u5728\u5fc5\u987b\u8981\u641e\u6e05\u695a\u3002 \u53e5\u67c4\uff1a \u53e5\u67c4 \u5728\u7f16\u7801\u6807\u51c6\u4e2d\u6211\u63d0\u5230\u4e00\u70b9\uff0c\u4e0d\u80fd\u901a\u8fc7\u53e5\u67c4\u6307\u9488\u548c\u5730\u5740\u662f\u5426\u76f8\u7b49\u6765\u5224\u65ad\u662f\u90a3\u4e2a\u5916\u8bbe\u7684\u53e5\u67c4\u3002\u867d\u7136\u5728HAL\u5e93\u4e2d\u662f\u901a\u8fc7\u6307\u9488\u4f20\u9012\u7684\uff0c\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u90fd\u662f\u76f8\u7b49\u7684\uff0c\u4f46\u662f\u5982\u679c\u5728\u67d0\u4e9b\u51fd\u6570\u4e2d\u4f20\u9012\u7684\u662f\u53e5\u67c4\u53d8\u91cf\u800c\u4e0d\u662f\u6307\u9488\uff0c\u90a3\u4e48\u7f16\u8bd1\u5668\u4f1a\u91cd\u65b0\u7ed9\u53c2\u6570\u91cd\u65b0\u5206\u914d\u4e00\u4e2a\u7ed3\u6784\u4f53\u53d8\u91cf\u3002\u8fd9\u5c31\u4f1a\u5bfc\u81f4\u4f20\u9012\u7684\u53c2\u6570\u53d8\u91cf\u5730\u5740\u4e0e\u539f\u53e5\u67c4\u5730\u5740\u4e0d\u4e00\u81f4\u3002\u4ee5\u4e0b\u9762\u7684\u4ee3\u7801\u4e3e\u4f8b\uff1a #include \"stdint.h\" #include \"stdio.h\" #define SDIO1 0x00000000U typedef struct { uint32_t Instance; uint32_t ClockEdge; } SDIO_HandleTypeDef; void SDIO_Init(SDIO_HandleTypeDef hsdio1); void SDIO_MspInit(SDIO_HandleTypeDef *hsdio1); SDIO_HandleTypeDef g_sdio_handler; int main(int argc, char const *argv[]) { g_sdio_handler.Instance = SDIO1; SDIO_Init(g_sdio_handler); return 0; } void SDIO_Init(SDIO_HandleTypeDef hsdio1) { SDIO_MspInit(&hsdio1); } void SDIO_MspInit(SDIO_HandleTypeDef *hsdio2) { if (hsdio2->Instance == SDIO1) { printf(\"SDIO_Handler->Instance == SDIO1\\n\"); } if (hsdio2 == &(g_sdio_handler)) { printf(\"sdio address is g_sdio_handler\\n\"); } else { printf(\"hsdio=0x%p, g_sdio_handler=0x%p\\n\", (void *)hsdio2, (void *)(&g_sdio_handler)); } } \u53ef\u4ee5\u81ea\u5df1\u8fd0\u884c\u4e00\u4e0b\u7ed3\u679c\u662f\u4ec0\u4e48\u3002\u8fd9\u91cc\u6211\u622a\u53d6\u4e86 SDIO \u53e5\u67c4\u7ed3\u6784\u4f53\u7684\u4e00\u90e8\u5206\uff0c\u5e76\u58f0\u660e\u4e86\u4e24\u4e2a\u51fd\u6570\uff1a\u5176\u4e2d SDIO_Init() \u51fd\u6570\u4f20\u5165\u7684\u662f\u53e5\u67c4\u53d8\u91cf\uff0c SDIO_MspInit() \u4f20\u5165\u7684\u662f\u53e5\u67c4\u6307\u9488\u3002 SDIO_Init() \u51fd\u6570\u4f1a\u8c03\u7528 SDIO_MspInit() \u3002 \u9996\u5148 main \u8c03\u7528 SDIO_Init() \u51fd\u6570\uff0c\u4f20\u5165\u53e5\u67c4\u53d8\u91cf\uff0c\u7531\u4e8e\u4f20\u5165\u7684\u662f\u53d8\u91cf\uff0c\u8fd9\u5c31\u5bfc\u81f4\u5728 SDIO_Init \u51fd\u6570\u4e2d\u7684 hsdio1 \u4e0e g_sdio_handler \u7684\u5730\u5740\u5df2\u7ecf\u4e0d\u76f8\u7b49\u4e86\uff0c\u7f16\u8bd1\u5668\u7ed9 hsido1 \u91cd\u65b0\u5206\u914d\u4e86\u4e00\u5757\u5185\u5b58\u7a7a\u95f4\u3002 \u968f\u540e\u5728 SDIO_MspInit() \u51fd\u6570\u4e2d\uff0c\u7b2c\u4e00\u4e2a if \u5224\u65ad\u7684\u662f Instance \u6210\u5458\u662f\u5426\u76f8\u7b49\uff0c\u90a3\u4e48\u7ed3\u679c\u663e\u800c\u6613\u89c1\u662f\u76f8\u7b49\u7684\u3002\u4f46\u7b2c\u4e8c\u4e2a if \u5c31\u4e0d\u4e00\u6837\u4e86\uff0c\u4e0a\u9762\u8bf4\u8fc7\u4e86\uff0c\u7f16\u8bd1\u5668\u7ed9 hsdio1 \u91cd\u65b0\u5206\u914d\u4e86\u4e00\u5757\u5185\u5b58\u7a7a\u95f4\uff0c\u4e0e g_sdio_handler \u7684\u5730\u5740\u80af\u5b9a\u4e0d\u76f8\u7b49\u3002 \u5c31\u7b97\u53c2\u6570\u4f20\u5165\u7684\u4e0d\u662f\u53e5\u67c4\u53d8\u91cf\uff0c\u4e00\u4e9b\u7b2c\u4e09\u65b9\u5e93\u6216\u8005\u81ea\u5df1\u5199\u7684\u4ee3\u7801\u53ef\u80fd\u4f1a\u7528 malloc \u4e4b\u7c7b\u7684\u51fd\u6570\u91cd\u65b0\u5206\u914d\u53e5\u67c4\u5185\u5b58\u7a7a\u95f4\uff0c\u7136\u540e\u4f20\u5165\u4e0b\u4e00\u4e2a\u51fd\u6570\uff0c\u8fd9\u6837\u4e00\u6765\u4f9d\u8d56\u53d8\u91cf\u5730\u5740\u6765\u5224\u65ad\u5916\u8bbe\u53e5\u67c4\u5c31\u663e\u5f97\u4e0d\u53ef\u9760\u4e86\u3002\u56e0\u6b64\u5728HAL\u5e93\u4e2d\u7684 MspInit, Callback \u4e4b\u7c7b\u9700\u8981\u53e5\u67c4\u7684\u51fd\u6570\u6700\u597d\u4f7f\u7528 Instance \u6210\u5458\u5224\u65ad\uff0c\u4e0d\u8981\u4f7f\u7528\u5730\u5740\u5224\u65ad\u3002","title":"HAL LL lib"},{"location":"STM32/HAL_LL_lib/#_1","text":"\u5728\u7f16\u7801\u6807\u51c6\u4e2d\u6211\u63d0\u5230\u4e00\u70b9\uff0c\u4e0d\u80fd\u901a\u8fc7\u53e5\u67c4\u6307\u9488\u548c\u5730\u5740\u662f\u5426\u76f8\u7b49\u6765\u5224\u65ad\u662f\u90a3\u4e2a\u5916\u8bbe\u7684\u53e5\u67c4\u3002\u867d\u7136\u5728HAL\u5e93\u4e2d\u662f\u901a\u8fc7\u6307\u9488\u4f20\u9012\u7684\uff0c\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u90fd\u662f\u76f8\u7b49\u7684\uff0c\u4f46\u662f\u5982\u679c\u5728\u67d0\u4e9b\u51fd\u6570\u4e2d\u4f20\u9012\u7684\u662f\u53e5\u67c4\u53d8\u91cf\u800c\u4e0d\u662f\u6307\u9488\uff0c\u90a3\u4e48\u7f16\u8bd1\u5668\u4f1a\u91cd\u65b0\u7ed9\u53c2\u6570\u91cd\u65b0\u5206\u914d\u4e00\u4e2a\u7ed3\u6784\u4f53\u53d8\u91cf\u3002\u8fd9\u5c31\u4f1a\u5bfc\u81f4\u4f20\u9012\u7684\u53c2\u6570\u53d8\u91cf\u5730\u5740\u4e0e\u539f\u53e5\u67c4\u5730\u5740\u4e0d\u4e00\u81f4\u3002\u4ee5\u4e0b\u9762\u7684\u4ee3\u7801\u4e3e\u4f8b\uff1a #include \"stdint.h\" #include \"stdio.h\" #define SDIO1 0x00000000U typedef struct { uint32_t Instance; uint32_t ClockEdge; } SDIO_HandleTypeDef; void SDIO_Init(SDIO_HandleTypeDef hsdio1); void SDIO_MspInit(SDIO_HandleTypeDef *hsdio1); SDIO_HandleTypeDef g_sdio_handler; int main(int argc, char const *argv[]) { g_sdio_handler.Instance = SDIO1; SDIO_Init(g_sdio_handler); return 0; } void SDIO_Init(SDIO_HandleTypeDef hsdio1) { SDIO_MspInit(&hsdio1); } void SDIO_MspInit(SDIO_HandleTypeDef *hsdio2) { if (hsdio2->Instance == SDIO1) { printf(\"SDIO_Handler->Instance == SDIO1\\n\"); } if (hsdio2 == &(g_sdio_handler)) { printf(\"sdio address is g_sdio_handler\\n\"); } else { printf(\"hsdio=0x%p, g_sdio_handler=0x%p\\n\", (void *)hsdio2, (void *)(&g_sdio_handler)); } } \u53ef\u4ee5\u81ea\u5df1\u8fd0\u884c\u4e00\u4e0b\u7ed3\u679c\u662f\u4ec0\u4e48\u3002\u8fd9\u91cc\u6211\u622a\u53d6\u4e86 SDIO \u53e5\u67c4\u7ed3\u6784\u4f53\u7684\u4e00\u90e8\u5206\uff0c\u5e76\u58f0\u660e\u4e86\u4e24\u4e2a\u51fd\u6570\uff1a\u5176\u4e2d SDIO_Init() \u51fd\u6570\u4f20\u5165\u7684\u662f\u53e5\u67c4\u53d8\u91cf\uff0c SDIO_MspInit() \u4f20\u5165\u7684\u662f\u53e5\u67c4\u6307\u9488\u3002 SDIO_Init() \u51fd\u6570\u4f1a\u8c03\u7528 SDIO_MspInit() \u3002 \u9996\u5148 main \u8c03\u7528 SDIO_Init() \u51fd\u6570\uff0c\u4f20\u5165\u53e5\u67c4\u53d8\u91cf\uff0c\u7531\u4e8e\u4f20\u5165\u7684\u662f\u53d8\u91cf\uff0c\u8fd9\u5c31\u5bfc\u81f4\u5728 SDIO_Init \u51fd\u6570\u4e2d\u7684 hsdio1 \u4e0e g_sdio_handler \u7684\u5730\u5740\u5df2\u7ecf\u4e0d\u76f8\u7b49\u4e86\uff0c\u7f16\u8bd1\u5668\u7ed9 hsido1 \u91cd\u65b0\u5206\u914d\u4e86\u4e00\u5757\u5185\u5b58\u7a7a\u95f4\u3002 \u968f\u540e\u5728 SDIO_MspInit() \u51fd\u6570\u4e2d\uff0c\u7b2c\u4e00\u4e2a if \u5224\u65ad\u7684\u662f Instance \u6210\u5458\u662f\u5426\u76f8\u7b49\uff0c\u90a3\u4e48\u7ed3\u679c\u663e\u800c\u6613\u89c1\u662f\u76f8\u7b49\u7684\u3002\u4f46\u7b2c\u4e8c\u4e2a if \u5c31\u4e0d\u4e00\u6837\u4e86\uff0c\u4e0a\u9762\u8bf4\u8fc7\u4e86\uff0c\u7f16\u8bd1\u5668\u7ed9 hsdio1 \u91cd\u65b0\u5206\u914d\u4e86\u4e00\u5757\u5185\u5b58\u7a7a\u95f4\uff0c\u4e0e g_sdio_handler \u7684\u5730\u5740\u80af\u5b9a\u4e0d\u76f8\u7b49\u3002 \u5c31\u7b97\u53c2\u6570\u4f20\u5165\u7684\u4e0d\u662f\u53e5\u67c4\u53d8\u91cf\uff0c\u4e00\u4e9b\u7b2c\u4e09\u65b9\u5e93\u6216\u8005\u81ea\u5df1\u5199\u7684\u4ee3\u7801\u53ef\u80fd\u4f1a\u7528 malloc \u4e4b\u7c7b\u7684\u51fd\u6570\u91cd\u65b0\u5206\u914d\u53e5\u67c4\u5185\u5b58\u7a7a\u95f4\uff0c\u7136\u540e\u4f20\u5165\u4e0b\u4e00\u4e2a\u51fd\u6570\uff0c\u8fd9\u6837\u4e00\u6765\u4f9d\u8d56\u53d8\u91cf\u5730\u5740\u6765\u5224\u65ad\u5916\u8bbe\u53e5\u67c4\u5c31\u663e\u5f97\u4e0d\u53ef\u9760\u4e86\u3002\u56e0\u6b64\u5728HAL\u5e93\u4e2d\u7684 MspInit, Callback \u4e4b\u7c7b\u9700\u8981\u53e5\u67c4\u7684\u51fd\u6570\u6700\u597d\u4f7f\u7528 Instance \u6210\u5458\u5224\u65ad\uff0c\u4e0d\u8981\u4f7f\u7528\u5730\u5740\u5224\u65ad\u3002","title":"\u53e5\u67c4"},{"location":"STM32/arm_toolchain/","text":"\u8fd9\u91cc\u7684\u5185\u5bb9\u53ef\u4ee5\u63d0\u9ad8\u81ea\u5df1\u5d4c\u5165\u5f0f\u5f00\u53d1\u7684\u6c34\u5e73\u3002\u5f53\u7136\u8981\u662f\u6ca1\u5174\u8da3\u770b\u53ef\u4ee5\u76f4\u63a5\u8df3\u5230\u4e0b\u9762\u7684ARM Compiler\u7684\u524d\u56db\u90e8\u5206\uff08\u5b89\u88c5AC5\u7f16\u8bd1\u5668\u3001\u5347\u7ea7AC6\u7f16\u8bd1\u5668\u3001EIDE\u914d\u7f6eARM Compiler\u548cAC6\u6c47\u7f16\u5668\u8bf4\u660e\uff09\u3002 Template\u91cc\u7684\u8b66\u544a\u7b49\u7ea7\u662f\u6bd4\u8f83\u9ad8\u7684\uff0c\u7f16\u8bd1\u4f1a\u6709\u8f83\u591a\u7684\u8b66\u544a\uff0c\u6211\u53ea\u5173\u95ed\u4e86\u4e00\u4e9b\u4e0d\u592a\u5e38\u7528\u7684\u8b66\u544a\u3002\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\u3001\u53d8\u91cf\u672a\u521d\u59cb\u5316\u3001\u53d8\u91cf\u6ca1\u6709\u4f7f\u7528\u3001\u6ca1\u6709\u8fd4\u56de\u503c\u3001\u6ca1\u6709\u5b8f\u5b9a\u4e49\uff0c\u90fd\u4f1a\u62a5\u8b66\u544a\u3002 \u8b66\u544a\u662f\u5e2e\u52a9\u6211\u4eec\u68c0\u67e5\u4ee3\u7801\u6f5c\u5728\u9519\u8bef\u7684\uff0c\u4e0d\u8981\u5ffd\u89c6\u8fd9\u4e9b\u8b66\u544a \uff0c\u6709\u65f6\u5019\u65e0\u6cd5\u89e3\u51b3\u7684\u9634\u95f4\u95ee\u9898\u5f80\u5f80\u5c31\u5728\u8fd9\u91cc\u3002 ARM Compiler Download\uff1a https://developer.arm.com/Tools%20and%20Software/Arm%20Compiler%20for%20Embedded AC5 Documents\uff1a https://developer.arm.com/documentation/dui0472/m AC6 Documents & Release Info: https://developer.arm.com/documentation/100748/0621?lang=en ARM Embedded GNU Toolchain Download: https://developer.arm.com/downloads/-/gnu-rm GCC Documents: https://gcc.gnu.org/onlinedocs/gcc-8.3.0/gcc/ CMSIS\u5bf9\u7f16\u8bd1\u5668\u7684\u517c\u5bb9 STM32\u4e4b\u6240\u4ee5\u517c\u5bb9\u5404\u5bb6\u7684\u7f16\u8bd1\u5668\uff0c\u662f\u56e0\u4e3aCMSIS\u5df2\u7ecf\u5904\u7406\u597d\u4e86\u7f16\u8bd1\u5668\u7684\u517c\u5bb9\u3002 \u5728ST\u7684CMSIS\u4e2d\uff0c\u6709\u82e5\u5e72\u4e2a\u9488\u5bf9\u7f16\u8bd1\u5668\u7684\u5934\u6587\u4ef6\u3002\u5728ST\u5b98\u65b9GitHub\u4ed3\u5e93/\u5404\u7cfb\u5217\u7684Cube\u5305/Drivers/CMSIS\u4e2d\u53ef\u4ee5\u627e\u5230ST\u7684CMSIS\u5305\u3002 \u53ef\u4ee5\u770b\u5230\uff0c cmsis_armcc.h \u662fAC5\u7f16\u8bd1\u5668\u5934\u6587\u4ef6\uff0c cmsis_armclang.h \u662fAC6\u7f16\u8bd1\u5668\u7684\u5934\u6587\u4ef6\uff0c cmsis_gcc.h \u662fGCC\u7f16\u8bd1\u5668\u7684\u5934\u6587\u4ef6\uff0c cmsis_iccarm.h \u662fIAR\u7f16\u8bd1\u5668\u7684\u5934\u6587\u4ef6\u3002 cmsis_compiler.h \u5bf9\u7f16\u8bd1\u5668\u8fdb\u884c\u5224\u65ad\uff0c\u7136\u540e\u5305\u542b\u4e0d\u540c\u7684\u5934\u6587\u4ef6\u3002 /* * Arm Compiler 6 (armclang) */ #if defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050) #include \"cmsis_armclang.h\" /* * GNU Compiler */ #elif defined ( __GNUC__ ) #include \"cmsis_gcc.h\" /* * IAR Compiler */ #elif defined ( __ICCARM__ ) #include <cmsis_iccarm.h> ... /* * TI Arm Compiler */ #elif defined ( __TI_ARM__ ) #include <cmsis_ccs.h> ... /* * TASKING Compiler */ #elif defined ( __TASKING__ ) ... /* * COSMIC Compiler */ #elif defined ( __CSMC__ ) #include <cmsis_csm.h> ... /* * Arm Compiler 4/5 */ #elif defined ( __CC_ARM ) #include \"cmsis_armcc.h\" #else #error Unknown compiler. #endif \u5728Drivers/CMSIS/Device/ST/Source/Template\u4e2d\u5305\u542b\u4e86\u5404\u4e2a\u7f16\u8bd1\u5668\u6240\u5bf9\u5e94\u7684 startup \u6c47\u7f16\u6587\u4ef6\u3002\u4e0d\u540c\u7f16\u8bd1\u5668\u7684 startup \u4e0d\u901a\u7528\uff08\u5982\u679cAC6\u4f7f\u7528 armasm \u53ef\u4ee5\u4f7f\u7528AC5\u7684 startup \uff0c\u4f46\u4f1a\u629b\u51fa\u4e00\u4e2awarning\uff0c\u8ba9\u4f60\u4f7f\u7528\u65b0\u8bed\u6cd5\u4ee5\u4f7f\u7528\u65b0\u7684\u6c47\u7f16\u5668\uff09\u3002 Build\u57fa\u7840\u6982\u5ff5 Build\u662f\u6307\u5c06\u6e90\u4ee3\u7801\u901a\u8fc7\u7f16\u8bd1\u3001\u94fe\u63a5\u751f\u6210\u53ef\u6267\u884c\u7a0b\u5e8f\u7684\u8fc7\u7a0b\u3002 \u800c\u5de5\u5177\u94fe\uff08ToolChain\uff09\u5305\u62ec\u7f16\u8bd1\u5668\uff08Compiler\uff09\u3001\u94fe\u63a5\u5668\uff08Linker\uff09\u7b49\u3002\u603b\u7684\u6765\u8bf4\u5c31\u662f\u7528\u4e00\u5957\u5de5\u5177\u628a\u53ef\u4ee5\u628a\u4eba\u80fd\u770b\u61c2(maybe)\u7684\u4ee3\u7801\u8f6c\u6362\u6210\u673a\u5668\u80fd\u770b\u61c2\u7684\u6307\u4ee4\u3002 \u4e0b\u9762\u7684\u56fe\u662fARM\u5de5\u5177\u94fe\u7684\u8fd0\u884c\u6d41\u7a0b\uff0c\u7f16\u8bd1\u5668\u628a\u6bcf\u4e2a .c, .cpp, .s \u6587\u4ef6\u7f16\u8bd1\u6210\u76ee\u6807\u6587\u4ef6 .o \uff0c\u7136\u540e\u7ecf\u8fc7\u94fe\u63a5\u5668\u5c06\u76ee\u6807\u6587\u4ef6\u94fe\u63a5\u4e3a\u53ef\u6267\u884c\u4ee3\u7801\u3002 STM32\u6709\u4e00\u4e2a\u542f\u52a8\u6587\u4ef6 startup \uff0c\u8fd9\u4e2a\u6587\u4ef6\u5b9a\u4e49\u4e86STM32\u4e00\u4e9b\u6700\u57fa\u672c\u7684\u4e1c\u897f\uff0c\u6bd4\u5982\u5185\u5b58\u5806\u6808\uff0c\u4e2d\u65ad\u5411\u91cf\u7b49\u3002\u56e0\u6b64\u9700\u8981\u4e00\u4e2a\u6c47\u7f16\u5668 ASM \u7f16\u8bd1\u6c47\u7f16\u6587\u4ef6\u3002\u5173\u4e8e\u8fd9\u4e2a\u6587\u4ef6\u53c2\u89c1 startup\u542f\u52a8\u6587\u4ef6\u5206\u6790 \u3002 ARM\u5de5\u5177\u94fe\u8fd0\u884c\u6d41\u7a0b \u914d\u7f6e\u597d\u5de5\u5177\u94fe\u5c31\u53ef\u4ee5\u4e0d\u4f9d\u8d56Keil MDK\u5f00\u53d1\u3002\u4e0d\u5c40\u9650\u4e8eWindows\uff0c\u53ef\u4ee5\u5728MacOS\uff0cLinux\u4e0a\u5f00\u53d1\u3002Keil MDK\u53ea\u6709Windows\u7248\u672c\u3002 STM32\u4e3b\u6d41\u7684\u5de5\u5177\u94fe\u6709ARMCC, ARMClang, IAR, GNU for arm\u3002\u5176\u5b9e\u4e3b\u6d41\u7684C/C++\u5de5\u5177\u94fe\u4e5f\u5c31gcc, clang, msvc\u3002gcc\u548cclang\u90fd\u662f\u5f00\u6e90\u7684\u3002msvc\u662f\u5fae\u8f6f\u5bb6\u7684\u4e1c\u897f\uff0c\u4e0d\u53ef\u80fd\u5f00\u6e90\u3002\u6240\u4ee5\u5176\u4ed6\u4eba\u60f3\u505a\u7f16\u8bd1\u5668\u4e5f\u53ea\u80fd\u4ecegcc\u548cclang\u4e0b\u624b\uff0c\u53c8\u4e0d\u53ef\u80fd\u50cf\u82f9\u679c\u90a3\u6837\u62db\u6765Chris Lattner(llvm\u4e4b\u7236\uff0cclang\u5c31\u662f\u57fa\u4e8ellvm\u7684)\u4e00\u6837\u7684\u5927\u795e\u3002 PS\uff1aClang\u662f\u7f16\u8bd1\u5668\u524d\u7aef\uff0c\u8d1f\u8d23\u9884\u5904\u7406\u548cIR\u4ee3\u7801\u751f\u6210\uff0c\u7f16\u8bd1\u3001\u94fe\u63a5\u3001\u4f18\u5316\u90fd\u662f\u4ea4\u7ed9\u540e\u7aefLLVM\u53bb\u5904\u7406\u3002\u800cGCC\u7f16\u8bd1\u5668\u662f\u5c06\u9884\u5904\u7406\u3001\u7f16\u8bd1\u5728\u4e00\u4e2a\u7a0b\u5e8f\u91cc\u5904\u7406\u3002AC6\u4e5f\u4e0d\u662f\u5b8c\u5168\u4f7f\u7528Clang\u7f16\u8bd1\uff0c\u6c47\u7f16\u4ee3\u7801\u5982\u679c\u4f7f\u7528armasm\u662f\u4ea4\u7ed9gcc\u53bb\u5904\u7406\u3002\u5982\u679c\u4f7f\u7528armclang\uff0c\u53ef\u80fd\u9700\u8981GNU\u8bed\u6cd5\u3002\u5728\u6700\u65b0Keil\u7248\u672c\u4e2darmclang\u652f\u6301arm\u8bed\u6cd5\u3002 ARMCC/Clang, IAR\u90fd\u662f\u5546\u4e1a\u8f6f\u4ef6\uff0c\u4e0d\u514d\u8d39\u3002GNU for arm\u662f\u5f00\u6e90\u5de5\u5177\uff0c\u5546\u4e1a\u514d\u8d39\u3002 \u5728\u5355\u7247\u673a\u4e2d\uff0c\u7531\u4e8e\u8ba1\u7b97\u80fd\u529b\u8f83\u4f4e\uff0c\u56e0\u6b64\u6709\u4e9b\u51fd\u6570\u3001\u53d8\u91cf\u5728\u5185\u5b58\u5f53\u4e2d\u7684\u5206\u914d\uff0c\u94fe\u63a5\u5668\u4f1a\u63d0\u524d\u505a\u597d\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u67d0\u4e9b\u51fd\u6570\u548c\u53d8\u91cf\u7684\u5730\u5740\u662f\u56fa\u5b9a\u7684\u3002\u5bf9\u4e8eCortex-M\u5185\u6838\uff0c\u5de5\u5177\u94fe\u90fd\u4f1a\u5e26\u4e00\u4e2aPreFix\uff0c\u53eb\u505a arm-none-eabi- \u3002eabi\u6307\u7684\u662f Embedded Application Binary Interface \u3002 ABI\u662f\u6307Application Binary Interface\uff0c\u4e5f\u5c31\u662f\u4e8c\u8fdb\u5236\u5e94\u7528\u7a0b\u5e8f\u4e4b\u95f4\u7684\u4e00\u4e2a\u63a5\u53e3\u3002\u90a3\u4e48\u4ec0\u4e48\u662f\u4e8c\u8fdb\u5236\u5e94\u7528\u7a0b\u5e8f\u5462\uff1fWindows\u4e0a\u5c31\u662f\u6211\u4eec\u719f\u77e5\u7684exe\uff08exe\u7684\u5168\u79f0\u53eb\u505aexecutable\uff0c\u53ef\u6267\u884c\u7684\uff09\uff0c\u8fd9\u4e2aexe\u5c31\u662f\u7f16\u8bd1\u597d\u7684\u4e8c\u8fdb\u5236\u7a0b\u5e8f\uff0c\u4e5f\u5c31\u662f\u5b83\u53ea\u6709\u673a\u5668\u7801\uff0c\u6ca1\u6709C\u8bed\u8a00\u6216\u8005\u5176\u4ed6\u8bed\u8a00\u7684\u4ee3\u7801\uff0c\u56e0\u6b64\u53eb\u505a\u4e8c\u8fdb\u5236\u3002\u7ed9\u4f60\u4e00\u4e2a\u7a0b\u5e8f\u7684C\u8bed\u8a00\u6e90\u4ee3\u7801\uff0c\u662f\u4e0d\u662f\u8981\u5148\u7f16\u8bd1\u624d\u80fd\u8fd0\u884c\uff0c\u7f16\u8bd1\u51fa\u6765\u7684\u8fd9\u4e2a\u4e1c\u897f\u5c31\u662f\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u3002\u90a3\u4e48Interface\u600e\u4e48\u7406\u89e3\u5462\uff1f\u5f88\u7b80\u5355\uff0c\u5c31\u662fexe\u4e4b\u95f4\u7684\u4e92\u76f8\u8c03\u7528\u3002\u5047\u5982\u6211\u8981\u6253\u5f00Windows\u7684\u8bbe\u7f6e\uff0c\u90a3\u4e48\u6211\u4e0d\u53ef\u80fd\u628aWindows\u7684\u8bbe\u7f6e\u81ea\u5df1\u5199\u4e00\u904d\uff0c\u80af\u5b9a\u662f\u8c03\u7528Windows\u7684\u4e00\u4e2a\u4e1c\u897f\u6765\u6253\u5f00\u8bbe\u7f6e\uff0c\u8c03\u7528\u7684\u901a\u9053\u5c31\u662f\u63a5\u53e3\u3002\u6211\u8c03\u7528\u4e86\u8fd9\u4e2a\u63a5\u53e3\uff0cWindows\u5c31\u628a\u8bbe\u7f6e\u6253\u5f00\u4e86\u3002 PS: Windows\u4e0b\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u9664\u4e86exe\uff0c\u8fd8\u6709\u4e00\u7c7b\u662fdll\uff0cDynamic Link Library\uff0c\u52a8\u6001\u94fe\u63a5\u5e93\u3002dll\u76f8\u8f83\u4e8eexe\u5b83\u662f\u4e00\u4e2a\u5e93\uff0c\u800c\u4e14\u53ef\u4ee5\u591a\u4e2a\u8fdb\u7a0b\u5171\u4eab\u3002\u5728Linux\u6216\u7c7bUnix\u4e0a\uff0cdll\u5c31\u662fso(Share Object)\uff0c\u539f\u7406\u7c7b\u4f3c\u3002 \u62ff\u533b\u9662\u770b\u75c5\u62ff\u836f\u4e3a\u4f8b\u3002\u6211\u662f\u4e00\u4e2aexe\uff0c\u533b\u751f\u4e5f\u662f\u4e00\u4e2aexe\uff0c\u836f\u5e97\u4e5f\u662f\u4e00\u4e2aexe\u3002\u6211\u5148\u53bb\u8c03\u7528\u533b\u751f\u7684\u63a5\u53e3\uff0c\u628a\u6211\u7684\u75c7\u72b6\u4f5c\u4e3a\u53c2\u6570\u4f20\u8fdb\u53bb\uff0c\u533b\u751f\u8fd4\u56de\u4e00\u4e2a\u836f\u65b9\uff1b\u7136\u540e\u6211\u518d\u53bb\u836f\u5e97\u628a\u8fd9\u4e2a\u836f\u65b9\u4f5c\u4e3a\u53c2\u6570\u4f20\u8fdb\u53bb\uff0c\u8fd4\u56de\u4e00\u5806\u836f\u3002\u6211\u4e0d\u53ef\u80fd\u81ea\u5df1\u7ed9\u81ea\u5df1\u770b\u75c5\uff0c\u56e0\u4e3a\u6211\u6ca1\u6709\u770b\u75c5\u7684\u7a0b\u5e8f\uff0c\u800c\u533b\u751f\u6709\u770b\u75c5\u7684\u7a0b\u5e8f\uff0c\u6211\u4eec\u76f4\u63a5\u8c03\u7528\u5c31\u884c\u4e86\uff0c\u4f46\u662f\u6211\u770b\u4e0d\u5230\u533b\u751f\u662f\u600e\u4e48\u5206\u6790\u75c7\u72b6\u7136\u540e\u7ed9\u51fa\u836f\u65b9\u7684\uff0c\u56e0\u4e3a\u533b\u751f\u7684\u7a0b\u5e8f\u662f\u7f16\u8bd1\u8fc7\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u770b\u4e0d\u5230\u6e90\u4ee3\u7801\u3002 \u90a3\u4e48\u8fd8\u6709\u4e00\u4e2a\u4e1c\u897f\u53eb\u505aAPI(Applicaiton Programmable Interface)\uff0c\u5b83\u548cABI\u6709\u4ec0\u4e48\u533a\u522b\u5462\uff1f\u5176\u5b9e\u5c31\u662f\u6e90\u4ee3\u7801\u548c\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u533a\u522b\u3002API\u6709\u70b9\u7c7b\u4f3c\u51fd\u6570\u7684\u8c03\u7528\uff0c\u6709\u51fd\u6570\u540d\uff0c\u53c2\u6570\u5217\u8868\uff1b\u800cABI\u5168\u90e8\u7528\u7684\u662f\u673a\u5668\u7801\uff0c\u662fAPI\u7684\u66f4\u5e95\u5c42\u5b9e\u73b0\u7f62\u4e86\u3002 \u4f46\u662f\u5bf9\u4e8e\u5927\u591a\u6570\u5355\u7247\u673a\u6765\u8bf4\uff0c\u585e\u4e00\u4e2a\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u90fd\u591f\u545b\uff0c\u600e\u4e48\u80fd\u585e\u591a\u4e2a\u3002\u6240\u4ee5\u5bf9\u4e8e\u5355\u7247\u673a\uff0c\u5c31\u4e0d\u9700\u8981ABI\u4e86\u3002 ARM Compiler \u65b0\u7684\u7f16\u8bd1\u5668\u6709\u66f4\u591a\u7684feature\uff0c\u5f53\u7136\u4e5f\u53ef\u80fd\u4f1a\u6709\u66f4\u591a\u7684~~bug~~\uff0c\u4e0d\u8fc7\u8fd8\u662f\u5efa\u8bae\u4f7f\u7528\u6700\u65b0\u7684\u7f16\u8bd1\u5668\u3002\u65b0\u7248\u7684\u7f16\u8bd1\u5668\u6709\u66f4\u4f18\u7684RAM/ROM\u4f18\u5316\uff0c\u7f16\u8bd1\u65f6\u95f4\u66f4\u77ed\u3002\u800c\u4e14AC6\u7f16\u8bd1\u5668\u662f\u57fa\u4e8eLLVM\u67b6\u6784\u7684\uff0c\u7406\u8bba\u4e0a\u4f18\u5316\u4f1a\u66f4\u597d\u3002 \u76ee\u524dARM\u7f16\u8bd1\u5668\u6700\u65b0\u7684\u7248\u672c\u662fARM Compiler 6.21\uff0c\u53d1\u5e03\u4e8e2023\u5e7410\u670811\u65e5\u3002 AC5\u7f16\u8bd1\u5668\u5df2\u7ecf\u505c\u6b62\u66f4\u65b0\uff0c\u6700\u540e\u7248\u672c\u662f5.06\uff0c\u53ea\u652f\u6301\u5230C99\u3002\u56e0\u6b64\u4e0d\u5efa\u8bae\u4f7f\u7528\u6b64\u7f16\u8bd1\u5668\u3002\u5efa\u8bae\u5c06keil\u5347\u7ea7\u5230\u6700\u65b0\u7248\u672c\uff08Keil MDK 5.39\uff0cAC6.21\uff09\u3002\u6253\u5f00Project - Option for Target 'balabala'\uff08\u9b54\u6cd5\u68d2\uff09\uff0cTarget\u9009\u9879\u5361\uff0c\u5728Code Generation\u4e2d\u53ef\u4ee5\u9009\u62e9\u7f16\u8bd1\u5668\u3002 \u5982\u679c\u5217\u8868\u91cc\u6709\u63d0\u793aMissing\uff0c\u8bf4\u660e\u6ca1\u6709\u5b89\u88c5\u8fd9\u4e2a\u7f16\u8bd1\u5668\uff0c\u53c2\u7167\u4e0b\u9762\u7684\u65b9\u6cd5\u5b89\u88c5\u3002 ARM Compiler\u7684\u6700\u65b0\u7248\u672c\u662fAC6.21\u3002Keil MDK5.38\u6240\u5e26\u7684ARM\u7f16\u8bd1\u5668\u662f6.19\u3002\u53ef\u4ee5\u81ea\u884c\u5347\u7ea7ARM\u7f16\u8bd1\u5668\u3002Template\u4ec5\u5728AC6\u7f16\u8bd1\u5668\u4e0b\u53ef\u7f16\u8bd1\u901a\u8fc7\u3002 \u5b89\u88c5AC5\u7f16\u8bd1\u5668 Keil MDK\u4ece5.37\u7248\u672c\u5f00\u59cb\u5c31\u4e0d\u81ea\u5e26AC5\u7f16\u8bd1\u5668\uff0c\u7f16\u8bd1\u4f1a\u63d0\u793a\u4e22\u5931\u7f16\u8bd1\u5668\u3002\u5982\u679c\u8981\u4f7f\u7528AC5\u7f16\u8bd1\u5668\u7f16\u8bd1\u4ee3\u7801\uff0c\u6309\u7167\u4ee5\u4e0b\u65b9\u5f0f\u5b89\u88c5\u3002 \u4e0b\u8f7d\u7f51\u76d8\u91cc\u7684\u201cARMCompiler506_b960.msi\u201d\uff0c\u4e5f\u53ef\u4ee5\u53bb\u5b98\u7f51\u4e0b\u8f7d\uff1a https://developer.arm.com/downloads/view/ACOMP5 \u6ce8\u610f\u8def\u5f84\u8981\u9009\u62e9Keil\u5b89\u88c5\u76ee\u5f55\\ARM\\ARMCC\uff0c\u7136\u540e\u4e00\u8defNext \u5b89\u88c5\u5b8c\u6bd5\u540e\uff0c\u6253\u5f00Keil\uff0c\u4f9d\u6b21\u70b9\u51fb\u56fe\u4e2d\u7684\u5e8f\u53f7\uff0c\u8bbe\u7f6eAC5\u7f16\u8bd1\u5668\u8def\u5f84\u3002\u6ce8\u610f\u7b2c5\u6b65\u662f\u4e0a\u9762\u9009\u62e9\u7684AC5\u7f16\u8bd1\u5668\u8def\u5f84\u3002 \u5347\u7ea7AC6\u7f16\u8bd1\u5668 \u6700\u65b0\u7248Keil MDK 5.39\uff08Update, Dec 2023\uff09\u5df2\u7ecf\u5305\u542bAC6.21\uff0c\u65e0\u9700\u5347\u7ea7\u3002 Keil MDK 5.38\u6240\u5e26\u7684\u7f16\u8bd1\u5668\u7248\u672c\u662fAC6.19\uff0c\u622a\u81f3\u76ee\u524dARM Compiler\u6700\u65b0\u7248\u662f6.21\u3002\u53ef\u4ee5\u6309\u7167\u4e0b\u9762\u7684\u6b65\u9aa4\u5347\u7ea7\u3002 \u4e0b\u8f7d\u7f51\u76d8\u91cc\u7684\u201cArm Compiler for Embedded 6.21.msi\u201d\uff0c\u4e5f\u53ef\u4ee5\u53bb\u5b98\u7f51\u4e0b\u8f7d\uff1a https://developer.arm.com/Tools%20and%20Software/Arm%20Compiler%20for%20Embedded \u6ce8\u610f\u8def\u5f84\u9009\u62e9Keil\u5b89\u88c5\u76ee\u5f55\\ARM\\ARMCLANG\uff0c\u7136\u540e\u4e00\u8defNext \u5b89\u88c5\u5b8c\u6bd5\u540e\uff0c\u5982\u679cKeil\u91cc\u663e\u793aV6.21\u5c31OK\u4e86\u3002 EIDE\u914d\u7f6eARM Compiler EIDE\u9700\u8981\u6307\u5b9a\u7f16\u8bd1\u5668\u548cKeil\u7684\u8def\u5f84\u624d\u53ef\u4ee5\u4f7f\u7528\u7f16\u8bd1\u5668\u3002 \u70b9\u51fb\u4fa7\u8fb9EIDE\u56fe\u6807 \u70b9\u51fbConfigure Toolchain\uff08\u5982\u679c\u6ca1\u6709\u70b9\u4e00\u4e0b\u4e0b\u9762\u7684Operations\u64cd\u4f5c\uff09\uff0c\u8f93\u5165armcc\u5373\u53ef\u51fa\u73b0\u4e0b\u9762\u7684\u51e0\u4e2a\u9009\u9879 \u4f9d\u6b21\u9009\u62e9AC5\u7684\u76ee\u5f55\uff08\u4e0d\u80fd\u9009bin\uff0c\u5728Keil\u5b89\u88c5\u76ee\u5f55\\ARM\\ARMCC\uff09\u3001AC6\u7684\u76ee\u5f55\uff08Keil\u5b89\u88c5\u76ee\u5f55\\ARM\\ARMCLANG\uff09\u3001Keil MDK\u8def\u5f84\uff08UV4.exe\u6216\u8005TOOLS.INI\u6240\u5728\u4f4d\u7f6e\uff0cUV4.exe\u5728Keil\u5b89\u88c5\u76ee\u5f55\\UV4\\UV4.exe\uff0cTOOLS.INI\u5728Keil\u5b89\u88c5\u76ee\u5f55\u4e0b\uff09\u3002\u5982\u679c\u914d\u7f6e\u6b63\u786e\uff0c\u5e94\u8be5\u6709\u4e2a\u5bf9\u52fe\uff0c\u5982\u4e0a\u56fe\u3002\u5982\u679c\u663e\u793a\u00d7\uff0c\u8bf4\u660e\u914d\u7f6e\u9519\u8bef\uff0c\u91cd\u65b0\u9009\u62e9\u8def\u5f84\u3002 \u9009\u62e9Import Project\u5bfc\u5165\u4e00\u4e2aKeil\u5de5\u7a0b\uff0c\u7136\u540e\u5728\u5de6\u4e0b\u89d2\u4f9d\u6b21\u70b9OK\uff0c\u70b9\u51fbBuild\u6309\u94ae\u770b\u7f16\u8bd1\u662f\u5426\u6b63\u5e38\u3002 \u5207\u6362\u7f16\u8bd1\u5668\u5982\u56fe\u6240\u793a\uff1a AC6\u6c47\u7f16\u5668\u8bf4\u660e ARMCC\u9700\u8981ARM\u8bed\u6cd5\u7684\u6c47\u7f16\u6587\u4ef6\uff0cARMClang\u9700\u8981GNU\u8bed\u6cd5\u7684\u6c47\u7f16\u6587\u4ef6\u3002\u5982\u679c\u76f4\u63a5\u5c06AC5\u6362\u6210AC6\u7f16\u8bd1\u65e0\u6cd5\u901a\u8fc7\u3002arm\u6587\u4ef6\u5939\u7684startup\u6c47\u7f16\u6587\u4ef6\u9ed8\u8ba4\u90fd\u662f\u7528\u7684ARM\u8bed\u6cd5\uff0c\u5982\u679c\u4f7f\u7528GNU\u8bed\u6cd5\u9700\u8981\u81ea\u884c\u4fee\u6539\u8def\u5f84\u4f7f\u7528gcc\u91cc\u7684\u6c47\u7f16\u6587\u4ef6\u3002 ARM\u8bed\u6cd5\u7684\u7279\u70b9\u662f\u6ce8\u91ca\u4ee5 ; \u5f00\u5934\uff0c\u6ca1\u6709 . \u6253\u5934\u7684\u6807\u7b7e\uff1bGNU\u8bed\u6cd5\u7684\u7279\u70b9\u662f\u6ce8\u91ca\u65b9\u5f0f\u4e0eC\u8bed\u8a00\u76f8\u540c\uff0c\u4f7f\u7528 .xxx \u4f5c\u4e3a\u6807\u7b7e\u3002 ARM\u8bed\u6cd5\u7684\u6c47\u7f16\u6587\u4ef6\uff1a Heap_Size EQU 0x00004000 AREA HEAP, NOINIT, READWRITE, ALIGN=3 __heap_base Heap_Mem SPACE Heap_Size __heap_limit PRESERVE8 THUMB ; Vector Table Mapped to Address 0 at Reset AREA RESET, DATA, READONLY EXPORT __Vectors EXPORT __Vectors_End EXPORT __Vectors_Size ********************************************************************************* GNU\u8bed\u6cd5\u7684\u6c47\u7f16\u6587\u4ef6\uff1a .section .text.Reset_Handler .weak Reset_Handler .type Reset_Handler, %function Reset_Handler: ldr sp, =_estack /* set stack pointer */ /* Call the clock system initialization function.*/ bl SystemInit /* Copy the data segment initializers from flash to SRAM */ ldr r0, =_sdata ldr r1, =_edata ldr r2, =_sidata movs r3, #0 b LoopCopyDataInit CopyDataInit: ldr r4, [r2, r3] str r4, [r0, r3] adds r3, r3, #4 AC6\u63d0\u4f9b\u4e86\u4e24\u4e2a\u6c47\u7f16\u5668\uff0carm-asm\u548carm-clang\u3002arm-asm\u662f\u4eceARMCC\u4e2d\u79fb\u690d\u8fc7\u6765\u7684\u6c47\u7f16\u5668\uff0carm-clang\u662f\u4eceLLVM\u4e2d\u79fb\u690d\u8fc7\u6765\u7684\u6c47\u7f16\u5668\u3002\u5982\u679c\u4f7f\u7528GNU\u8bed\u6cd5\u7f16\u8bd1ARM\u8bed\u6cd5\u7684\u6c47\u7f16\u6587\u4ef6\uff0c\u4f1a\u629b\u51fa\u975e\u5e38\u591a\u7684\u9519\u8bef\uff1a \u5982\u679c\u5207\u6362\u5b8c\u7f16\u8bd1\u5668\u540e\u6c47\u7f16\u6587\u4ef6\u62a5\u9519\uff0c\u6253\u5f00\u9b54\u6cd5\u68d2 - Asm - Assembler Option\u4e2d\u9009\u62e9Auto Select\u3002 \u5bf9\u4e8eARM Compiler6.11\u4ee5\u4e0b\u7684\u7248\u672c\uff0cARMClang\u4e0d\u652f\u6301ARM\u8bed\u6cd5\u7684\u6c47\u7f16\u6587\u4ef6\uff0cEIDE\u4e3a\u4e86\u517c\u5bb9\u6027\u8003\u8651\u6ca1\u6709\u63d0\u4f9barmclang(Arm Syntax)\u9009\u9879\u3002EIDE\u4e0b\u9762\u7684\u65b9\u6cd5\u914d\u7f6e \u5982\u679c\u4f7f\u7528arm-asm\u7f16\u8bd1\uff0c\u4f1a\u629b\u51fa\u4e00\u4e2a Warning: A1950W: The legacy armasm assembler is deprecated. Consider using the armclang integrated assembler instead. \u610f\u601d\u610f\u601d\u5c31\u662f\u8003\u8651\u5347\u7ea7\u7f16\u8bd1\u5668\uff0c\u5728\u6c47\u7f16\u53c2\u6570\u4e2d\u8f93\u5165 --diag_suppress=1950 \u53ef\u4ee5\u7981\u7528\u8fd9\u4e2a\u8b66\u544a\uff1a \u6ce8\u610f\uff1a\u629b\u51fawarning\u518d\u8003\u8651\u6dfb\u52a0\u53c2\u6570\uff0cKeil\u4e2darmclang\u53ef\u4ee5\u652f\u6301ARM\u8bed\u6cd5\u3002\u5982\u679c\u6ca1\u6709warning\u5c31\u52a0\u7f16\u8bd1\u4f1a\u62a5\u9519 EIDE\u914d\u7f6e Keil\u914d\u7f6e \u7f16\u8bd1\u53c2\u6570 \u6253\u5f00Project - Option for Target 'balabala'\uff08\u9b54\u6cd5\u68d2\uff09\uff0cTarget\u91cc\u7f16\u8bd1\u5668\u9009\u62e9version 6\u6216\u8005V6.xx\uff0cC/C++(AC6)\u9009\u9879\u5361\uff0c\u8fd9\u91cc\u53ef\u4ee5\u914d\u7f6eAC6\u7f16\u8bd1\u5668\u7684\u53c2\u6570\u3002 \u8fd9\u91cc\u4e5f\u5c31\u8bf4\u4e00\u4e0bKeil\u4e2d\u7684\u914d\u7f6e\uff0c\u5177\u4f53\u63a7\u5236\u54ea\u4e9b\u53c2\u6570\u53c2\u89c1\u4e0a\u9762\u7684\u7f16\u8bd1\u5668\u6587\u6863\u3002\u5982\u679c\u9700\u8981\u5199Makefile\u6216Makelist\uff0c\u9700\u8981\u77e5\u9053\u63a7\u5236\u7684\u5230\u5e95\u662f\u54ea\u4e9b\u53c2\u6570\u3002 \u66f4\u591a\u4fe1\u606f\u70b9\u53f3\u4e0b\u89d2Help\u67e5\u9605\u3002 Preprocessor Symbols \u63a7\u5236 -D \u53c2\u6570\u3002 \u9884\u5904\u7406\u3002Define\u662f\u5b8f\u5b9a\u4e49\uff0c\u8ddf\u5728\u4ee3\u7801\u91cc\u4f7f\u7528 #define \u662f\u4e00\u6837\u7684\u3002\u8fd9\u91cc\u7684\u5b8f\u5b9a\u4e49\u4e3b\u8981\u662f\u9488\u5bf9CMSIS\u90e8\u5206\u3002 USE_HAL_DRIVERS \u610f\u601d\u662f\u4f7f\u7528HAL\u5e93\uff0c\u5982\u679c\u662f\u4f7f\u7528HAL\u5e93\u5219\u7f16\u8bd1HAL\u5e93\u7684\u4ee3\u7801\u3002 \u7b2c\u4e8c\u4e2a\uff0c STM32F429xx \u662f\u5177\u4f53\u82af\u7247\u7684\u7cfb\u5217\uff0cST\u7684HAL\u5e93\u662f\u9488\u5bf9F1,F4,H7\u8fd9\u6837\u6574\u4e2a\u82af\u7247\u5bb6\u65cf\u7684\uff0c\u6bcf\u4e2a\u7cfb\u5217\u7684\u5916\u8bbe\u4e5f\u4e0d\u4e00\u6837\u3002\u6bd4\u5982F407\u67096\u4e2a\u4e32\u53e3\uff0c168M\u7684\u5de5\u4f5c\u4e3b\u9891\uff1b\u800cF429\u67098\u4e2a\u4e32\u53e3\uff0c180M\u5de5\u4f5c\u4e3b\u9891\uff0c\u4e0d\u80fd\u7b80\u5355\u7c97\u66b4\u7684\u628aF429\u7684\u4ee3\u7801\u70e7\u5f55\u5230F407\u4e2d\u3002\u56e0\u6b64\u9700\u8981\u5b9a\u4e49\u82af\u7247\u5230\u5e95\u662f\u4ec0\u4e48\u7cfb\u5217\u7684\uff0c\u4ece\u800c\u5b9a\u4e49\u82af\u7247\u7684\u5916\u8bbe\u8d44\u6e90\u3002\u56fe\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u82af\u7247\u4e2d\u7684\u5404\u79cd\u5916\u8bbe\u90fd\u5b9a\u4e49\u5728\u82af\u7247\u7cfb\u5217\u7684\u5934\u6587\u4ef6\u4e2d\u3002 \u8fd9\u4e2a\u5730\u65b9\u4e5f\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e9b\u5b8f\u5b9a\u4e49\u6765\u6307\u5b9a\u7279\u5b9a\u7684\u7f16\u8bd1\u884c\u4e3a\u3002\u6bd4\u5982\u8981\u4f7f\u7528\u65e7\u7248HAL\u5e93\u7684CAN\u4ee3\u7801\uff0c\u6dfb\u52a0 HAL_CAN_LEGACY_MODULE_ENABLED \u5b8f\u5373\u53ef\u3002 Execute-only Code \u63a7\u5236 -mexecute-only \u53c2\u6570\u3002 \u662f\u6307\u5c06\u4ee3\u7801\u6bb5\u653e\u5728ROM\u7684XOM\u533a\u57df\u3002\u8fd9\u90e8\u5206\u533a\u57df\u53ea\u80fd\u7531CPU\u53bb\u6267\u884c\uff0c\u800c\u4e0d\u80fd\u7528\u5176\u4ed6\u624b\u6bb5\u8bfb\u53d6\u3002\u5f00\u542f\u53ef\u4ee5\u4fdd\u62a4\u56fa\u4ef6\u4e0d\u88ab\u7a83\u53d6\u3002 Optimization\uff0c\u4f18\u5316\u7b49\u7ea7 \u63a7\u5236 -O \u53c2\u6570\u3002 \u53ef\u4ee5\u901a\u8fc7\u5b83\u6765\u51cf\u5c11\u4ee3\u7801\u4f53\u79ef\u6216\u8005\u63d0\u9ad8\u8fd0\u884c\u6548\u7387\u3002\u4e0b\u9762\u662fARM\u5bf9\u4f18\u5316\u9009\u62e9\u7684\u5efa\u8bae\uff1a \u76ee\u7684 \u4f18\u5316\u7b49\u7ea7 \u66f4\u5c0f\u7684\u4ee3\u7801\u4f53\u79ef Oz, Omin \u66f4\u5feb\u7684\u8fd0\u884c\u901f\u5ea6 O2, O3, Ofast, Omax \u8c03\u8bd5\u4e14\u6ca1\u6709\u4ee3\u7801\u5197\u4f59 O1 \u6e90\u4ee3\u7801\u4e0e\u751f\u6210\u7684\u6c47\u7f16\u7801\u5bf9\u5e94 O0\uff08\u4e0d\u4f18\u5316\uff09 \u66f4\u77ed\u7684\u6784\u5efa\u65f6\u95f4 O0\uff08\u4e0d\u4f18\u5316\uff09 \u5e73\u8861\u4ee3\u7801\u4f53\u79ef\u548c\u8fd0\u884c\u901f\u5ea6 Os \u901f\u5ea6\u548c\u7a7a\u95f4\u8981\u6709\u6240\u53d6\u820d\uff0c\u6839\u636e\u5b9e\u9645\u9700\u6c42\u9009\u62e9\u65f6\u95f4\u6362\u7a7a\u95f4\u8fd8\u662f\u7a7a\u95f4\u6362\u65f6\u95f4\u3002 O0\uff1a\u5c31\u662f\u4e0d\u4f18\u5316\uff0cC\u4ee3\u7801\u4ec0\u4e48\u6837\u5c31\u8f6c\u6362\u6210\u4ec0\u4e48\u6c47\u7f16\u4ee3\u7801\u3002 O1\uff1a\u76f8\u8f83\u4e8eO0\u4f1a\u542f\u7528\u5185\u8054\u51fd\u6570\uff0c\u4f18\u5316\u4e0d\u4f7f\u7528\u7684\u53d8\u91cf\u548c\u51fd\u6570\u3002 O2\uff1a\u76f8\u8f83\u4e8eO1\u4f18\u5316\u5185\u8054\u51fd\u6570\uff0c\u4f18\u5316\u5faa\u73af\u8bed\u53e5\uff08\u4f18\u5316\u5faa\u73af\u8bed\u53e5\u4e3b\u8981\u901a\u8fc7loop unrolling\uff0c\u5faa\u73af\u5c55\u5f00\uff09\uff0c\u4f18\u5316\u5411\u91cf\u3002 loop unrolling\u5faa\u73af\u5c55\u5f00\u662f\u6307\u5c06\u5faa\u73af\u4ee3\u7801\u5c55\u5f00\uff0c\u6bd4\u5982\u4e0b\u9762\u4ee3\u7801\uff1a /* \u4e0d\u7528\u5faa\u73af\u5c55\u5f00 */ for (int i = 0; i < 5; i++) { printf(\"Hello\"); } /* \u5faa\u73af\u5c55\u5f00\u4e4b\u540e */ printf(\"Hello\"); printf(\"Hello\"); printf(\"Hello\"); printf(\"Hello\"); printf(\"Hello\"); \u7ecf\u8fc7\u5faa\u73af\u5c55\u5f00\u4ee5\u540e\uff0c\u5c11\u4e86\u4e00\u4e2a\u53d8\u91cf i \uff0c\u800c\u4e14\u4e5f\u4e0d\u9700\u8981\u5224\u65ad\u5faa\u73af\u6761\u4ef6\uff0c\u5bf9\u4e8eCPU\u6765\u8bf4\u53ef\u4ee5\u51cf\u5c11\u8d44\u6e90\u5f00\u9500\u3002 O3\uff1a\u76f8\u8f83\u4e8eO2\u8fdb\u4e00\u6b65\u4f18\u5316\u5185\u8054\u51fd\u6570\uff0c\u8fdb\u4e00\u6b65\u5faa\u73af\u5c55\u5f00\uff0c\u4f18\u5316\u5411\u91cf\u3002 Os\uff1aOs\u662f\u4e3a\u4e86\u66f4\u5feb\u7684\u8fd0\u884c\u901f\u5ea6\uff0c\u4ece\u800c\u727a\u7272\u7a7a\u95f4\u3002\u4e0eO2\uff0cO3\u76f8\u8fd1\u3002\u76f8\u8f83\u4e8eO3\u4e3b\u8981\u51cf\u5c11\u5185\u8054\u548c\u5faa\u73af\u5c55\u5f00\u3002 Oz\uff1a\u4e0d\u4f7f\u7528LTO\u7684\u524d\u63d0\u4e0b\u51cf\u5c0f\u4ee3\u7801\u4f53\u79ef\u3002\u4ee5\u65f6\u95f4\u6362\u7a7a\u95f4\u3002\u8fd9\u4e2a\u7ea7\u522b\u4e0b\u4f1a\u6839\u636e\u5185\u8054\u51fd\u6570\u7684\u8c03\u7528\u6b21\u6570\u5224\u65ad\u662f\u5426\u4f7f\u7528\u5185\u8054\u3002\u5982\u679c\u4e00\u4e2a\u51fd\u6570\u8c03\u7528\u6b21\u6570\u8f83\u5c11\uff0c\u5185\u8054\u6bd4\u4e0d\u5185\u8054\u7684\u4f53\u79ef\u66f4\u5c0f\uff0c\u90a3\u4e48\u624d\u4f1a\u4f7f\u7528\u5185\u8054\u3002\u7981\u7528\u5faa\u73af\u5c55\u5f00\uff0c\u5411\u91cf\u4f18\u5316\u3002 while \u4f1a\u53d6\u4ee3 do while \u3002\u4f1a\u542f\u7528Outline\uff0c\u4e5f\u5c31\u662f\u5bfb\u627e\u7f16\u8bd1\u4ee5\u540e\u76f8\u540c\u7684\u6c47\u7f16\u4ee3\u7801\uff0c\u53ea\u5b58\u4e00\u6b21\u3002 Omin\uff1a\u548cOz\u76f8\u8fd1\uff0c\u76f8\u8f83\u4e8eOz\u4f1a\u542f\u7528LTO\uff0c\u5220\u9664\u6ca1\u6709\u4f7f\u7528\u7684\u4ee3\u7801\uff0c\u4f18\u5316\u5185\u5b58\u8bbf\u95ee\u3002\u6d88\u9664\u865a\u51fd\u6570\uff08C++\uff09\u3002 Ofast\uff1a\u4e0eO3\u76f8\u8fd1\uff0c\u76f8\u8f83\u4e8eO3\u53ef\u80fd\u4f1a\u589e\u52a0\u4ee3\u7801\u4f53\u79ef\u3002 Omax\uff1a\u6700\u5927\u7a0b\u5ea6\u4f18\u5316\uff0c\u83b7\u5f97\u6700\u5feb\u7684\u8fd0\u884c\u901f\u5ea6\u3002\u4e0d\u4f1a\u4e25\u683c\u68c0\u67e5\u8bed\u6cd5\u9519\u8bef\uff08\u53c2\u7167Strict ANSI C\uff09\u3002 \u4ee5\u4e0b\u9762\u4ee3\u7801\u4e3a\u4f8b\uff0c\u770b\u770bO1\u76f8\u8f83\u4e8eO0\u6709\u4ec0\u4e48\u533a\u522b\uff1a int test() { int x = 10, y = 20; int z; z = x+y; return 0; } O0\u751f\u6210\u7684\u6c47\u7f16\u4ee3\u7801\uff1a test: .fnstart .pad #12 sub sp, sp, #12 mov r0, #10 str r0, [sp, #8] mov r0, #20 str r0, [sp, #4] ldr r0, [sp, #8] add r0, r0, #20 str r0, [sp] mov r0, #0 add sp, sp, #12 bx lr \u9996\u5148\u5c0610\u5b58\u5165\uff0c\u7136\u540e\u518d\u5c0620\u5b58\u5165\uff0c\u76f8\u52a0\uff0c\u6700\u540e\u8fd4\u56de\u3002 O1\u751f\u6210\u7684\u6c47\u7f16\u4ee3\u7801 test: .fnstart movs r0, #0 bx lr \u76f4\u63a5\u5c06r0\u5bc4\u5b58\u5668\u8bbe\u7f6e\u62100\uff0c\u7136\u540e\u8fd4\u56de\u3002 \u7f16\u8bd1\u5668\u53d1\u73b0 test \u51fd\u6570\u4e2d\u76842-4\u884c\u662f\u6ca1\u7528\u7684\uff0c\u76f4\u63a5\u4f18\u5316\u3002 \u5982\u679c\u8fd9\u65f6\u5019\u6211\u4eec\u5355\u6b65\u8c03\u8bd5\uff0c\u53ef\u80fd\u5c31\u770b\u5230\u4ece\u7b2c1\u884c\u76f4\u63a5\u8df3\u5230\u7b2c5\u884c\uff0c\u6240\u4ee5\u8c03\u8bd5\u6700\u597d\u4e0d\u5f00\u4f18\u5316\u3002 Link-Time Optimization, One ELF Section per Function \u8fd9\u4e24\u4e2a\u9009\u9879\u662f\u9488\u5bf9\u94fe\u63a5\u5668\u7684\u4f18\u5316\u3002 Link-Time Optimization, \u94fe\u63a5\u65f6\u4f18\u5316\uff1a\u63a7\u5236 -flto \u53c2\u6570\u3002\u5728\u94fe\u63a5\u7684\u65f6\u5019\u53ef\u4ee5\u505a\u8bb8\u591a\u4f18\u5316\u3002\u542f\u7528LTO\u4ee5\u540e\u94fe\u63a5\u5668\u4f1a\u5bf9\u6574\u4e2a\u7a0b\u5e8f\u5206\u6790\u662f\u5426\u6709\u53ef\u4ee5\u5185\u8054\u7684\u3001\u6709\u76f8\u540c\u7684\u4ee3\u7801\u53ef\u4ee5\u4f18\u5316\u7684\u3001\u6a21\u5757\u91cc\u6709\u6ca1\u7528\u7684\u51fd\u6570\u6216\u8005\u53d8\u91cf\u7684\uff0c\u7136\u540e\u7edf\u7edf\u4f18\u5316\u6389\u3002\u542f\u7528LTO\u4ee5\u540e\u4f1a\u4f7f\u94fe\u63a5\u65f6\u95f4\u53d8\u957f\u3002 One ELF Section per Function, \u63a7\u5236 -function-sections \u53c2\u6570\u3002\u6bcf\u4e2a\u51fd\u6570\u4e00\u4e2aELF\u6bb5\uff1a MDK\u5bf9\u8fd9\u4e2a\u9009\u9879\u7684\u89e3\u91ca\uff1a The One ELF Section per Function option tells the compiler to put all functions into their own individual ELF sections. This allows the linker to remove unused functions. An ELF code section typically contains the code for a number of functions. The linker is normally only able to remove unused ELF sections, not unused functions. An ELF section can only be removed if all its contents are unused. Therefore, splitting each function into its own ELF section allows the compiler to easily identify which ones are unused, and remove them. Selecting this option increases the time required to compile your code, but results in improved performance. \u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u5f53\u7f16\u8bd1\u5668\u7f16\u4e00\u4e2a\u51fd\u6570\u65f6\uff0c\u4f1a\u628a\u4ed6\u653e\u5230ELF\u6bb5\u91cc\u3002\u5f53\u94fe\u63a5\u5668\u53bb\u94fe\u63a5\u65f6\uff0c\u53ef\u4ee5\u53d1\u73b0\u90a3\u4e9b\u51fd\u6570\u6ca1\u6709\u4f7f\u7528\uff0c\u7136\u540e\u79fb\u9664\u3002 Warnings, Plain Char is Signed, Language C/C++ \u70b9\u5f00Warnings\u4e0b\u62c9\u6846\u53ef\u4ee5\u9009\u62e9\u8b66\u544a\u7b49\u7ea7\uff0c\u9009\u62e9All-warnings\u4f1a\u6709\u8f83\u591a\u7684\u62a5\u9519\uff0c\u4e14\u5927\u591a\u6570\u90fd\u662fHAL\u5e93\u5e95\u5c42\u7684\u62a5\u9519\u3002\u4e0d\u5efa\u8bae\u9009\u62e9No Warnings\uff0c\u8b66\u544a\u662f\u7528\u6765\u68c0\u67e5\u4ee3\u7801\u7684\u6f5c\u5728\u903b\u8f91\u9519\u8bef\u7684\uff0c\u5982\u679c\u9009\u62e9No Warnings\uff0c\u53ef\u80fd\u4f1a\u4ea7\u751f\u9634\u95f4\u95ee\u9898\u3002\u4e5f\u53ef\u4ee5\u4f7f\u7528 -Wno \u81ea\u884c\u5173\u95ed\u90e8\u5206\u8b66\u544a\u3002 Turn Warnings into Errors\uff1a\u628a\u8b66\u544a\u8f6c\u6362\u6210\u9519\u8bef\uff0c\u63a7\u5236 Werror \u53c2\u6570\u3002\u52fe\u9009\u4ee5\u540e\u8b66\u544a\u90fd\u4f1a\u53d8\u6210\u9519\u8bef\uff0c\u7f16\u8bd1\u65e0\u6cd5\u901a\u8fc7\u3002 Plain Char is Signed\uff0c\u5b57\u7b26\u4f7f\u7528\u6709\u7b26\u53f7\u6574\u6570\uff1a\u63a7\u5236 fsigned-char \u53c2\u6570\u3002\u52fe\u9009\u540e\uff0c char \u662f\u6709\u7b26\u53f7\u76841\u5b57\u8282\u6574\u6570\uff0c\u7b49\u540c\u4e8e int8_t \uff1b\u4e0d\u52fe\u9009\u5c31\u662f\u65e0\u7b26\u53f7\u6570\uff0c\u7b49\u540c\u4e8e uint8_t \u3002\u9ed8\u8ba4\u662f\u65e0\u7b26\u53f7\u7684\u3002 Language C/C++, C/C++\u8bed\u8a00\u6807\u51c6\uff1a\u63a7\u5236 -std \u53c2\u6570\u3002\u53ef\u4ee5\u9009\u62e9C/C++\u7f16\u8bd1\u6807\u51c6\u3002\u5efa\u8baeC99\u4ee5\u4e0a\u3002\u5404\u6807\u51c6\u4e4b\u95f4\u7684\u533a\u522b\uff0c\u81ea\u884c\u641c\u7d22\u3002 Keil MDK\u6700\u65b0\u7248\u6700\u9ad8\u652f\u6301\u5230c11(gnu11)\u548cc++17(gnu++ 17)\u3002 Short enums/wchar, use RTTI, No Auto Includes Short enums/wchar\uff1a\u77ed\u679a\u4e3e/\u5bbd\u5b57\u7b26\uff0c\u63a7\u5236 fshrot-enums \u548c fshort-wchar \u53c2\u6570\u3002\u542f\u7528\u4ee5\u540e\u53ef\u4ee5\u4f18\u5316\u679a\u4e3e\u7c7b\u578b\u548cwchar\u5b57\u7b26\u53d8\u91cf\uff0c\u51cf\u5c0f\u4ee3\u7801\u4f53\u79ef\u3002 \u77ed\u679a\u4e3e\uff1a\u9ed8\u8ba4\u679a\u4e3e\u7c7b\u578b\u7684\u7c7b\u578b\u90fd\u662f int32_t \uff0c\u6709\u4e9b\u5730\u65b9\u7528\u4e0d\u5230\u8fd9\u4e48\u5927\u7684\u8303\u56f4\u3002\u56e0\u6b64\u7f16\u8bd1\u5668\u53ef\u4ee5\u6839\u636e\u679a\u4e3e\u7684\u503c\u9009\u62e9\u8303\u56f4\u6700\u5c0f\u80fd\u5bb9\u7eb3\u679a\u4e3e\u7684\u7c7b\u578b\u3002\u6bd4\u5982\u4e00\u4e2a\u679a\u4e3e\u7c7b\u578b\u7684\u503c\u6ca1\u6709\u8d85\u8fc7100\u7684\uff0c\u90a3\u4e48\u7f16\u8bd1\u5668\u4f1a\u7ed9\u4ed6\u5206\u914d int8_t \u3002 \u5bbd\u5b57\u7b26 wchar \u662fC++\u5f15\u5165\u7684\u4e3a\u4e86\u5904\u7406\u66f4\u5e7f\u6cdb\u5b57\u7b26\u96c6\u7684\u5b57\u7b26\u53d8\u91cf\u7c7b\u578b\uff0c\u5305\u62ecUnicode\u3002\u6211\u4eec\u90fd\u77e5\u9053\uff0c char \u5360\u4e00\u4e2a\u5b57\u8282\uff0c\u4f46\u662f\u5355\u4e2a char \u53d8\u91cf\u53ea\u80fd\u5904\u7406ASCII\u5b57\u7b26\uff0c\u5904\u7406\u4e0d\u4e86\u8bf8\u5982\u6c49\u5b57\u7b49\u591a\u5b57\u8282\u7684\u5b57\u7b26\u3002\u6240\u4ee5\u5f15\u5165\u4e86 whcar_t \u5173\u952e\u5b57\u7528\u6765\u5904\u7406\u975eASCII\u5b57\u7b26\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e00\u4e2a wchar_t \u5b57\u7b26\u5360\u75284\u4e2a\u5b57\u8282\uff0c\u542f\u7528\u8fd9\u4e2a\u9009\u9879\u4ee5\u540e\u4e00\u4e2a wchar_t \u5b57\u7b26\u5360\u75282\u4e2a\u5b57\u8282\u3002 C++11\u5f15\u5165\u4e86 char16_t \u548c char32_t \u7528\u6765\u6307\u5b9a\u5b57\u7b26\u7684\u5b57\u8282\u3002 PS\uff1a\u5728GB2312\u7f16\u7801\u4e2d\uff0c\u4e00\u4e2a\u6c49\u5b57\u53602\u4e2a\u5b57\u8282\uff1b\u5728UTF-8\u7f16\u7801\u4e2d\uff0c\u4e00\u4e2a\u6c49\u5b57\u53603\u4e2a\u5b57\u8282\u3002 RTTI\uff08Runtime Type Identification\uff09\u8fd0\u884c\u9636\u6bb5\u7c7b\u578b\u8bc6\u522b\uff0c\u63a7\u5236 rtti \u53c2\u6570\u3002C++\u7279\u6027\uff0c\u4e86\u89e3\u5373\u53ef\u3002 No Auto Includes\uff1a\u542f\u7528\u540e\uff0c\u7f16\u8bd1\u5668\u4e0d\u4f1a\u4ece\u82af\u7247\u5b89\u88c5\u7684pack\u5305\u4e2d\u641c\u7d22\u5934\u6587\u4ef6\uff0c\u5fc5\u987b\u81ea\u5df1\u6307\u5b9a\u3002\u8fd9\u91cc\u7684\u5934\u6587\u4ef6\u4e3b\u8981\u662f\u6307\u7684\u82af\u7247\u7684CMSIS\u5305\uff0c\u4ee5F4\u4e3a\u4f8b\uff0c\u5982\u679c\u4e0d\u52fe\u9009\u4f1a\u4ece\u6307\u5b9a\u82af\u7247\u7684DFP\u5305\u4e2d\u5bfb\u627e\u82af\u7247\u7684\u5934\u6587\u4ef6\u3002\u9664\u975e\u9700\u8981\u81ea\u5df1\u6307\u5b9a\u82af\u7247\u7684\u5934\u6587\u4ef6\uff0c\u5426\u5219\u4e0d\u52fe\u9009\u3002 \u4e0b\u9762\u662fAC5\u7279\u6709\u7684\u53c2\u6570\u3002 \u6253\u5f00Project - Option for Target 'balabala'\uff08\u9b54\u6cd5\u68d2\uff09\uff0cTarget\u91cc\u7f16\u8bd1\u5668\u9009\u62e9version 5\u6216\u8005V5.06\uff0cC/C++\u9009\u9879\u5361\uff0c\u8fd9\u91cc\u53ef\u4ee5\u914d\u7f6eAC5\u7f16\u8bd1\u5668\u7684\u53c2\u6570\u3002 \u8fd9\u91cc\u7684\u9009\u9879\u548cAC6\u662f\u5dee\u4e0d\u591a\u7684\uff0c\u4e3b\u8981\u533a\u522b\u51e0\u4e2a\u3002 Strict ANSI C\uff1a\u63a7\u5236 --strict \u53c2\u6570\u3002\u52fe\u9009\u4ee5\u540e\u5c06\u4f1a\u4e25\u683c\u6309\u7167ANSI C\u68c0\u67e5\u8bed\u6cd5\u9519\u8bef\uff0c\u6bd4\u5982\u4e0b\u9762\u7684\u4ee3\u7801\uff1a void * ptr; ptr++; /* GNU\u5141\u8bb8, \u4f46ANSI\u4e0d\u5141\u8bb8 */ \u5305\u62ec\u5f88\u591a asm, typeof, inline \u7b49\u6765\u81eaGNU\u7684\u8bed\u6cd5\u90fd\u65e0\u6cd5\u4f7f\u7528\u3002ANSI C\u5176\u5b9e\u5c31\u662fC89\u6807\u51c6\uff0c\u4e0d\u63a8\u8350\u52fe\u9009\u3002 Enum Container always int\uff1a\u63a7\u5236 --enum_is_int \u53c2\u6570\u3002\u52fe\u9009\u540e\uff0c\u6240\u6709\u679a\u4e3e\u7c7b\u578b\u90fd\u662f int32 \u3002 GNU Extensions\uff1a\u63a7\u5236 --gnu \u53c2\u6570\u3002\u52fe\u9009\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528GNU\u7684\u4e00\u4e9b\u7279\u6027\uff0c\u4f46CMSIS\u4e2d\u5fc5\u987b\u5305\u542b cmsis_gcc.h \u5934\u6587\u4ef6 \u60f3\u4e00\u60f3\u8fd9\u91cc\u4e3a\u4ec0\u4e48\u6ca1\u6709\u94fe\u63a5\u5668\u7684\u9009\u9879\uff0c\u524d\u9762\u6211\u8bf4\u8fc7\uff0c\u4e0b\u9762\u4e5f\u6709\u7b54\u6848\u3002 Use MicroLIB, Big Endian, Floating Point Hardware \u8fd9\u4e24\u4e2a\u53c2\u6570\u5728Target\u9009\u9879\u5361\u3002 Use MicroLIB\uff1a\u4f7f\u7528\u5fae\u5e93\uff0c\u52fe\u9009\u540e\u4f1a\u6dfb\u52a0\u4e00\u4e2a __MICROLIB \u5b8f\u5b9a\u4e49\u3002MicroLIB\u662f\u4e3a\u4e86\u51cf\u5c11\u4ee3\u7801\u4f53\u79ef\uff0c\u4f18\u5316\u5355\u7247\u673a\u8fd0\u884c\u6548\u7387\uff0c\u5bf9ANSI\u6807\u51c6\u5e93\u6587\u4ef6\u8fdb\u884c\u4fee\u6539\u548c\u88c1\u526a\u7684\u4e00\u4e2a\u5e93\u3002\u5982\u679c\u4f7f\u7528C++\uff0c\u5fae\u5e93\u5c06\u65e0\u6cd5\u4f7f\u7528\u3002 Big Endian\uff1a\u4f7f\u7528\u5927\u7aef\u5e8f\u3002\u52fe\u9009\u540e\u4ee5\u5927\u7aef\u5e8f\u7684\u65b9\u5f0f\u5b58\u50a8\u548c\u5904\u7406\u6570\u636e\uff0cARM\u67b6\u6784\u7684CPU\u90fd\u652f\u6301\u5927\u7aef\u5e8f\u548c\u5c0f\u7aef\u5e8f\u3002\u4e0b\u9762\u7b80\u5355\u8bf4\u4e00\u4e0b\u5927\u5c0f\u7aef\u5e8f\u7684\u533a\u522b\uff1a \u5bf9\u4e8e\u4e00\u4e2a\u6574\u65701234567890, \u5341\u516d\u8fdb\u5236\u6570\u4e3a0x499602D2. \u5927\u7aef\u5e8f\u5b58\u50a8\u5728\u5185\u5b58\u7684\u6837\u5b50: 49 96 02 D2 \u5c0f\u7aef\u5e8f\u5b58\u50a8\u5728\u5185\u5b58\u7684\u6837\u5b50: D2 02 96 49 \u5927\u7aef\u5e8f\u5bf9\u4eba\u7c7b\u6613\u4e8e\u9605\u8bfb, \u4f46\u662f\u5bf9\u4e8e\u8ba1\u7b97\u673a\u6765\u8bf4\u5c31\u4e0d\u592a\u65b9\u4fbf, \u6bd4\u5982\u8981\u5c06\u8fd9\u4e2a\u6570\u52a01, \u90a3\u4e48\u5c31\u9700\u8981\u627e\u5230\u6700\u540e\u4e00\u4f4d\u7684\u4f4d\u7f6e\u540e\u518d\u52a01. \u800c\u5bf9\u4e8e\u5c0f\u7aef\u5e8f\u6765\u8bf4\u53ea\u9700\u8981\u5728\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u52a01\u5c31\u884c\u4e86, \u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u5c31\u662f\u4e00\u4e2a\u6570\u7684\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e. \u5177\u4f53\u53c2\u89c1 \u7ef4\u57fa\u767e\u79d1 \u3002\u4e00\u822c\u5728\u505a\u6570\u636e\u901a\u4fe1\u65f6\u8981\u6ce8\u610f\u5927\u5c0f\u7aef\u7684\u95ee\u9898\u3002 Float Point Hardware\uff1a\u6d6e\u70b9\u8fd0\u7b97\u786c\u4ef6\uff0c\u63a7\u5236 -mfpu -mfloat-abi \u53c2\u6570\u3002\u9ed8\u8ba4\u4e3aSoft\uff0c\u5373\u4f7f\u7528\u8f6f\u4ef6\u6765\u8ba9CPU\u8ba1\u7b97\u6d6e\u70b9\u6570\u3002\u4f46\u662f\u4f7f\u7528CPU\u8ba1\u7b97\u6d6e\u70b9\u6570\u901f\u5ea6\u4f1a\u6bd4\u8f83\u6162\uff0c\u56e0\u6b64Cortex-M4\u53ca\u66f4\u9ad8\u7684\u5185\u6838\u63d0\u4f9b\u4e86FPU\u6765\u52a0\u901f\u6d6e\u70b9\u8fd0\u7b97\u3002 Cortex-M3\u6ca1\u6709FPU\u3002Cortex-M4\u652f\u6301Single Precision\uff1bCortex-M7\u8fd8\u652f\u6301Double Precision\uff1bCortex-M55\u8fd8\u652f\u6301\u5411\u91cf\u6269\u5c55\u3002 \u5305\u542b\u8def\u5f84\u3001\u81ea\u5b9a\u4e49\u7f16\u8bd1\u53c2\u6570 Include Paths\u7528\u4e8e\u6307\u5b9a\u7f16\u8bd1\u5668\u5934\u6587\u4ef6\u641c\u7d22\u8def\u5f84\u3002 Misc Controls\u662f\u6307\u5b9a\u7279\u5b9a\u7684\u7f16\u8bd1\u53c2\u6570\uff0c\u6bd4\u5982\u8ba9AC5\u62a5\u9519\u8b66\u544a\u4fe1\u606f\u53d8\u6210\u65e5\u6587\uff08AC5\u53ea\u652f\u6301\u82f1\u8bed\u548c\u65e5\u8bed\uff0c\u6ca1\u6709\u5176\u4ed6\u8bed\u8a00\u5305\u3002\uff09\uff1a \u5f53\u6211\u4eec\u6bcf\u66f4\u6539\u4e00\u4e2a\u7f16\u8bd1\u8bbe\u7f6e\u65f6\uff0cCompiler Control String\u90fd\u4f1a\u53d8\u5316\uff0c\u8fd9\u91cc\u663e\u793a\u7684\u5c31\u662f\u6700\u7ec8Keil\u7ed9\u7f16\u8bd1\u5668\u7684\u53c2\u6570\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u628a\u8fd9\u91cc\u590d\u5236\uff0c\u7528\u547d\u4ee4\u884c\u53bb\u7f16\u8bd1\uff0c\u6548\u679c\u662f\u4e00\u6837\u7684\u3002 \u5b9e\u9645\u7f16\u8bd1\u6548\u679c \u8fd9\u91cc\u6211\u4ee5lvgl stress\u4ee3\u7801\u4e3a\u4f8b\uff0c219\u4e2aC\u6587\u4ef6\uff0c1\u4e2a\u6c47\u7f16\u6587\u4ef6\uff0c\u770b\u770b\u5404\u79cd\u7f16\u8bd1\u7ea7\u522b\u751f\u6210\u7684\u4ee3\u7801\u6709\u4ec0\u4e48\u4e0d\u540c\u3002 STM32F103\u5e73\u53f0\uff0cHAL\u5e93\u7248\u672c1.1.9\uff0cRyzen5 5600H\u5168\u6838\u5fc3\u7f16\u8bd1\uff0c\u6240\u6709\u4ee3\u7801\u5168\u7f16\u8bd1\u3002 AC6.21, C11/C++11, AC5 like warnings\uff0c\u6d4b\u8bd5\u7ed3\u679c \u9009\u9879 RAM\u4f7f\u7528 ROM\u4f7f\u7528 \u6784\u5efa\u65f6\u95f4 O0\uff0c\u5173\u95edLTO\u4e0eOne ELF 37.7KB 453.2KB 10\u79d2 Ofast\uff0c\u5173\u95edLTO\u4e0eOne ELF 37.6KB 359.1KB 12\u79d2 Omin\uff0c\u5173\u95edLTO\u4e0eOne ELF 37.6KB 241.2KB 12\u79d2 Os\uff0c\u5173\u95edLTO\u4e0eOne ELF 37.6KB 289.4KB 12\u79d2 O0\uff0c\u6253\u5f00LTO\u4e0eOne ELF 37.0KB 347.1KB 14\u79d2 Ofast\uff0c\u6253\u5f00LTO\u4e0eOne ELF 37.0KB 368.7KB 21\u79d2 Omin\uff0c\u6253\u5f00LTO\u4e0eOne ELF 37.0KB 180.2KB 15\u79d2 \u6253\u5f00LTO\u4f1a\u4f7f\u94fe\u63a5\u65f6\u95f4\u53d8\u957f\uff0c\u4f46\u80fd\u663e\u8457\u964d\u4f4e\u4ee3\u7801\u4f53\u79ef\u3002 AC5.06, C99, All warnings\uff0c\u6d4b\u8bd5\u7ed3\u679c \u9009\u9879 RAM\u4f7f\u7528 ROM\u4f7f\u7528 \u6784\u5efa\u65f6\u95f4 O0\uff0c\u5173\u95edOne ELF 37.5KB 318.4KB 13\u79d2 O1\uff0c\u5173\u95edOne ELF 37.5KB 264.4KB 13\u79d2 O3\uff0c\u5173\u95edOne ELF 37.5KB 250.5KB 13\u79d2 O0\uff0c\u6253\u5f00One ELF 37.5KB 258.5KB 13\u79d2 O1\uff0c\u6253\u5f00One ELF 37.5KB 218.7KB 13\u79d2 O3\uff0c\u6253\u5f00One ELF 37.5KB 208.0KB 15\u79d2 GCC\u5c06\u7f16\u8bd1\u548c\u94fe\u63a5\u505a\u6210\u4e86\u4e00\u4e2a\u7ec4\u4ef6\uff0c\u6240\u4ee5\u6ca1\u6709LTO\u9009\u9879\u3002LLVM\u662f\u6a21\u5757\u5316\u8bbe\u8ba1\uff0c\u7f16\u8bd1\u548c\u94fe\u63a5\u662f\u4e24\u4e2a\u7ec4\u4ef6\u3002 \u6570\u636e\u4ec5\u4f9b\u53c2\u8003\uff0c\u53ef\u4ee5\u81ea\u884c\u7f16\u8bd1\u4e00\u4e2a\u8f83\u5927\u7684\u5de5\u7a0b\u6d4b\u8bd5\u3002 \u8c03\u8bd5Debug \u8fd9\u91cc\u7684\u8c03\u8bd5\u4e0d\u662f\u6307\u6539\u4e00\u4e2a\u53c2\u6570\uff0c\u4e0b\u8fdb\u53bb\uff1b\u7136\u540e\u770b\u73b0\u8c61\uff0c\u7136\u540e\u518d\u6539\u53c2\u6570\uff0c\u518d\u4e0b\u8fdb\u53bb\u3002\u770b\u51fd\u6570\u6709\u6ca1\u6709\u8fdb\uff0c\u51fd\u6570\u54ea\u91cc\u52a0\u4e2a printf \uff0c\u8fd9tm\u53eb\u9524\u5b50\u8c03\u8bd5\uff0c\u4e0d\u5acc\u9ebb\u70e6\u5417\uff1f\u4eba\u5bb6\u8d39\u5c3d\u5fc3\u601d\u5199\u7684\u8c03\u8bd5\u529f\u80fd\u4e0d\u7528\u662f\u5427\uff0c\u975e\u5f97\u6298\u817e\u81ea\u5df1\u3002 \u5982\u4f55\u4f7f\u7528\u8c03\u8bd5\uff0cStep into, Step over\u600e\u4e48\u7528\uff0c\u81ea\u5df1\u7f51\u4e0a\u5b66\uff0c\u8fd9\u91cc\u4e0d\u8bb2\u3002\u8c03\u8bd5\u51e0\u4e2a\u5173\u952e\u7684\u5c31\u662f\u5355\u6b65\u3001\u53cd\u6c47\u7f16\u3001\u67e5\u770b\u5185\u5b58\u6570\u636e\u3001\u67e5\u770b\u5bc4\u5b58\u5668\u6570\u636e\u3002 \u4f7f\u7528Keil\u8c03\u8bd5\u975e\u5e38\u7b80\u5355\uff0c\u7f16\u8bd1\u540e\u70b9\u51fbStart/Stop Debug Session\u5373\u53ef\u8fdb\u5165\u8c03\u8bd5\u3002 \u4f7f\u7528VSCode\u8c03\u8bd5\u9996\u5148\u4e0b\u8f7dgcc for arm toolchain, openocd\uff0c\u7136\u540e\u5c06\u4ed6\u4eec\u6dfb\u52a0\u5230\u73af\u5883\u53d8\u91cf\u4e2d\u3002\u5728Flash Configurations\u4e2d\u9009\u62e9\u4e0b\u8f7d\u5668\u7c7b\u578b\uff0c\u914d\u7f6e\u4e00\u4e0b\u8c03\u8bd5\u5668\u7684\u8bbe\u7f6e\uff08\u6bd4\u5982JLink\u9700\u8981\u9009\u62e9\u82af\u7247\u578b\u53f7\uff09\uff0c\u9009\u62e9 Run(\u8fd0\u884c)-Starting Debugging(\u542f\u52a8\u8c03\u8bd5)\u5373\u53ef\u8fdb\u5165\u8c03\u8bd5\u3002 \u5982\u679c\u8c03\u8bd5\u62a5\u9519\uff0c\u6253\u5f00 \\.vscode\\launch.json \uff0c\u5220\u9664 configurations \u4e2d\u7684\u6240\u6709\u914d\u7f6e\uff0c\u4fdd\u5b58\u3002 \u786e\u4fdd\u8c03\u8bd5\u5668\u9009\u62e9\u6b63\u786e\uff0c\u7136\u540e\u518d\u6309\u4e0bF5\uff0c\u9009\u62e9Cortex-Debug\u8c03\u8bd5\u3002 \u4f7f\u7528STLink\u7684\u8bdd\u8bf7\u4f7f\u7528\u8bf7\u4f7f\u7528OpenOCD, Interface Config\u9009\u62e9stlink-v2.cfg\u3002\u6ce8\u610f\u5de5\u4f5c\u76ee\u5f55\u4e0d\u8981\u6709\u4e2d\u6587\uff0c\u5426\u5219\u8c03\u8bd5\u4f1a\u62a5\u9519\u3002 \u7f16\u8bd1\u4fe1\u606f \u8fd9\u90e8\u5206\u5185\u5bb9\u8bf7\u89c1\u7f51\u76d8\u91cc\u7684\u300a STM32 MAP\u6587\u4ef6\u6d45\u6790_V1.1.pdf \u300b\uff0c\u6b63\u70b9\u539f\u5b50\u5199\u7684\u633a\u8be6\u7ec6\u7684\u3002 RAM/ROM Layout \u7531\u4e8e\u5355\u7247\u673a\u5185\u90e8\u8d44\u6e90\u5bf8\u571f\u5bf8\u91d1\uff0c\u5982\u679c\u6211\u4eec\u4e0d\u5916\u6302RAM\u3001ROM\u6216\u8005NAND Flash\uff0c\u4ec5\u7247\u4e0a\u7684\u8d44\u6e90\u6765\u8bf4\u662f\u6bd4\u8f83\u5c11\u7684\u3002\u5bf9\u4e8eSTM32F429IGT6\u4e5f\u53ea\u6709256 KB\u7684RAM\u548c1 MB\u7684Flash\u3002\u56e0\u6b64\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u5c31\u4f1a startup\u542f\u52a8\u6587\u4ef6\u5206\u6790 \u8be6\u89c1\u300a STM32 \u542f\u52a8\u6587\u4ef6\u6d45\u6790_V1.2.pdf \u300b\uff0c\u8fd9\u91cc\u53ea\u8bb2\u4e00\u4e2a\u5730\u65b9\u3002 malloc \u53d8\u91cf\u662f\u5206\u914d\u5728\u5806\u91cc\u7684\uff0c\u51fd\u6570\u8c03\u7528\u9700\u8981\u6808\uff0c\u56e0\u6b64\u5806\u6808\u7684\u5927\u5c0f\u5c31\u4f1a\u5f71\u54cd\u5355\u7247\u673a\u80fd\u5206\u914d\u7684\u53d8\u91cf\u5927\u5c0f\u3001\u51fd\u6570\u8fdb\u51fa\u6808\u3002\u5982\u679c\u4e00\u4e2a\u53d8\u91cf malloc \u5206\u914d\u7684\u7279\u522b\u5927\uff0c\u8d85\u51fa\u4e86\u5806\u7684\u5927\u5c0f\uff0c\u90a3\u4e48\u5c31\u4f1a\u8fd4\u56de NULL \u3002\u5806\u6808\u7684\u5927\u5c0f\u662f\u5728 startup \u4e2d\u7684\u4e0b\u9762\u4e24\u4e2a\u5730\u65b9\u5b9a\u4e49\uff1a Stack_Size \u662f\u6808\u5927\u5c0f\uff0c\u51b3\u5b9a\u51fd\u6570\u5d4c\u5957\u7684\u6df1\u5ea6\u548c\u8c03\u7528\u7684\u5bb9\u91cf\uff1b Heap_Size \u662f\u5806\u5927\u5c0f\uff0c\u51b3\u5b9a\u5206\u914d\u7684\u53d8\u91cf\u5927\u5c0f\u3002\u5355\u4f4d\u4e3a\u5b57\u8282\uff0c\u9ed8\u8ba4\u7684 Stack_Size \u662f 0x0400 \u4e5f\u5c31\u662f1 KB\u5927\u5c0f\uff0c Heap_Size \u662f 0x4000 \u4e5f\u5c31\u662f16 KB\u5927\u5c0f\u3002\u8fd9\u4e2a\u503c\u4e0d\u80fd\u8d85\u8fc7\u5355\u7247\u673a\u7684RAM\u5927\u5c0f\uff0cSTM32F103RCT6\u662f64 KB\u7684RAM\uff0cSTM32F429IGT6\u662f256 KB\u7684RAM\u3002 \u7a0b\u5e8f\u7684\u5c40\u90e8\u53d8\u91cf\u5206\u914d\u5728\u6808\u533a\uff0c\u52a8\u6001\u7533\u8bf7\u7684\u5185\u5b58\u5728\u5806\u533a\uff0c\u5168\u5c40\u53d8\u91cf\u5728\u5168\u5c40\u53d8\u91cf\u533a\uff0c\u53ef\u4ee5\u901a\u8fc7map\u6587\u4ef6\u627e\u5230\u5168\u5c40\u53d8\u91cf\u7684\u5730\u5740\u3002 BOOT \u5360\u4f4d","title":"Arm toolchain"},{"location":"STM32/arm_toolchain/#cmsis","text":"STM32\u4e4b\u6240\u4ee5\u517c\u5bb9\u5404\u5bb6\u7684\u7f16\u8bd1\u5668\uff0c\u662f\u56e0\u4e3aCMSIS\u5df2\u7ecf\u5904\u7406\u597d\u4e86\u7f16\u8bd1\u5668\u7684\u517c\u5bb9\u3002 \u5728ST\u7684CMSIS\u4e2d\uff0c\u6709\u82e5\u5e72\u4e2a\u9488\u5bf9\u7f16\u8bd1\u5668\u7684\u5934\u6587\u4ef6\u3002\u5728ST\u5b98\u65b9GitHub\u4ed3\u5e93/\u5404\u7cfb\u5217\u7684Cube\u5305/Drivers/CMSIS\u4e2d\u53ef\u4ee5\u627e\u5230ST\u7684CMSIS\u5305\u3002 \u53ef\u4ee5\u770b\u5230\uff0c cmsis_armcc.h \u662fAC5\u7f16\u8bd1\u5668\u5934\u6587\u4ef6\uff0c cmsis_armclang.h \u662fAC6\u7f16\u8bd1\u5668\u7684\u5934\u6587\u4ef6\uff0c cmsis_gcc.h \u662fGCC\u7f16\u8bd1\u5668\u7684\u5934\u6587\u4ef6\uff0c cmsis_iccarm.h \u662fIAR\u7f16\u8bd1\u5668\u7684\u5934\u6587\u4ef6\u3002 cmsis_compiler.h \u5bf9\u7f16\u8bd1\u5668\u8fdb\u884c\u5224\u65ad\uff0c\u7136\u540e\u5305\u542b\u4e0d\u540c\u7684\u5934\u6587\u4ef6\u3002 /* * Arm Compiler 6 (armclang) */ #if defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050) #include \"cmsis_armclang.h\" /* * GNU Compiler */ #elif defined ( __GNUC__ ) #include \"cmsis_gcc.h\" /* * IAR Compiler */ #elif defined ( __ICCARM__ ) #include <cmsis_iccarm.h> ... /* * TI Arm Compiler */ #elif defined ( __TI_ARM__ ) #include <cmsis_ccs.h> ... /* * TASKING Compiler */ #elif defined ( __TASKING__ ) ... /* * COSMIC Compiler */ #elif defined ( __CSMC__ ) #include <cmsis_csm.h> ... /* * Arm Compiler 4/5 */ #elif defined ( __CC_ARM ) #include \"cmsis_armcc.h\" #else #error Unknown compiler. #endif \u5728Drivers/CMSIS/Device/ST/Source/Template\u4e2d\u5305\u542b\u4e86\u5404\u4e2a\u7f16\u8bd1\u5668\u6240\u5bf9\u5e94\u7684 startup \u6c47\u7f16\u6587\u4ef6\u3002\u4e0d\u540c\u7f16\u8bd1\u5668\u7684 startup \u4e0d\u901a\u7528\uff08\u5982\u679cAC6\u4f7f\u7528 armasm \u53ef\u4ee5\u4f7f\u7528AC5\u7684 startup \uff0c\u4f46\u4f1a\u629b\u51fa\u4e00\u4e2awarning\uff0c\u8ba9\u4f60\u4f7f\u7528\u65b0\u8bed\u6cd5\u4ee5\u4f7f\u7528\u65b0\u7684\u6c47\u7f16\u5668\uff09\u3002","title":"CMSIS\u5bf9\u7f16\u8bd1\u5668\u7684\u517c\u5bb9"},{"location":"STM32/arm_toolchain/#build","text":"Build\u662f\u6307\u5c06\u6e90\u4ee3\u7801\u901a\u8fc7\u7f16\u8bd1\u3001\u94fe\u63a5\u751f\u6210\u53ef\u6267\u884c\u7a0b\u5e8f\u7684\u8fc7\u7a0b\u3002 \u800c\u5de5\u5177\u94fe\uff08ToolChain\uff09\u5305\u62ec\u7f16\u8bd1\u5668\uff08Compiler\uff09\u3001\u94fe\u63a5\u5668\uff08Linker\uff09\u7b49\u3002\u603b\u7684\u6765\u8bf4\u5c31\u662f\u7528\u4e00\u5957\u5de5\u5177\u628a\u53ef\u4ee5\u628a\u4eba\u80fd\u770b\u61c2(maybe)\u7684\u4ee3\u7801\u8f6c\u6362\u6210\u673a\u5668\u80fd\u770b\u61c2\u7684\u6307\u4ee4\u3002 \u4e0b\u9762\u7684\u56fe\u662fARM\u5de5\u5177\u94fe\u7684\u8fd0\u884c\u6d41\u7a0b\uff0c\u7f16\u8bd1\u5668\u628a\u6bcf\u4e2a .c, .cpp, .s \u6587\u4ef6\u7f16\u8bd1\u6210\u76ee\u6807\u6587\u4ef6 .o \uff0c\u7136\u540e\u7ecf\u8fc7\u94fe\u63a5\u5668\u5c06\u76ee\u6807\u6587\u4ef6\u94fe\u63a5\u4e3a\u53ef\u6267\u884c\u4ee3\u7801\u3002 STM32\u6709\u4e00\u4e2a\u542f\u52a8\u6587\u4ef6 startup \uff0c\u8fd9\u4e2a\u6587\u4ef6\u5b9a\u4e49\u4e86STM32\u4e00\u4e9b\u6700\u57fa\u672c\u7684\u4e1c\u897f\uff0c\u6bd4\u5982\u5185\u5b58\u5806\u6808\uff0c\u4e2d\u65ad\u5411\u91cf\u7b49\u3002\u56e0\u6b64\u9700\u8981\u4e00\u4e2a\u6c47\u7f16\u5668 ASM \u7f16\u8bd1\u6c47\u7f16\u6587\u4ef6\u3002\u5173\u4e8e\u8fd9\u4e2a\u6587\u4ef6\u53c2\u89c1 startup\u542f\u52a8\u6587\u4ef6\u5206\u6790 \u3002 ARM\u5de5\u5177\u94fe\u8fd0\u884c\u6d41\u7a0b \u914d\u7f6e\u597d\u5de5\u5177\u94fe\u5c31\u53ef\u4ee5\u4e0d\u4f9d\u8d56Keil MDK\u5f00\u53d1\u3002\u4e0d\u5c40\u9650\u4e8eWindows\uff0c\u53ef\u4ee5\u5728MacOS\uff0cLinux\u4e0a\u5f00\u53d1\u3002Keil MDK\u53ea\u6709Windows\u7248\u672c\u3002 STM32\u4e3b\u6d41\u7684\u5de5\u5177\u94fe\u6709ARMCC, ARMClang, IAR, GNU for arm\u3002\u5176\u5b9e\u4e3b\u6d41\u7684C/C++\u5de5\u5177\u94fe\u4e5f\u5c31gcc, clang, msvc\u3002gcc\u548cclang\u90fd\u662f\u5f00\u6e90\u7684\u3002msvc\u662f\u5fae\u8f6f\u5bb6\u7684\u4e1c\u897f\uff0c\u4e0d\u53ef\u80fd\u5f00\u6e90\u3002\u6240\u4ee5\u5176\u4ed6\u4eba\u60f3\u505a\u7f16\u8bd1\u5668\u4e5f\u53ea\u80fd\u4ecegcc\u548cclang\u4e0b\u624b\uff0c\u53c8\u4e0d\u53ef\u80fd\u50cf\u82f9\u679c\u90a3\u6837\u62db\u6765Chris Lattner(llvm\u4e4b\u7236\uff0cclang\u5c31\u662f\u57fa\u4e8ellvm\u7684)\u4e00\u6837\u7684\u5927\u795e\u3002 PS\uff1aClang\u662f\u7f16\u8bd1\u5668\u524d\u7aef\uff0c\u8d1f\u8d23\u9884\u5904\u7406\u548cIR\u4ee3\u7801\u751f\u6210\uff0c\u7f16\u8bd1\u3001\u94fe\u63a5\u3001\u4f18\u5316\u90fd\u662f\u4ea4\u7ed9\u540e\u7aefLLVM\u53bb\u5904\u7406\u3002\u800cGCC\u7f16\u8bd1\u5668\u662f\u5c06\u9884\u5904\u7406\u3001\u7f16\u8bd1\u5728\u4e00\u4e2a\u7a0b\u5e8f\u91cc\u5904\u7406\u3002AC6\u4e5f\u4e0d\u662f\u5b8c\u5168\u4f7f\u7528Clang\u7f16\u8bd1\uff0c\u6c47\u7f16\u4ee3\u7801\u5982\u679c\u4f7f\u7528armasm\u662f\u4ea4\u7ed9gcc\u53bb\u5904\u7406\u3002\u5982\u679c\u4f7f\u7528armclang\uff0c\u53ef\u80fd\u9700\u8981GNU\u8bed\u6cd5\u3002\u5728\u6700\u65b0Keil\u7248\u672c\u4e2darmclang\u652f\u6301arm\u8bed\u6cd5\u3002 ARMCC/Clang, IAR\u90fd\u662f\u5546\u4e1a\u8f6f\u4ef6\uff0c\u4e0d\u514d\u8d39\u3002GNU for arm\u662f\u5f00\u6e90\u5de5\u5177\uff0c\u5546\u4e1a\u514d\u8d39\u3002 \u5728\u5355\u7247\u673a\u4e2d\uff0c\u7531\u4e8e\u8ba1\u7b97\u80fd\u529b\u8f83\u4f4e\uff0c\u56e0\u6b64\u6709\u4e9b\u51fd\u6570\u3001\u53d8\u91cf\u5728\u5185\u5b58\u5f53\u4e2d\u7684\u5206\u914d\uff0c\u94fe\u63a5\u5668\u4f1a\u63d0\u524d\u505a\u597d\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u67d0\u4e9b\u51fd\u6570\u548c\u53d8\u91cf\u7684\u5730\u5740\u662f\u56fa\u5b9a\u7684\u3002\u5bf9\u4e8eCortex-M\u5185\u6838\uff0c\u5de5\u5177\u94fe\u90fd\u4f1a\u5e26\u4e00\u4e2aPreFix\uff0c\u53eb\u505a arm-none-eabi- \u3002eabi\u6307\u7684\u662f Embedded Application Binary Interface \u3002 ABI\u662f\u6307Application Binary Interface\uff0c\u4e5f\u5c31\u662f\u4e8c\u8fdb\u5236\u5e94\u7528\u7a0b\u5e8f\u4e4b\u95f4\u7684\u4e00\u4e2a\u63a5\u53e3\u3002\u90a3\u4e48\u4ec0\u4e48\u662f\u4e8c\u8fdb\u5236\u5e94\u7528\u7a0b\u5e8f\u5462\uff1fWindows\u4e0a\u5c31\u662f\u6211\u4eec\u719f\u77e5\u7684exe\uff08exe\u7684\u5168\u79f0\u53eb\u505aexecutable\uff0c\u53ef\u6267\u884c\u7684\uff09\uff0c\u8fd9\u4e2aexe\u5c31\u662f\u7f16\u8bd1\u597d\u7684\u4e8c\u8fdb\u5236\u7a0b\u5e8f\uff0c\u4e5f\u5c31\u662f\u5b83\u53ea\u6709\u673a\u5668\u7801\uff0c\u6ca1\u6709C\u8bed\u8a00\u6216\u8005\u5176\u4ed6\u8bed\u8a00\u7684\u4ee3\u7801\uff0c\u56e0\u6b64\u53eb\u505a\u4e8c\u8fdb\u5236\u3002\u7ed9\u4f60\u4e00\u4e2a\u7a0b\u5e8f\u7684C\u8bed\u8a00\u6e90\u4ee3\u7801\uff0c\u662f\u4e0d\u662f\u8981\u5148\u7f16\u8bd1\u624d\u80fd\u8fd0\u884c\uff0c\u7f16\u8bd1\u51fa\u6765\u7684\u8fd9\u4e2a\u4e1c\u897f\u5c31\u662f\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u3002\u90a3\u4e48Interface\u600e\u4e48\u7406\u89e3\u5462\uff1f\u5f88\u7b80\u5355\uff0c\u5c31\u662fexe\u4e4b\u95f4\u7684\u4e92\u76f8\u8c03\u7528\u3002\u5047\u5982\u6211\u8981\u6253\u5f00Windows\u7684\u8bbe\u7f6e\uff0c\u90a3\u4e48\u6211\u4e0d\u53ef\u80fd\u628aWindows\u7684\u8bbe\u7f6e\u81ea\u5df1\u5199\u4e00\u904d\uff0c\u80af\u5b9a\u662f\u8c03\u7528Windows\u7684\u4e00\u4e2a\u4e1c\u897f\u6765\u6253\u5f00\u8bbe\u7f6e\uff0c\u8c03\u7528\u7684\u901a\u9053\u5c31\u662f\u63a5\u53e3\u3002\u6211\u8c03\u7528\u4e86\u8fd9\u4e2a\u63a5\u53e3\uff0cWindows\u5c31\u628a\u8bbe\u7f6e\u6253\u5f00\u4e86\u3002 PS: Windows\u4e0b\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u9664\u4e86exe\uff0c\u8fd8\u6709\u4e00\u7c7b\u662fdll\uff0cDynamic Link Library\uff0c\u52a8\u6001\u94fe\u63a5\u5e93\u3002dll\u76f8\u8f83\u4e8eexe\u5b83\u662f\u4e00\u4e2a\u5e93\uff0c\u800c\u4e14\u53ef\u4ee5\u591a\u4e2a\u8fdb\u7a0b\u5171\u4eab\u3002\u5728Linux\u6216\u7c7bUnix\u4e0a\uff0cdll\u5c31\u662fso(Share Object)\uff0c\u539f\u7406\u7c7b\u4f3c\u3002 \u62ff\u533b\u9662\u770b\u75c5\u62ff\u836f\u4e3a\u4f8b\u3002\u6211\u662f\u4e00\u4e2aexe\uff0c\u533b\u751f\u4e5f\u662f\u4e00\u4e2aexe\uff0c\u836f\u5e97\u4e5f\u662f\u4e00\u4e2aexe\u3002\u6211\u5148\u53bb\u8c03\u7528\u533b\u751f\u7684\u63a5\u53e3\uff0c\u628a\u6211\u7684\u75c7\u72b6\u4f5c\u4e3a\u53c2\u6570\u4f20\u8fdb\u53bb\uff0c\u533b\u751f\u8fd4\u56de\u4e00\u4e2a\u836f\u65b9\uff1b\u7136\u540e\u6211\u518d\u53bb\u836f\u5e97\u628a\u8fd9\u4e2a\u836f\u65b9\u4f5c\u4e3a\u53c2\u6570\u4f20\u8fdb\u53bb\uff0c\u8fd4\u56de\u4e00\u5806\u836f\u3002\u6211\u4e0d\u53ef\u80fd\u81ea\u5df1\u7ed9\u81ea\u5df1\u770b\u75c5\uff0c\u56e0\u4e3a\u6211\u6ca1\u6709\u770b\u75c5\u7684\u7a0b\u5e8f\uff0c\u800c\u533b\u751f\u6709\u770b\u75c5\u7684\u7a0b\u5e8f\uff0c\u6211\u4eec\u76f4\u63a5\u8c03\u7528\u5c31\u884c\u4e86\uff0c\u4f46\u662f\u6211\u770b\u4e0d\u5230\u533b\u751f\u662f\u600e\u4e48\u5206\u6790\u75c7\u72b6\u7136\u540e\u7ed9\u51fa\u836f\u65b9\u7684\uff0c\u56e0\u4e3a\u533b\u751f\u7684\u7a0b\u5e8f\u662f\u7f16\u8bd1\u8fc7\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u770b\u4e0d\u5230\u6e90\u4ee3\u7801\u3002 \u90a3\u4e48\u8fd8\u6709\u4e00\u4e2a\u4e1c\u897f\u53eb\u505aAPI(Applicaiton Programmable Interface)\uff0c\u5b83\u548cABI\u6709\u4ec0\u4e48\u533a\u522b\u5462\uff1f\u5176\u5b9e\u5c31\u662f\u6e90\u4ee3\u7801\u548c\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u533a\u522b\u3002API\u6709\u70b9\u7c7b\u4f3c\u51fd\u6570\u7684\u8c03\u7528\uff0c\u6709\u51fd\u6570\u540d\uff0c\u53c2\u6570\u5217\u8868\uff1b\u800cABI\u5168\u90e8\u7528\u7684\u662f\u673a\u5668\u7801\uff0c\u662fAPI\u7684\u66f4\u5e95\u5c42\u5b9e\u73b0\u7f62\u4e86\u3002 \u4f46\u662f\u5bf9\u4e8e\u5927\u591a\u6570\u5355\u7247\u673a\u6765\u8bf4\uff0c\u585e\u4e00\u4e2a\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u90fd\u591f\u545b\uff0c\u600e\u4e48\u80fd\u585e\u591a\u4e2a\u3002\u6240\u4ee5\u5bf9\u4e8e\u5355\u7247\u673a\uff0c\u5c31\u4e0d\u9700\u8981ABI\u4e86\u3002","title":"Build\u57fa\u7840\u6982\u5ff5"},{"location":"STM32/arm_toolchain/#arm-compiler","text":"\u65b0\u7684\u7f16\u8bd1\u5668\u6709\u66f4\u591a\u7684feature\uff0c\u5f53\u7136\u4e5f\u53ef\u80fd\u4f1a\u6709\u66f4\u591a\u7684~~bug~~\uff0c\u4e0d\u8fc7\u8fd8\u662f\u5efa\u8bae\u4f7f\u7528\u6700\u65b0\u7684\u7f16\u8bd1\u5668\u3002\u65b0\u7248\u7684\u7f16\u8bd1\u5668\u6709\u66f4\u4f18\u7684RAM/ROM\u4f18\u5316\uff0c\u7f16\u8bd1\u65f6\u95f4\u66f4\u77ed\u3002\u800c\u4e14AC6\u7f16\u8bd1\u5668\u662f\u57fa\u4e8eLLVM\u67b6\u6784\u7684\uff0c\u7406\u8bba\u4e0a\u4f18\u5316\u4f1a\u66f4\u597d\u3002 \u76ee\u524dARM\u7f16\u8bd1\u5668\u6700\u65b0\u7684\u7248\u672c\u662fARM Compiler 6.21\uff0c\u53d1\u5e03\u4e8e2023\u5e7410\u670811\u65e5\u3002 AC5\u7f16\u8bd1\u5668\u5df2\u7ecf\u505c\u6b62\u66f4\u65b0\uff0c\u6700\u540e\u7248\u672c\u662f5.06\uff0c\u53ea\u652f\u6301\u5230C99\u3002\u56e0\u6b64\u4e0d\u5efa\u8bae\u4f7f\u7528\u6b64\u7f16\u8bd1\u5668\u3002\u5efa\u8bae\u5c06keil\u5347\u7ea7\u5230\u6700\u65b0\u7248\u672c\uff08Keil MDK 5.39\uff0cAC6.21\uff09\u3002\u6253\u5f00Project - Option for Target 'balabala'\uff08\u9b54\u6cd5\u68d2\uff09\uff0cTarget\u9009\u9879\u5361\uff0c\u5728Code Generation\u4e2d\u53ef\u4ee5\u9009\u62e9\u7f16\u8bd1\u5668\u3002 \u5982\u679c\u5217\u8868\u91cc\u6709\u63d0\u793aMissing\uff0c\u8bf4\u660e\u6ca1\u6709\u5b89\u88c5\u8fd9\u4e2a\u7f16\u8bd1\u5668\uff0c\u53c2\u7167\u4e0b\u9762\u7684\u65b9\u6cd5\u5b89\u88c5\u3002 ARM Compiler\u7684\u6700\u65b0\u7248\u672c\u662fAC6.21\u3002Keil MDK5.38\u6240\u5e26\u7684ARM\u7f16\u8bd1\u5668\u662f6.19\u3002\u53ef\u4ee5\u81ea\u884c\u5347\u7ea7ARM\u7f16\u8bd1\u5668\u3002Template\u4ec5\u5728AC6\u7f16\u8bd1\u5668\u4e0b\u53ef\u7f16\u8bd1\u901a\u8fc7\u3002","title":"ARM Compiler"},{"location":"STM32/arm_toolchain/#ac5","text":"Keil MDK\u4ece5.37\u7248\u672c\u5f00\u59cb\u5c31\u4e0d\u81ea\u5e26AC5\u7f16\u8bd1\u5668\uff0c\u7f16\u8bd1\u4f1a\u63d0\u793a\u4e22\u5931\u7f16\u8bd1\u5668\u3002\u5982\u679c\u8981\u4f7f\u7528AC5\u7f16\u8bd1\u5668\u7f16\u8bd1\u4ee3\u7801\uff0c\u6309\u7167\u4ee5\u4e0b\u65b9\u5f0f\u5b89\u88c5\u3002 \u4e0b\u8f7d\u7f51\u76d8\u91cc\u7684\u201cARMCompiler506_b960.msi\u201d\uff0c\u4e5f\u53ef\u4ee5\u53bb\u5b98\u7f51\u4e0b\u8f7d\uff1a https://developer.arm.com/downloads/view/ACOMP5 \u6ce8\u610f\u8def\u5f84\u8981\u9009\u62e9Keil\u5b89\u88c5\u76ee\u5f55\\ARM\\ARMCC\uff0c\u7136\u540e\u4e00\u8defNext \u5b89\u88c5\u5b8c\u6bd5\u540e\uff0c\u6253\u5f00Keil\uff0c\u4f9d\u6b21\u70b9\u51fb\u56fe\u4e2d\u7684\u5e8f\u53f7\uff0c\u8bbe\u7f6eAC5\u7f16\u8bd1\u5668\u8def\u5f84\u3002\u6ce8\u610f\u7b2c5\u6b65\u662f\u4e0a\u9762\u9009\u62e9\u7684AC5\u7f16\u8bd1\u5668\u8def\u5f84\u3002","title":"\u5b89\u88c5AC5\u7f16\u8bd1\u5668"},{"location":"STM32/arm_toolchain/#ac6","text":"\u6700\u65b0\u7248Keil MDK 5.39\uff08Update, Dec 2023\uff09\u5df2\u7ecf\u5305\u542bAC6.21\uff0c\u65e0\u9700\u5347\u7ea7\u3002 Keil MDK 5.38\u6240\u5e26\u7684\u7f16\u8bd1\u5668\u7248\u672c\u662fAC6.19\uff0c\u622a\u81f3\u76ee\u524dARM Compiler\u6700\u65b0\u7248\u662f6.21\u3002\u53ef\u4ee5\u6309\u7167\u4e0b\u9762\u7684\u6b65\u9aa4\u5347\u7ea7\u3002 \u4e0b\u8f7d\u7f51\u76d8\u91cc\u7684\u201cArm Compiler for Embedded 6.21.msi\u201d\uff0c\u4e5f\u53ef\u4ee5\u53bb\u5b98\u7f51\u4e0b\u8f7d\uff1a https://developer.arm.com/Tools%20and%20Software/Arm%20Compiler%20for%20Embedded \u6ce8\u610f\u8def\u5f84\u9009\u62e9Keil\u5b89\u88c5\u76ee\u5f55\\ARM\\ARMCLANG\uff0c\u7136\u540e\u4e00\u8defNext \u5b89\u88c5\u5b8c\u6bd5\u540e\uff0c\u5982\u679cKeil\u91cc\u663e\u793aV6.21\u5c31OK\u4e86\u3002","title":"\u5347\u7ea7AC6\u7f16\u8bd1\u5668"},{"location":"STM32/arm_toolchain/#eidearm-compiler","text":"EIDE\u9700\u8981\u6307\u5b9a\u7f16\u8bd1\u5668\u548cKeil\u7684\u8def\u5f84\u624d\u53ef\u4ee5\u4f7f\u7528\u7f16\u8bd1\u5668\u3002 \u70b9\u51fb\u4fa7\u8fb9EIDE\u56fe\u6807 \u70b9\u51fbConfigure Toolchain\uff08\u5982\u679c\u6ca1\u6709\u70b9\u4e00\u4e0b\u4e0b\u9762\u7684Operations\u64cd\u4f5c\uff09\uff0c\u8f93\u5165armcc\u5373\u53ef\u51fa\u73b0\u4e0b\u9762\u7684\u51e0\u4e2a\u9009\u9879 \u4f9d\u6b21\u9009\u62e9AC5\u7684\u76ee\u5f55\uff08\u4e0d\u80fd\u9009bin\uff0c\u5728Keil\u5b89\u88c5\u76ee\u5f55\\ARM\\ARMCC\uff09\u3001AC6\u7684\u76ee\u5f55\uff08Keil\u5b89\u88c5\u76ee\u5f55\\ARM\\ARMCLANG\uff09\u3001Keil MDK\u8def\u5f84\uff08UV4.exe\u6216\u8005TOOLS.INI\u6240\u5728\u4f4d\u7f6e\uff0cUV4.exe\u5728Keil\u5b89\u88c5\u76ee\u5f55\\UV4\\UV4.exe\uff0cTOOLS.INI\u5728Keil\u5b89\u88c5\u76ee\u5f55\u4e0b\uff09\u3002\u5982\u679c\u914d\u7f6e\u6b63\u786e\uff0c\u5e94\u8be5\u6709\u4e2a\u5bf9\u52fe\uff0c\u5982\u4e0a\u56fe\u3002\u5982\u679c\u663e\u793a\u00d7\uff0c\u8bf4\u660e\u914d\u7f6e\u9519\u8bef\uff0c\u91cd\u65b0\u9009\u62e9\u8def\u5f84\u3002 \u9009\u62e9Import Project\u5bfc\u5165\u4e00\u4e2aKeil\u5de5\u7a0b\uff0c\u7136\u540e\u5728\u5de6\u4e0b\u89d2\u4f9d\u6b21\u70b9OK\uff0c\u70b9\u51fbBuild\u6309\u94ae\u770b\u7f16\u8bd1\u662f\u5426\u6b63\u5e38\u3002 \u5207\u6362\u7f16\u8bd1\u5668\u5982\u56fe\u6240\u793a\uff1a","title":"EIDE\u914d\u7f6eARM Compiler"},{"location":"STM32/arm_toolchain/#ac6_1","text":"ARMCC\u9700\u8981ARM\u8bed\u6cd5\u7684\u6c47\u7f16\u6587\u4ef6\uff0cARMClang\u9700\u8981GNU\u8bed\u6cd5\u7684\u6c47\u7f16\u6587\u4ef6\u3002\u5982\u679c\u76f4\u63a5\u5c06AC5\u6362\u6210AC6\u7f16\u8bd1\u65e0\u6cd5\u901a\u8fc7\u3002arm\u6587\u4ef6\u5939\u7684startup\u6c47\u7f16\u6587\u4ef6\u9ed8\u8ba4\u90fd\u662f\u7528\u7684ARM\u8bed\u6cd5\uff0c\u5982\u679c\u4f7f\u7528GNU\u8bed\u6cd5\u9700\u8981\u81ea\u884c\u4fee\u6539\u8def\u5f84\u4f7f\u7528gcc\u91cc\u7684\u6c47\u7f16\u6587\u4ef6\u3002 ARM\u8bed\u6cd5\u7684\u7279\u70b9\u662f\u6ce8\u91ca\u4ee5 ; \u5f00\u5934\uff0c\u6ca1\u6709 . \u6253\u5934\u7684\u6807\u7b7e\uff1bGNU\u8bed\u6cd5\u7684\u7279\u70b9\u662f\u6ce8\u91ca\u65b9\u5f0f\u4e0eC\u8bed\u8a00\u76f8\u540c\uff0c\u4f7f\u7528 .xxx \u4f5c\u4e3a\u6807\u7b7e\u3002 ARM\u8bed\u6cd5\u7684\u6c47\u7f16\u6587\u4ef6\uff1a Heap_Size EQU 0x00004000 AREA HEAP, NOINIT, READWRITE, ALIGN=3 __heap_base Heap_Mem SPACE Heap_Size __heap_limit PRESERVE8 THUMB ; Vector Table Mapped to Address 0 at Reset AREA RESET, DATA, READONLY EXPORT __Vectors EXPORT __Vectors_End EXPORT __Vectors_Size ********************************************************************************* GNU\u8bed\u6cd5\u7684\u6c47\u7f16\u6587\u4ef6\uff1a .section .text.Reset_Handler .weak Reset_Handler .type Reset_Handler, %function Reset_Handler: ldr sp, =_estack /* set stack pointer */ /* Call the clock system initialization function.*/ bl SystemInit /* Copy the data segment initializers from flash to SRAM */ ldr r0, =_sdata ldr r1, =_edata ldr r2, =_sidata movs r3, #0 b LoopCopyDataInit CopyDataInit: ldr r4, [r2, r3] str r4, [r0, r3] adds r3, r3, #4 AC6\u63d0\u4f9b\u4e86\u4e24\u4e2a\u6c47\u7f16\u5668\uff0carm-asm\u548carm-clang\u3002arm-asm\u662f\u4eceARMCC\u4e2d\u79fb\u690d\u8fc7\u6765\u7684\u6c47\u7f16\u5668\uff0carm-clang\u662f\u4eceLLVM\u4e2d\u79fb\u690d\u8fc7\u6765\u7684\u6c47\u7f16\u5668\u3002\u5982\u679c\u4f7f\u7528GNU\u8bed\u6cd5\u7f16\u8bd1ARM\u8bed\u6cd5\u7684\u6c47\u7f16\u6587\u4ef6\uff0c\u4f1a\u629b\u51fa\u975e\u5e38\u591a\u7684\u9519\u8bef\uff1a \u5982\u679c\u5207\u6362\u5b8c\u7f16\u8bd1\u5668\u540e\u6c47\u7f16\u6587\u4ef6\u62a5\u9519\uff0c\u6253\u5f00\u9b54\u6cd5\u68d2 - Asm - Assembler Option\u4e2d\u9009\u62e9Auto Select\u3002 \u5bf9\u4e8eARM Compiler6.11\u4ee5\u4e0b\u7684\u7248\u672c\uff0cARMClang\u4e0d\u652f\u6301ARM\u8bed\u6cd5\u7684\u6c47\u7f16\u6587\u4ef6\uff0cEIDE\u4e3a\u4e86\u517c\u5bb9\u6027\u8003\u8651\u6ca1\u6709\u63d0\u4f9barmclang(Arm Syntax)\u9009\u9879\u3002EIDE\u4e0b\u9762\u7684\u65b9\u6cd5\u914d\u7f6e \u5982\u679c\u4f7f\u7528arm-asm\u7f16\u8bd1\uff0c\u4f1a\u629b\u51fa\u4e00\u4e2a Warning: A1950W: The legacy armasm assembler is deprecated. Consider using the armclang integrated assembler instead. \u610f\u601d\u610f\u601d\u5c31\u662f\u8003\u8651\u5347\u7ea7\u7f16\u8bd1\u5668\uff0c\u5728\u6c47\u7f16\u53c2\u6570\u4e2d\u8f93\u5165 --diag_suppress=1950 \u53ef\u4ee5\u7981\u7528\u8fd9\u4e2a\u8b66\u544a\uff1a \u6ce8\u610f\uff1a\u629b\u51fawarning\u518d\u8003\u8651\u6dfb\u52a0\u53c2\u6570\uff0cKeil\u4e2darmclang\u53ef\u4ee5\u652f\u6301ARM\u8bed\u6cd5\u3002\u5982\u679c\u6ca1\u6709warning\u5c31\u52a0\u7f16\u8bd1\u4f1a\u62a5\u9519 EIDE\u914d\u7f6e Keil\u914d\u7f6e","title":"AC6\u6c47\u7f16\u5668\u8bf4\u660e"},{"location":"STM32/arm_toolchain/#_1","text":"\u6253\u5f00Project - Option for Target 'balabala'\uff08\u9b54\u6cd5\u68d2\uff09\uff0cTarget\u91cc\u7f16\u8bd1\u5668\u9009\u62e9version 6\u6216\u8005V6.xx\uff0cC/C++(AC6)\u9009\u9879\u5361\uff0c\u8fd9\u91cc\u53ef\u4ee5\u914d\u7f6eAC6\u7f16\u8bd1\u5668\u7684\u53c2\u6570\u3002 \u8fd9\u91cc\u4e5f\u5c31\u8bf4\u4e00\u4e0bKeil\u4e2d\u7684\u914d\u7f6e\uff0c\u5177\u4f53\u63a7\u5236\u54ea\u4e9b\u53c2\u6570\u53c2\u89c1\u4e0a\u9762\u7684\u7f16\u8bd1\u5668\u6587\u6863\u3002\u5982\u679c\u9700\u8981\u5199Makefile\u6216Makelist\uff0c\u9700\u8981\u77e5\u9053\u63a7\u5236\u7684\u5230\u5e95\u662f\u54ea\u4e9b\u53c2\u6570\u3002 \u66f4\u591a\u4fe1\u606f\u70b9\u53f3\u4e0b\u89d2Help\u67e5\u9605\u3002","title":"\u7f16\u8bd1\u53c2\u6570"},{"location":"STM32/arm_toolchain/#preprocessor-symbols","text":"\u63a7\u5236 -D \u53c2\u6570\u3002 \u9884\u5904\u7406\u3002Define\u662f\u5b8f\u5b9a\u4e49\uff0c\u8ddf\u5728\u4ee3\u7801\u91cc\u4f7f\u7528 #define \u662f\u4e00\u6837\u7684\u3002\u8fd9\u91cc\u7684\u5b8f\u5b9a\u4e49\u4e3b\u8981\u662f\u9488\u5bf9CMSIS\u90e8\u5206\u3002 USE_HAL_DRIVERS \u610f\u601d\u662f\u4f7f\u7528HAL\u5e93\uff0c\u5982\u679c\u662f\u4f7f\u7528HAL\u5e93\u5219\u7f16\u8bd1HAL\u5e93\u7684\u4ee3\u7801\u3002 \u7b2c\u4e8c\u4e2a\uff0c STM32F429xx \u662f\u5177\u4f53\u82af\u7247\u7684\u7cfb\u5217\uff0cST\u7684HAL\u5e93\u662f\u9488\u5bf9F1,F4,H7\u8fd9\u6837\u6574\u4e2a\u82af\u7247\u5bb6\u65cf\u7684\uff0c\u6bcf\u4e2a\u7cfb\u5217\u7684\u5916\u8bbe\u4e5f\u4e0d\u4e00\u6837\u3002\u6bd4\u5982F407\u67096\u4e2a\u4e32\u53e3\uff0c168M\u7684\u5de5\u4f5c\u4e3b\u9891\uff1b\u800cF429\u67098\u4e2a\u4e32\u53e3\uff0c180M\u5de5\u4f5c\u4e3b\u9891\uff0c\u4e0d\u80fd\u7b80\u5355\u7c97\u66b4\u7684\u628aF429\u7684\u4ee3\u7801\u70e7\u5f55\u5230F407\u4e2d\u3002\u56e0\u6b64\u9700\u8981\u5b9a\u4e49\u82af\u7247\u5230\u5e95\u662f\u4ec0\u4e48\u7cfb\u5217\u7684\uff0c\u4ece\u800c\u5b9a\u4e49\u82af\u7247\u7684\u5916\u8bbe\u8d44\u6e90\u3002\u56fe\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u82af\u7247\u4e2d\u7684\u5404\u79cd\u5916\u8bbe\u90fd\u5b9a\u4e49\u5728\u82af\u7247\u7cfb\u5217\u7684\u5934\u6587\u4ef6\u4e2d\u3002 \u8fd9\u4e2a\u5730\u65b9\u4e5f\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e9b\u5b8f\u5b9a\u4e49\u6765\u6307\u5b9a\u7279\u5b9a\u7684\u7f16\u8bd1\u884c\u4e3a\u3002\u6bd4\u5982\u8981\u4f7f\u7528\u65e7\u7248HAL\u5e93\u7684CAN\u4ee3\u7801\uff0c\u6dfb\u52a0 HAL_CAN_LEGACY_MODULE_ENABLED \u5b8f\u5373\u53ef\u3002","title":"Preprocessor Symbols"},{"location":"STM32/arm_toolchain/#execute-only-code","text":"\u63a7\u5236 -mexecute-only \u53c2\u6570\u3002 \u662f\u6307\u5c06\u4ee3\u7801\u6bb5\u653e\u5728ROM\u7684XOM\u533a\u57df\u3002\u8fd9\u90e8\u5206\u533a\u57df\u53ea\u80fd\u7531CPU\u53bb\u6267\u884c\uff0c\u800c\u4e0d\u80fd\u7528\u5176\u4ed6\u624b\u6bb5\u8bfb\u53d6\u3002\u5f00\u542f\u53ef\u4ee5\u4fdd\u62a4\u56fa\u4ef6\u4e0d\u88ab\u7a83\u53d6\u3002","title":"Execute-only Code"},{"location":"STM32/arm_toolchain/#optimization","text":"\u63a7\u5236 -O \u53c2\u6570\u3002 \u53ef\u4ee5\u901a\u8fc7\u5b83\u6765\u51cf\u5c11\u4ee3\u7801\u4f53\u79ef\u6216\u8005\u63d0\u9ad8\u8fd0\u884c\u6548\u7387\u3002\u4e0b\u9762\u662fARM\u5bf9\u4f18\u5316\u9009\u62e9\u7684\u5efa\u8bae\uff1a \u76ee\u7684 \u4f18\u5316\u7b49\u7ea7 \u66f4\u5c0f\u7684\u4ee3\u7801\u4f53\u79ef Oz, Omin \u66f4\u5feb\u7684\u8fd0\u884c\u901f\u5ea6 O2, O3, Ofast, Omax \u8c03\u8bd5\u4e14\u6ca1\u6709\u4ee3\u7801\u5197\u4f59 O1 \u6e90\u4ee3\u7801\u4e0e\u751f\u6210\u7684\u6c47\u7f16\u7801\u5bf9\u5e94 O0\uff08\u4e0d\u4f18\u5316\uff09 \u66f4\u77ed\u7684\u6784\u5efa\u65f6\u95f4 O0\uff08\u4e0d\u4f18\u5316\uff09 \u5e73\u8861\u4ee3\u7801\u4f53\u79ef\u548c\u8fd0\u884c\u901f\u5ea6 Os \u901f\u5ea6\u548c\u7a7a\u95f4\u8981\u6709\u6240\u53d6\u820d\uff0c\u6839\u636e\u5b9e\u9645\u9700\u6c42\u9009\u62e9\u65f6\u95f4\u6362\u7a7a\u95f4\u8fd8\u662f\u7a7a\u95f4\u6362\u65f6\u95f4\u3002 O0\uff1a\u5c31\u662f\u4e0d\u4f18\u5316\uff0cC\u4ee3\u7801\u4ec0\u4e48\u6837\u5c31\u8f6c\u6362\u6210\u4ec0\u4e48\u6c47\u7f16\u4ee3\u7801\u3002 O1\uff1a\u76f8\u8f83\u4e8eO0\u4f1a\u542f\u7528\u5185\u8054\u51fd\u6570\uff0c\u4f18\u5316\u4e0d\u4f7f\u7528\u7684\u53d8\u91cf\u548c\u51fd\u6570\u3002 O2\uff1a\u76f8\u8f83\u4e8eO1\u4f18\u5316\u5185\u8054\u51fd\u6570\uff0c\u4f18\u5316\u5faa\u73af\u8bed\u53e5\uff08\u4f18\u5316\u5faa\u73af\u8bed\u53e5\u4e3b\u8981\u901a\u8fc7loop unrolling\uff0c\u5faa\u73af\u5c55\u5f00\uff09\uff0c\u4f18\u5316\u5411\u91cf\u3002 loop unrolling\u5faa\u73af\u5c55\u5f00\u662f\u6307\u5c06\u5faa\u73af\u4ee3\u7801\u5c55\u5f00\uff0c\u6bd4\u5982\u4e0b\u9762\u4ee3\u7801\uff1a /* \u4e0d\u7528\u5faa\u73af\u5c55\u5f00 */ for (int i = 0; i < 5; i++) { printf(\"Hello\"); } /* \u5faa\u73af\u5c55\u5f00\u4e4b\u540e */ printf(\"Hello\"); printf(\"Hello\"); printf(\"Hello\"); printf(\"Hello\"); printf(\"Hello\"); \u7ecf\u8fc7\u5faa\u73af\u5c55\u5f00\u4ee5\u540e\uff0c\u5c11\u4e86\u4e00\u4e2a\u53d8\u91cf i \uff0c\u800c\u4e14\u4e5f\u4e0d\u9700\u8981\u5224\u65ad\u5faa\u73af\u6761\u4ef6\uff0c\u5bf9\u4e8eCPU\u6765\u8bf4\u53ef\u4ee5\u51cf\u5c11\u8d44\u6e90\u5f00\u9500\u3002 O3\uff1a\u76f8\u8f83\u4e8eO2\u8fdb\u4e00\u6b65\u4f18\u5316\u5185\u8054\u51fd\u6570\uff0c\u8fdb\u4e00\u6b65\u5faa\u73af\u5c55\u5f00\uff0c\u4f18\u5316\u5411\u91cf\u3002 Os\uff1aOs\u662f\u4e3a\u4e86\u66f4\u5feb\u7684\u8fd0\u884c\u901f\u5ea6\uff0c\u4ece\u800c\u727a\u7272\u7a7a\u95f4\u3002\u4e0eO2\uff0cO3\u76f8\u8fd1\u3002\u76f8\u8f83\u4e8eO3\u4e3b\u8981\u51cf\u5c11\u5185\u8054\u548c\u5faa\u73af\u5c55\u5f00\u3002 Oz\uff1a\u4e0d\u4f7f\u7528LTO\u7684\u524d\u63d0\u4e0b\u51cf\u5c0f\u4ee3\u7801\u4f53\u79ef\u3002\u4ee5\u65f6\u95f4\u6362\u7a7a\u95f4\u3002\u8fd9\u4e2a\u7ea7\u522b\u4e0b\u4f1a\u6839\u636e\u5185\u8054\u51fd\u6570\u7684\u8c03\u7528\u6b21\u6570\u5224\u65ad\u662f\u5426\u4f7f\u7528\u5185\u8054\u3002\u5982\u679c\u4e00\u4e2a\u51fd\u6570\u8c03\u7528\u6b21\u6570\u8f83\u5c11\uff0c\u5185\u8054\u6bd4\u4e0d\u5185\u8054\u7684\u4f53\u79ef\u66f4\u5c0f\uff0c\u90a3\u4e48\u624d\u4f1a\u4f7f\u7528\u5185\u8054\u3002\u7981\u7528\u5faa\u73af\u5c55\u5f00\uff0c\u5411\u91cf\u4f18\u5316\u3002 while \u4f1a\u53d6\u4ee3 do while \u3002\u4f1a\u542f\u7528Outline\uff0c\u4e5f\u5c31\u662f\u5bfb\u627e\u7f16\u8bd1\u4ee5\u540e\u76f8\u540c\u7684\u6c47\u7f16\u4ee3\u7801\uff0c\u53ea\u5b58\u4e00\u6b21\u3002 Omin\uff1a\u548cOz\u76f8\u8fd1\uff0c\u76f8\u8f83\u4e8eOz\u4f1a\u542f\u7528LTO\uff0c\u5220\u9664\u6ca1\u6709\u4f7f\u7528\u7684\u4ee3\u7801\uff0c\u4f18\u5316\u5185\u5b58\u8bbf\u95ee\u3002\u6d88\u9664\u865a\u51fd\u6570\uff08C++\uff09\u3002 Ofast\uff1a\u4e0eO3\u76f8\u8fd1\uff0c\u76f8\u8f83\u4e8eO3\u53ef\u80fd\u4f1a\u589e\u52a0\u4ee3\u7801\u4f53\u79ef\u3002 Omax\uff1a\u6700\u5927\u7a0b\u5ea6\u4f18\u5316\uff0c\u83b7\u5f97\u6700\u5feb\u7684\u8fd0\u884c\u901f\u5ea6\u3002\u4e0d\u4f1a\u4e25\u683c\u68c0\u67e5\u8bed\u6cd5\u9519\u8bef\uff08\u53c2\u7167Strict ANSI C\uff09\u3002 \u4ee5\u4e0b\u9762\u4ee3\u7801\u4e3a\u4f8b\uff0c\u770b\u770bO1\u76f8\u8f83\u4e8eO0\u6709\u4ec0\u4e48\u533a\u522b\uff1a int test() { int x = 10, y = 20; int z; z = x+y; return 0; } O0\u751f\u6210\u7684\u6c47\u7f16\u4ee3\u7801\uff1a test: .fnstart .pad #12 sub sp, sp, #12 mov r0, #10 str r0, [sp, #8] mov r0, #20 str r0, [sp, #4] ldr r0, [sp, #8] add r0, r0, #20 str r0, [sp] mov r0, #0 add sp, sp, #12 bx lr \u9996\u5148\u5c0610\u5b58\u5165\uff0c\u7136\u540e\u518d\u5c0620\u5b58\u5165\uff0c\u76f8\u52a0\uff0c\u6700\u540e\u8fd4\u56de\u3002 O1\u751f\u6210\u7684\u6c47\u7f16\u4ee3\u7801 test: .fnstart movs r0, #0 bx lr \u76f4\u63a5\u5c06r0\u5bc4\u5b58\u5668\u8bbe\u7f6e\u62100\uff0c\u7136\u540e\u8fd4\u56de\u3002 \u7f16\u8bd1\u5668\u53d1\u73b0 test \u51fd\u6570\u4e2d\u76842-4\u884c\u662f\u6ca1\u7528\u7684\uff0c\u76f4\u63a5\u4f18\u5316\u3002 \u5982\u679c\u8fd9\u65f6\u5019\u6211\u4eec\u5355\u6b65\u8c03\u8bd5\uff0c\u53ef\u80fd\u5c31\u770b\u5230\u4ece\u7b2c1\u884c\u76f4\u63a5\u8df3\u5230\u7b2c5\u884c\uff0c\u6240\u4ee5\u8c03\u8bd5\u6700\u597d\u4e0d\u5f00\u4f18\u5316\u3002","title":"Optimization\uff0c\u4f18\u5316\u7b49\u7ea7"},{"location":"STM32/arm_toolchain/#link-time-optimization-one-elf-section-per-function","text":"\u8fd9\u4e24\u4e2a\u9009\u9879\u662f\u9488\u5bf9\u94fe\u63a5\u5668\u7684\u4f18\u5316\u3002 Link-Time Optimization, \u94fe\u63a5\u65f6\u4f18\u5316\uff1a\u63a7\u5236 -flto \u53c2\u6570\u3002\u5728\u94fe\u63a5\u7684\u65f6\u5019\u53ef\u4ee5\u505a\u8bb8\u591a\u4f18\u5316\u3002\u542f\u7528LTO\u4ee5\u540e\u94fe\u63a5\u5668\u4f1a\u5bf9\u6574\u4e2a\u7a0b\u5e8f\u5206\u6790\u662f\u5426\u6709\u53ef\u4ee5\u5185\u8054\u7684\u3001\u6709\u76f8\u540c\u7684\u4ee3\u7801\u53ef\u4ee5\u4f18\u5316\u7684\u3001\u6a21\u5757\u91cc\u6709\u6ca1\u7528\u7684\u51fd\u6570\u6216\u8005\u53d8\u91cf\u7684\uff0c\u7136\u540e\u7edf\u7edf\u4f18\u5316\u6389\u3002\u542f\u7528LTO\u4ee5\u540e\u4f1a\u4f7f\u94fe\u63a5\u65f6\u95f4\u53d8\u957f\u3002 One ELF Section per Function, \u63a7\u5236 -function-sections \u53c2\u6570\u3002\u6bcf\u4e2a\u51fd\u6570\u4e00\u4e2aELF\u6bb5\uff1a MDK\u5bf9\u8fd9\u4e2a\u9009\u9879\u7684\u89e3\u91ca\uff1a The One ELF Section per Function option tells the compiler to put all functions into their own individual ELF sections. This allows the linker to remove unused functions. An ELF code section typically contains the code for a number of functions. The linker is normally only able to remove unused ELF sections, not unused functions. An ELF section can only be removed if all its contents are unused. Therefore, splitting each function into its own ELF section allows the compiler to easily identify which ones are unused, and remove them. Selecting this option increases the time required to compile your code, but results in improved performance. \u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u5f53\u7f16\u8bd1\u5668\u7f16\u4e00\u4e2a\u51fd\u6570\u65f6\uff0c\u4f1a\u628a\u4ed6\u653e\u5230ELF\u6bb5\u91cc\u3002\u5f53\u94fe\u63a5\u5668\u53bb\u94fe\u63a5\u65f6\uff0c\u53ef\u4ee5\u53d1\u73b0\u90a3\u4e9b\u51fd\u6570\u6ca1\u6709\u4f7f\u7528\uff0c\u7136\u540e\u79fb\u9664\u3002","title":"Link-Time Optimization, One ELF Section per Function"},{"location":"STM32/arm_toolchain/#warnings-plain-char-is-signed-language-cc","text":"\u70b9\u5f00Warnings\u4e0b\u62c9\u6846\u53ef\u4ee5\u9009\u62e9\u8b66\u544a\u7b49\u7ea7\uff0c\u9009\u62e9All-warnings\u4f1a\u6709\u8f83\u591a\u7684\u62a5\u9519\uff0c\u4e14\u5927\u591a\u6570\u90fd\u662fHAL\u5e93\u5e95\u5c42\u7684\u62a5\u9519\u3002\u4e0d\u5efa\u8bae\u9009\u62e9No Warnings\uff0c\u8b66\u544a\u662f\u7528\u6765\u68c0\u67e5\u4ee3\u7801\u7684\u6f5c\u5728\u903b\u8f91\u9519\u8bef\u7684\uff0c\u5982\u679c\u9009\u62e9No Warnings\uff0c\u53ef\u80fd\u4f1a\u4ea7\u751f\u9634\u95f4\u95ee\u9898\u3002\u4e5f\u53ef\u4ee5\u4f7f\u7528 -Wno \u81ea\u884c\u5173\u95ed\u90e8\u5206\u8b66\u544a\u3002 Turn Warnings into Errors\uff1a\u628a\u8b66\u544a\u8f6c\u6362\u6210\u9519\u8bef\uff0c\u63a7\u5236 Werror \u53c2\u6570\u3002\u52fe\u9009\u4ee5\u540e\u8b66\u544a\u90fd\u4f1a\u53d8\u6210\u9519\u8bef\uff0c\u7f16\u8bd1\u65e0\u6cd5\u901a\u8fc7\u3002 Plain Char is Signed\uff0c\u5b57\u7b26\u4f7f\u7528\u6709\u7b26\u53f7\u6574\u6570\uff1a\u63a7\u5236 fsigned-char \u53c2\u6570\u3002\u52fe\u9009\u540e\uff0c char \u662f\u6709\u7b26\u53f7\u76841\u5b57\u8282\u6574\u6570\uff0c\u7b49\u540c\u4e8e int8_t \uff1b\u4e0d\u52fe\u9009\u5c31\u662f\u65e0\u7b26\u53f7\u6570\uff0c\u7b49\u540c\u4e8e uint8_t \u3002\u9ed8\u8ba4\u662f\u65e0\u7b26\u53f7\u7684\u3002 Language C/C++, C/C++\u8bed\u8a00\u6807\u51c6\uff1a\u63a7\u5236 -std \u53c2\u6570\u3002\u53ef\u4ee5\u9009\u62e9C/C++\u7f16\u8bd1\u6807\u51c6\u3002\u5efa\u8baeC99\u4ee5\u4e0a\u3002\u5404\u6807\u51c6\u4e4b\u95f4\u7684\u533a\u522b\uff0c\u81ea\u884c\u641c\u7d22\u3002 Keil MDK\u6700\u65b0\u7248\u6700\u9ad8\u652f\u6301\u5230c11(gnu11)\u548cc++17(gnu++ 17)\u3002","title":"Warnings, Plain Char is Signed, Language C/C++"},{"location":"STM32/arm_toolchain/#short-enumswchar-use-rtti-no-auto-includes","text":"Short enums/wchar\uff1a\u77ed\u679a\u4e3e/\u5bbd\u5b57\u7b26\uff0c\u63a7\u5236 fshrot-enums \u548c fshort-wchar \u53c2\u6570\u3002\u542f\u7528\u4ee5\u540e\u53ef\u4ee5\u4f18\u5316\u679a\u4e3e\u7c7b\u578b\u548cwchar\u5b57\u7b26\u53d8\u91cf\uff0c\u51cf\u5c0f\u4ee3\u7801\u4f53\u79ef\u3002 \u77ed\u679a\u4e3e\uff1a\u9ed8\u8ba4\u679a\u4e3e\u7c7b\u578b\u7684\u7c7b\u578b\u90fd\u662f int32_t \uff0c\u6709\u4e9b\u5730\u65b9\u7528\u4e0d\u5230\u8fd9\u4e48\u5927\u7684\u8303\u56f4\u3002\u56e0\u6b64\u7f16\u8bd1\u5668\u53ef\u4ee5\u6839\u636e\u679a\u4e3e\u7684\u503c\u9009\u62e9\u8303\u56f4\u6700\u5c0f\u80fd\u5bb9\u7eb3\u679a\u4e3e\u7684\u7c7b\u578b\u3002\u6bd4\u5982\u4e00\u4e2a\u679a\u4e3e\u7c7b\u578b\u7684\u503c\u6ca1\u6709\u8d85\u8fc7100\u7684\uff0c\u90a3\u4e48\u7f16\u8bd1\u5668\u4f1a\u7ed9\u4ed6\u5206\u914d int8_t \u3002 \u5bbd\u5b57\u7b26 wchar \u662fC++\u5f15\u5165\u7684\u4e3a\u4e86\u5904\u7406\u66f4\u5e7f\u6cdb\u5b57\u7b26\u96c6\u7684\u5b57\u7b26\u53d8\u91cf\u7c7b\u578b\uff0c\u5305\u62ecUnicode\u3002\u6211\u4eec\u90fd\u77e5\u9053\uff0c char \u5360\u4e00\u4e2a\u5b57\u8282\uff0c\u4f46\u662f\u5355\u4e2a char \u53d8\u91cf\u53ea\u80fd\u5904\u7406ASCII\u5b57\u7b26\uff0c\u5904\u7406\u4e0d\u4e86\u8bf8\u5982\u6c49\u5b57\u7b49\u591a\u5b57\u8282\u7684\u5b57\u7b26\u3002\u6240\u4ee5\u5f15\u5165\u4e86 whcar_t \u5173\u952e\u5b57\u7528\u6765\u5904\u7406\u975eASCII\u5b57\u7b26\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e00\u4e2a wchar_t \u5b57\u7b26\u5360\u75284\u4e2a\u5b57\u8282\uff0c\u542f\u7528\u8fd9\u4e2a\u9009\u9879\u4ee5\u540e\u4e00\u4e2a wchar_t \u5b57\u7b26\u5360\u75282\u4e2a\u5b57\u8282\u3002 C++11\u5f15\u5165\u4e86 char16_t \u548c char32_t \u7528\u6765\u6307\u5b9a\u5b57\u7b26\u7684\u5b57\u8282\u3002 PS\uff1a\u5728GB2312\u7f16\u7801\u4e2d\uff0c\u4e00\u4e2a\u6c49\u5b57\u53602\u4e2a\u5b57\u8282\uff1b\u5728UTF-8\u7f16\u7801\u4e2d\uff0c\u4e00\u4e2a\u6c49\u5b57\u53603\u4e2a\u5b57\u8282\u3002 RTTI\uff08Runtime Type Identification\uff09\u8fd0\u884c\u9636\u6bb5\u7c7b\u578b\u8bc6\u522b\uff0c\u63a7\u5236 rtti \u53c2\u6570\u3002C++\u7279\u6027\uff0c\u4e86\u89e3\u5373\u53ef\u3002 No Auto Includes\uff1a\u542f\u7528\u540e\uff0c\u7f16\u8bd1\u5668\u4e0d\u4f1a\u4ece\u82af\u7247\u5b89\u88c5\u7684pack\u5305\u4e2d\u641c\u7d22\u5934\u6587\u4ef6\uff0c\u5fc5\u987b\u81ea\u5df1\u6307\u5b9a\u3002\u8fd9\u91cc\u7684\u5934\u6587\u4ef6\u4e3b\u8981\u662f\u6307\u7684\u82af\u7247\u7684CMSIS\u5305\uff0c\u4ee5F4\u4e3a\u4f8b\uff0c\u5982\u679c\u4e0d\u52fe\u9009\u4f1a\u4ece\u6307\u5b9a\u82af\u7247\u7684DFP\u5305\u4e2d\u5bfb\u627e\u82af\u7247\u7684\u5934\u6587\u4ef6\u3002\u9664\u975e\u9700\u8981\u81ea\u5df1\u6307\u5b9a\u82af\u7247\u7684\u5934\u6587\u4ef6\uff0c\u5426\u5219\u4e0d\u52fe\u9009\u3002 \u4e0b\u9762\u662fAC5\u7279\u6709\u7684\u53c2\u6570\u3002 \u6253\u5f00Project - Option for Target 'balabala'\uff08\u9b54\u6cd5\u68d2\uff09\uff0cTarget\u91cc\u7f16\u8bd1\u5668\u9009\u62e9version 5\u6216\u8005V5.06\uff0cC/C++\u9009\u9879\u5361\uff0c\u8fd9\u91cc\u53ef\u4ee5\u914d\u7f6eAC5\u7f16\u8bd1\u5668\u7684\u53c2\u6570\u3002 \u8fd9\u91cc\u7684\u9009\u9879\u548cAC6\u662f\u5dee\u4e0d\u591a\u7684\uff0c\u4e3b\u8981\u533a\u522b\u51e0\u4e2a\u3002 Strict ANSI C\uff1a\u63a7\u5236 --strict \u53c2\u6570\u3002\u52fe\u9009\u4ee5\u540e\u5c06\u4f1a\u4e25\u683c\u6309\u7167ANSI C\u68c0\u67e5\u8bed\u6cd5\u9519\u8bef\uff0c\u6bd4\u5982\u4e0b\u9762\u7684\u4ee3\u7801\uff1a void * ptr; ptr++; /* GNU\u5141\u8bb8, \u4f46ANSI\u4e0d\u5141\u8bb8 */ \u5305\u62ec\u5f88\u591a asm, typeof, inline \u7b49\u6765\u81eaGNU\u7684\u8bed\u6cd5\u90fd\u65e0\u6cd5\u4f7f\u7528\u3002ANSI C\u5176\u5b9e\u5c31\u662fC89\u6807\u51c6\uff0c\u4e0d\u63a8\u8350\u52fe\u9009\u3002 Enum Container always int\uff1a\u63a7\u5236 --enum_is_int \u53c2\u6570\u3002\u52fe\u9009\u540e\uff0c\u6240\u6709\u679a\u4e3e\u7c7b\u578b\u90fd\u662f int32 \u3002 GNU Extensions\uff1a\u63a7\u5236 --gnu \u53c2\u6570\u3002\u52fe\u9009\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528GNU\u7684\u4e00\u4e9b\u7279\u6027\uff0c\u4f46CMSIS\u4e2d\u5fc5\u987b\u5305\u542b cmsis_gcc.h \u5934\u6587\u4ef6 \u60f3\u4e00\u60f3\u8fd9\u91cc\u4e3a\u4ec0\u4e48\u6ca1\u6709\u94fe\u63a5\u5668\u7684\u9009\u9879\uff0c\u524d\u9762\u6211\u8bf4\u8fc7\uff0c\u4e0b\u9762\u4e5f\u6709\u7b54\u6848\u3002","title":"Short enums/wchar, use RTTI, No Auto Includes"},{"location":"STM32/arm_toolchain/#use-microlib-big-endian-floating-point-hardware","text":"\u8fd9\u4e24\u4e2a\u53c2\u6570\u5728Target\u9009\u9879\u5361\u3002 Use MicroLIB\uff1a\u4f7f\u7528\u5fae\u5e93\uff0c\u52fe\u9009\u540e\u4f1a\u6dfb\u52a0\u4e00\u4e2a __MICROLIB \u5b8f\u5b9a\u4e49\u3002MicroLIB\u662f\u4e3a\u4e86\u51cf\u5c11\u4ee3\u7801\u4f53\u79ef\uff0c\u4f18\u5316\u5355\u7247\u673a\u8fd0\u884c\u6548\u7387\uff0c\u5bf9ANSI\u6807\u51c6\u5e93\u6587\u4ef6\u8fdb\u884c\u4fee\u6539\u548c\u88c1\u526a\u7684\u4e00\u4e2a\u5e93\u3002\u5982\u679c\u4f7f\u7528C++\uff0c\u5fae\u5e93\u5c06\u65e0\u6cd5\u4f7f\u7528\u3002 Big Endian\uff1a\u4f7f\u7528\u5927\u7aef\u5e8f\u3002\u52fe\u9009\u540e\u4ee5\u5927\u7aef\u5e8f\u7684\u65b9\u5f0f\u5b58\u50a8\u548c\u5904\u7406\u6570\u636e\uff0cARM\u67b6\u6784\u7684CPU\u90fd\u652f\u6301\u5927\u7aef\u5e8f\u548c\u5c0f\u7aef\u5e8f\u3002\u4e0b\u9762\u7b80\u5355\u8bf4\u4e00\u4e0b\u5927\u5c0f\u7aef\u5e8f\u7684\u533a\u522b\uff1a \u5bf9\u4e8e\u4e00\u4e2a\u6574\u65701234567890, \u5341\u516d\u8fdb\u5236\u6570\u4e3a0x499602D2. \u5927\u7aef\u5e8f\u5b58\u50a8\u5728\u5185\u5b58\u7684\u6837\u5b50: 49 96 02 D2 \u5c0f\u7aef\u5e8f\u5b58\u50a8\u5728\u5185\u5b58\u7684\u6837\u5b50: D2 02 96 49 \u5927\u7aef\u5e8f\u5bf9\u4eba\u7c7b\u6613\u4e8e\u9605\u8bfb, \u4f46\u662f\u5bf9\u4e8e\u8ba1\u7b97\u673a\u6765\u8bf4\u5c31\u4e0d\u592a\u65b9\u4fbf, \u6bd4\u5982\u8981\u5c06\u8fd9\u4e2a\u6570\u52a01, \u90a3\u4e48\u5c31\u9700\u8981\u627e\u5230\u6700\u540e\u4e00\u4f4d\u7684\u4f4d\u7f6e\u540e\u518d\u52a01. \u800c\u5bf9\u4e8e\u5c0f\u7aef\u5e8f\u6765\u8bf4\u53ea\u9700\u8981\u5728\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u52a01\u5c31\u884c\u4e86, \u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u5c31\u662f\u4e00\u4e2a\u6570\u7684\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e. \u5177\u4f53\u53c2\u89c1 \u7ef4\u57fa\u767e\u79d1 \u3002\u4e00\u822c\u5728\u505a\u6570\u636e\u901a\u4fe1\u65f6\u8981\u6ce8\u610f\u5927\u5c0f\u7aef\u7684\u95ee\u9898\u3002 Float Point Hardware\uff1a\u6d6e\u70b9\u8fd0\u7b97\u786c\u4ef6\uff0c\u63a7\u5236 -mfpu -mfloat-abi \u53c2\u6570\u3002\u9ed8\u8ba4\u4e3aSoft\uff0c\u5373\u4f7f\u7528\u8f6f\u4ef6\u6765\u8ba9CPU\u8ba1\u7b97\u6d6e\u70b9\u6570\u3002\u4f46\u662f\u4f7f\u7528CPU\u8ba1\u7b97\u6d6e\u70b9\u6570\u901f\u5ea6\u4f1a\u6bd4\u8f83\u6162\uff0c\u56e0\u6b64Cortex-M4\u53ca\u66f4\u9ad8\u7684\u5185\u6838\u63d0\u4f9b\u4e86FPU\u6765\u52a0\u901f\u6d6e\u70b9\u8fd0\u7b97\u3002 Cortex-M3\u6ca1\u6709FPU\u3002Cortex-M4\u652f\u6301Single Precision\uff1bCortex-M7\u8fd8\u652f\u6301Double Precision\uff1bCortex-M55\u8fd8\u652f\u6301\u5411\u91cf\u6269\u5c55\u3002","title":"Use MicroLIB, Big Endian, Floating Point Hardware"},{"location":"STM32/arm_toolchain/#_2","text":"Include Paths\u7528\u4e8e\u6307\u5b9a\u7f16\u8bd1\u5668\u5934\u6587\u4ef6\u641c\u7d22\u8def\u5f84\u3002 Misc Controls\u662f\u6307\u5b9a\u7279\u5b9a\u7684\u7f16\u8bd1\u53c2\u6570\uff0c\u6bd4\u5982\u8ba9AC5\u62a5\u9519\u8b66\u544a\u4fe1\u606f\u53d8\u6210\u65e5\u6587\uff08AC5\u53ea\u652f\u6301\u82f1\u8bed\u548c\u65e5\u8bed\uff0c\u6ca1\u6709\u5176\u4ed6\u8bed\u8a00\u5305\u3002\uff09\uff1a \u5f53\u6211\u4eec\u6bcf\u66f4\u6539\u4e00\u4e2a\u7f16\u8bd1\u8bbe\u7f6e\u65f6\uff0cCompiler Control String\u90fd\u4f1a\u53d8\u5316\uff0c\u8fd9\u91cc\u663e\u793a\u7684\u5c31\u662f\u6700\u7ec8Keil\u7ed9\u7f16\u8bd1\u5668\u7684\u53c2\u6570\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u628a\u8fd9\u91cc\u590d\u5236\uff0c\u7528\u547d\u4ee4\u884c\u53bb\u7f16\u8bd1\uff0c\u6548\u679c\u662f\u4e00\u6837\u7684\u3002","title":"\u5305\u542b\u8def\u5f84\u3001\u81ea\u5b9a\u4e49\u7f16\u8bd1\u53c2\u6570"},{"location":"STM32/arm_toolchain/#_3","text":"\u8fd9\u91cc\u6211\u4ee5lvgl stress\u4ee3\u7801\u4e3a\u4f8b\uff0c219\u4e2aC\u6587\u4ef6\uff0c1\u4e2a\u6c47\u7f16\u6587\u4ef6\uff0c\u770b\u770b\u5404\u79cd\u7f16\u8bd1\u7ea7\u522b\u751f\u6210\u7684\u4ee3\u7801\u6709\u4ec0\u4e48\u4e0d\u540c\u3002 STM32F103\u5e73\u53f0\uff0cHAL\u5e93\u7248\u672c1.1.9\uff0cRyzen5 5600H\u5168\u6838\u5fc3\u7f16\u8bd1\uff0c\u6240\u6709\u4ee3\u7801\u5168\u7f16\u8bd1\u3002 AC6.21, C11/C++11, AC5 like warnings\uff0c\u6d4b\u8bd5\u7ed3\u679c \u9009\u9879 RAM\u4f7f\u7528 ROM\u4f7f\u7528 \u6784\u5efa\u65f6\u95f4 O0\uff0c\u5173\u95edLTO\u4e0eOne ELF 37.7KB 453.2KB 10\u79d2 Ofast\uff0c\u5173\u95edLTO\u4e0eOne ELF 37.6KB 359.1KB 12\u79d2 Omin\uff0c\u5173\u95edLTO\u4e0eOne ELF 37.6KB 241.2KB 12\u79d2 Os\uff0c\u5173\u95edLTO\u4e0eOne ELF 37.6KB 289.4KB 12\u79d2 O0\uff0c\u6253\u5f00LTO\u4e0eOne ELF 37.0KB 347.1KB 14\u79d2 Ofast\uff0c\u6253\u5f00LTO\u4e0eOne ELF 37.0KB 368.7KB 21\u79d2 Omin\uff0c\u6253\u5f00LTO\u4e0eOne ELF 37.0KB 180.2KB 15\u79d2 \u6253\u5f00LTO\u4f1a\u4f7f\u94fe\u63a5\u65f6\u95f4\u53d8\u957f\uff0c\u4f46\u80fd\u663e\u8457\u964d\u4f4e\u4ee3\u7801\u4f53\u79ef\u3002 AC5.06, C99, All warnings\uff0c\u6d4b\u8bd5\u7ed3\u679c \u9009\u9879 RAM\u4f7f\u7528 ROM\u4f7f\u7528 \u6784\u5efa\u65f6\u95f4 O0\uff0c\u5173\u95edOne ELF 37.5KB 318.4KB 13\u79d2 O1\uff0c\u5173\u95edOne ELF 37.5KB 264.4KB 13\u79d2 O3\uff0c\u5173\u95edOne ELF 37.5KB 250.5KB 13\u79d2 O0\uff0c\u6253\u5f00One ELF 37.5KB 258.5KB 13\u79d2 O1\uff0c\u6253\u5f00One ELF 37.5KB 218.7KB 13\u79d2 O3\uff0c\u6253\u5f00One ELF 37.5KB 208.0KB 15\u79d2 GCC\u5c06\u7f16\u8bd1\u548c\u94fe\u63a5\u505a\u6210\u4e86\u4e00\u4e2a\u7ec4\u4ef6\uff0c\u6240\u4ee5\u6ca1\u6709LTO\u9009\u9879\u3002LLVM\u662f\u6a21\u5757\u5316\u8bbe\u8ba1\uff0c\u7f16\u8bd1\u548c\u94fe\u63a5\u662f\u4e24\u4e2a\u7ec4\u4ef6\u3002 \u6570\u636e\u4ec5\u4f9b\u53c2\u8003\uff0c\u53ef\u4ee5\u81ea\u884c\u7f16\u8bd1\u4e00\u4e2a\u8f83\u5927\u7684\u5de5\u7a0b\u6d4b\u8bd5\u3002","title":"\u5b9e\u9645\u7f16\u8bd1\u6548\u679c"},{"location":"STM32/arm_toolchain/#debug","text":"\u8fd9\u91cc\u7684\u8c03\u8bd5\u4e0d\u662f\u6307\u6539\u4e00\u4e2a\u53c2\u6570\uff0c\u4e0b\u8fdb\u53bb\uff1b\u7136\u540e\u770b\u73b0\u8c61\uff0c\u7136\u540e\u518d\u6539\u53c2\u6570\uff0c\u518d\u4e0b\u8fdb\u53bb\u3002\u770b\u51fd\u6570\u6709\u6ca1\u6709\u8fdb\uff0c\u51fd\u6570\u54ea\u91cc\u52a0\u4e2a printf \uff0c\u8fd9tm\u53eb\u9524\u5b50\u8c03\u8bd5\uff0c\u4e0d\u5acc\u9ebb\u70e6\u5417\uff1f\u4eba\u5bb6\u8d39\u5c3d\u5fc3\u601d\u5199\u7684\u8c03\u8bd5\u529f\u80fd\u4e0d\u7528\u662f\u5427\uff0c\u975e\u5f97\u6298\u817e\u81ea\u5df1\u3002 \u5982\u4f55\u4f7f\u7528\u8c03\u8bd5\uff0cStep into, Step over\u600e\u4e48\u7528\uff0c\u81ea\u5df1\u7f51\u4e0a\u5b66\uff0c\u8fd9\u91cc\u4e0d\u8bb2\u3002\u8c03\u8bd5\u51e0\u4e2a\u5173\u952e\u7684\u5c31\u662f\u5355\u6b65\u3001\u53cd\u6c47\u7f16\u3001\u67e5\u770b\u5185\u5b58\u6570\u636e\u3001\u67e5\u770b\u5bc4\u5b58\u5668\u6570\u636e\u3002 \u4f7f\u7528Keil\u8c03\u8bd5\u975e\u5e38\u7b80\u5355\uff0c\u7f16\u8bd1\u540e\u70b9\u51fbStart/Stop Debug Session\u5373\u53ef\u8fdb\u5165\u8c03\u8bd5\u3002 \u4f7f\u7528VSCode\u8c03\u8bd5\u9996\u5148\u4e0b\u8f7dgcc for arm toolchain, openocd\uff0c\u7136\u540e\u5c06\u4ed6\u4eec\u6dfb\u52a0\u5230\u73af\u5883\u53d8\u91cf\u4e2d\u3002\u5728Flash Configurations\u4e2d\u9009\u62e9\u4e0b\u8f7d\u5668\u7c7b\u578b\uff0c\u914d\u7f6e\u4e00\u4e0b\u8c03\u8bd5\u5668\u7684\u8bbe\u7f6e\uff08\u6bd4\u5982JLink\u9700\u8981\u9009\u62e9\u82af\u7247\u578b\u53f7\uff09\uff0c\u9009\u62e9 Run(\u8fd0\u884c)-Starting Debugging(\u542f\u52a8\u8c03\u8bd5)\u5373\u53ef\u8fdb\u5165\u8c03\u8bd5\u3002 \u5982\u679c\u8c03\u8bd5\u62a5\u9519\uff0c\u6253\u5f00 \\.vscode\\launch.json \uff0c\u5220\u9664 configurations \u4e2d\u7684\u6240\u6709\u914d\u7f6e\uff0c\u4fdd\u5b58\u3002 \u786e\u4fdd\u8c03\u8bd5\u5668\u9009\u62e9\u6b63\u786e\uff0c\u7136\u540e\u518d\u6309\u4e0bF5\uff0c\u9009\u62e9Cortex-Debug\u8c03\u8bd5\u3002 \u4f7f\u7528STLink\u7684\u8bdd\u8bf7\u4f7f\u7528\u8bf7\u4f7f\u7528OpenOCD, Interface Config\u9009\u62e9stlink-v2.cfg\u3002\u6ce8\u610f\u5de5\u4f5c\u76ee\u5f55\u4e0d\u8981\u6709\u4e2d\u6587\uff0c\u5426\u5219\u8c03\u8bd5\u4f1a\u62a5\u9519\u3002","title":"\u8c03\u8bd5Debug"},{"location":"STM32/arm_toolchain/#_4","text":"\u8fd9\u90e8\u5206\u5185\u5bb9\u8bf7\u89c1\u7f51\u76d8\u91cc\u7684\u300a STM32 MAP\u6587\u4ef6\u6d45\u6790_V1.1.pdf \u300b\uff0c\u6b63\u70b9\u539f\u5b50\u5199\u7684\u633a\u8be6\u7ec6\u7684\u3002","title":"\u7f16\u8bd1\u4fe1\u606f"},{"location":"STM32/arm_toolchain/#ramrom-layout","text":"\u7531\u4e8e\u5355\u7247\u673a\u5185\u90e8\u8d44\u6e90\u5bf8\u571f\u5bf8\u91d1\uff0c\u5982\u679c\u6211\u4eec\u4e0d\u5916\u6302RAM\u3001ROM\u6216\u8005NAND Flash\uff0c\u4ec5\u7247\u4e0a\u7684\u8d44\u6e90\u6765\u8bf4\u662f\u6bd4\u8f83\u5c11\u7684\u3002\u5bf9\u4e8eSTM32F429IGT6\u4e5f\u53ea\u6709256 KB\u7684RAM\u548c1 MB\u7684Flash\u3002\u56e0\u6b64\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u5c31\u4f1a","title":"RAM/ROM Layout"},{"location":"STM32/arm_toolchain/#startup","text":"\u8be6\u89c1\u300a STM32 \u542f\u52a8\u6587\u4ef6\u6d45\u6790_V1.2.pdf \u300b\uff0c\u8fd9\u91cc\u53ea\u8bb2\u4e00\u4e2a\u5730\u65b9\u3002 malloc \u53d8\u91cf\u662f\u5206\u914d\u5728\u5806\u91cc\u7684\uff0c\u51fd\u6570\u8c03\u7528\u9700\u8981\u6808\uff0c\u56e0\u6b64\u5806\u6808\u7684\u5927\u5c0f\u5c31\u4f1a\u5f71\u54cd\u5355\u7247\u673a\u80fd\u5206\u914d\u7684\u53d8\u91cf\u5927\u5c0f\u3001\u51fd\u6570\u8fdb\u51fa\u6808\u3002\u5982\u679c\u4e00\u4e2a\u53d8\u91cf malloc \u5206\u914d\u7684\u7279\u522b\u5927\uff0c\u8d85\u51fa\u4e86\u5806\u7684\u5927\u5c0f\uff0c\u90a3\u4e48\u5c31\u4f1a\u8fd4\u56de NULL \u3002\u5806\u6808\u7684\u5927\u5c0f\u662f\u5728 startup \u4e2d\u7684\u4e0b\u9762\u4e24\u4e2a\u5730\u65b9\u5b9a\u4e49\uff1a Stack_Size \u662f\u6808\u5927\u5c0f\uff0c\u51b3\u5b9a\u51fd\u6570\u5d4c\u5957\u7684\u6df1\u5ea6\u548c\u8c03\u7528\u7684\u5bb9\u91cf\uff1b Heap_Size \u662f\u5806\u5927\u5c0f\uff0c\u51b3\u5b9a\u5206\u914d\u7684\u53d8\u91cf\u5927\u5c0f\u3002\u5355\u4f4d\u4e3a\u5b57\u8282\uff0c\u9ed8\u8ba4\u7684 Stack_Size \u662f 0x0400 \u4e5f\u5c31\u662f1 KB\u5927\u5c0f\uff0c Heap_Size \u662f 0x4000 \u4e5f\u5c31\u662f16 KB\u5927\u5c0f\u3002\u8fd9\u4e2a\u503c\u4e0d\u80fd\u8d85\u8fc7\u5355\u7247\u673a\u7684RAM\u5927\u5c0f\uff0cSTM32F103RCT6\u662f64 KB\u7684RAM\uff0cSTM32F429IGT6\u662f256 KB\u7684RAM\u3002 \u7a0b\u5e8f\u7684\u5c40\u90e8\u53d8\u91cf\u5206\u914d\u5728\u6808\u533a\uff0c\u52a8\u6001\u7533\u8bf7\u7684\u5185\u5b58\u5728\u5806\u533a\uff0c\u5168\u5c40\u53d8\u91cf\u5728\u5168\u5c40\u53d8\u91cf\u533a\uff0c\u53ef\u4ee5\u901a\u8fc7map\u6587\u4ef6\u627e\u5230\u5168\u5c40\u53d8\u91cf\u7684\u5730\u5740\u3002","title":"startup\u542f\u52a8\u6587\u4ef6\u5206\u6790"},{"location":"STM32/arm_toolchain/#boot","text":"\u5360\u4f4d","title":"BOOT"},{"location":"STM32/clang-format/","text":"Clang-format\u662f\u4e00\u4e2a\u914d\u7f6e\u4ee3\u7801\u683c\u5f0f\u5316\u7684\u6587\u4ef6\uff0c\u5b83\u91cc\u9762\u6709\u975e\u5e38\u591a\u7684\u9009\u9879\u53ef\u4ee5\u914d\u7f6e\u3002\u5177\u4f53\u53ef\u4ee5\u53c2\u7167 https://clang.llvm.org/docs/ClangFormatStyleOptions.html VSCode\u4f7f\u7528\u81ea\u5b9a\u4e49Clang-format\u6587\u4ef6 vscode\u9ed8\u8ba4\u662f\u4f7f\u7528LLVM\u4ee3\u7801\u98ce\u683c\u6765\u683c\u5f0f\u5316\u7684\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6211\u4eec\u81ea\u5df1\u7684\u683c\u5f0f\u5316\u914d\u7f6e\u3002 \u6253\u5f00\u5de6\u4e0b\u89d2\u9f7f\u8f6e\uff0c\u70b9\u8bbe\u7f6eSettings\uff0c\u5728\u4e0a\u9762\u7684\u641c\u7d22\u6846\u8f93\u5165Clang format style\u53ef\u4ee5\u627e\u5230\u4e0b\u9762\u7684\u9009\u9879\uff1a \u5728\u6846\u91cc\u8f93\u5165file\u53ef\u4ee5\u4f7f\u7528\u5f53\u524d\u6587\u4ef6\u5939\u4e0b\u7684 clang.format \u6587\u4ef6\u4f5c\u4e3a\u683c\u5f0f\u5316\u914d\u7f6e\uff0c\u4e5f\u53ef\u4ee5\u6307\u5b9a\u914d\u7f6e\u8def\u5f84\u3002\u5efa\u8bae\u8fd9\u91cc\u8f93\u5165file\uff0c\u4fdd\u8bc1\u4ed3\u5e93\u7684\u4ee3\u7801\u98ce\u683c\u7edf\u4e00\u3002 Git\u540c\u6b65\u4ed3\u5e93\u65f6\u4e0d\u8981\u968f\u610f\u4fee\u6539 clang.format \u6587\u4ef6\uff0c\u5426\u5219\u5728commit\u7684\u65f6\u5019\u4f1a\u4ea7\u751f\u5927\u91cf\u7684\u65e0\u7528\u66f4\u6539\u4fe1\u606f\u3002\u5177\u4f53\u4ee3\u7801\u683c\u5f0f\u5316\u53c2\u7167C\u7f16\u7801\u6807\u51c6\u3002 \u5982\u679c\u4e0d\u50cf\u8ba9\u67d0\u6bb5\u4ee3\u7801\u6216\u8005\u6ce8\u91ca\u88ab\u683c\u5f0f\u5316\uff0c\u53ef\u4ee5\u6ce8\u91ca clang-format \u6765\u63a7\u5236\u683c\u5f0f\u5316\u65f6\u7684\u884c\u4e3a\uff1a int a, b, c; a = 1; /* clang-format off */ /* \u5173\u95ed\u683c\u5f0f\u5316, \u7528\"// clang-format off\"\u4e5f\u53ef\u4ee5 */ b=2; c=3; /* clang-format on */ /* \u6253\u5f00\u683c\u5f0f\u5316 */ b = 4; a = 5; /* clang-format off */ a=6; c= 7;","title":"Clang format"},{"location":"STM32/clang-format/#vscodeclang-format","text":"vscode\u9ed8\u8ba4\u662f\u4f7f\u7528LLVM\u4ee3\u7801\u98ce\u683c\u6765\u683c\u5f0f\u5316\u7684\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6211\u4eec\u81ea\u5df1\u7684\u683c\u5f0f\u5316\u914d\u7f6e\u3002 \u6253\u5f00\u5de6\u4e0b\u89d2\u9f7f\u8f6e\uff0c\u70b9\u8bbe\u7f6eSettings\uff0c\u5728\u4e0a\u9762\u7684\u641c\u7d22\u6846\u8f93\u5165Clang format style\u53ef\u4ee5\u627e\u5230\u4e0b\u9762\u7684\u9009\u9879\uff1a \u5728\u6846\u91cc\u8f93\u5165file\u53ef\u4ee5\u4f7f\u7528\u5f53\u524d\u6587\u4ef6\u5939\u4e0b\u7684 clang.format \u6587\u4ef6\u4f5c\u4e3a\u683c\u5f0f\u5316\u914d\u7f6e\uff0c\u4e5f\u53ef\u4ee5\u6307\u5b9a\u914d\u7f6e\u8def\u5f84\u3002\u5efa\u8bae\u8fd9\u91cc\u8f93\u5165file\uff0c\u4fdd\u8bc1\u4ed3\u5e93\u7684\u4ee3\u7801\u98ce\u683c\u7edf\u4e00\u3002 Git\u540c\u6b65\u4ed3\u5e93\u65f6\u4e0d\u8981\u968f\u610f\u4fee\u6539 clang.format \u6587\u4ef6\uff0c\u5426\u5219\u5728commit\u7684\u65f6\u5019\u4f1a\u4ea7\u751f\u5927\u91cf\u7684\u65e0\u7528\u66f4\u6539\u4fe1\u606f\u3002\u5177\u4f53\u4ee3\u7801\u683c\u5f0f\u5316\u53c2\u7167C\u7f16\u7801\u6807\u51c6\u3002 \u5982\u679c\u4e0d\u50cf\u8ba9\u67d0\u6bb5\u4ee3\u7801\u6216\u8005\u6ce8\u91ca\u88ab\u683c\u5f0f\u5316\uff0c\u53ef\u4ee5\u6ce8\u91ca clang-format \u6765\u63a7\u5236\u683c\u5f0f\u5316\u65f6\u7684\u884c\u4e3a\uff1a int a, b, c; a = 1; /* clang-format off */ /* \u5173\u95ed\u683c\u5f0f\u5316, \u7528\"// clang-format off\"\u4e5f\u53ef\u4ee5 */ b=2; c=3; /* clang-format on */ /* \u6253\u5f00\u683c\u5f0f\u5316 */ b = 4; a = 5; /* clang-format off */ a=6; c= 7;","title":"VSCode\u4f7f\u7528\u81ea\u5b9a\u4e49Clang-format\u6587\u4ef6"},{"location":"STM32/git/","text":"Git\u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff0c\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u7ba1\u7406\u548c\u63a7\u5236\u8f6f\u4ef6\u7248\u672c\uff0c\u4e5f\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u8fdb\u884c\u591a\u4eba\u534f\u4f5c\u3002 Git\u662fLinus\u57282005\u5e744\u6708\u53d1\u5e03\u7684\u4e00\u6b3e\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u3002Linus\u5728\u5f00\u53d1Linux\u5185\u6838\u65f6\uff0c\u5acc\u5f03\u5f53\u65f6\u7684\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u53c8\u96be\u7528\u8fd8\u8981\u94b1\u3002\u4e8e\u662f\u81ea\u5df1\u82b1\u4e86\u5341\u5929\u65f6\u95f4\uff0c\u5199\u4e86Git\u7528\u6765Linux\u5f00\u53d1\u3002 Git\u6709Git GUI\uff0c\u53ef\u4ee5\u4ee5\u53ef\u89c6\u5316\u7684\u65b9\u5f0f\u6765\u4f7f\u7528\uff0c\u9f20\u6807\u70b9\u51e0\u4e0b\u5c31\u53ef\u4ee5\u5b8c\u6210pull, commit\u548cpush\u7684\u52a8\u4f5c\uff0c\u6211\u4e5f\u7ecf\u5e38\u7528VSCode\u7684\u7248\u672c\u63a7\u5236\u6765\u63d0\u4ea4\u548c\u4e0a\u4f20\u4ee3\u7801\u3002\u9f20\u6807\u70b9\u51e0\u4e0b\u786e\u5b9e\u6bd4\u6572\u547d\u4ee4\u65b9\u4fbf\u3002\u4f46\u6211\u5efa\u8bae\u5927\u5bb6\u5fc5\u987b\u5b66\u4f1a\u547d\u4ee4\u884c\u7684\u64cd\u4f5c\uff0c\u5728\u4f01\u4e1a\u91cc\u6709\u65f6\u5019\u662f\u6ca1\u6709GUI\u8ba9\u4f60\u7528\u7684\uff0c\u73b0\u5728\u7684\u5927\u591a\u6570\u670d\u52a1\u5668\u90fd\u662f\u4e0d\u4f1a\u5b89\u88c5GUI\u7684\uff0c\u8fd9\u65f6\u5019\u5982\u679c\u4f60\u60f3\u7528\u670d\u52a1\u5668\u63d0\u4ea4\u4ee3\u7801\u7684\u8bdd\u5fc5\u987b\u7528\u547d\u4ee4\u884c\uff0c\u4f60\u6ca1\u5f97\u9009\u3002 \u5c3d\u7ba1\u547d\u4ee4\u884c\u5b66\u8d77\u6765\u5934\u75bc\uff0c\u8fd9\u5f88\u6b63\u5e38\uff0c\u56e0\u4e3aGit\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u5f88Linux\u7684\u4e1c\u897f\uff0c\u4f60\u4e0d\u80fd\u7528Windows\u7684\u90a3\u4e00\u5957\u601d\u60f3\u53bb\u7528\u8fd9\u4e2a\u4e1c\u897f\u3002\u4f46\u662f\u5b66\u4f1a\u4e86\u4ee5\u540e\u4f1a\u611f\u89c9\u5f88\u723d\uff0c\u4f60\u5c31\u4f1a\u53d1\u73b0\u4ee5\u524d\u628a\u538b\u7f29\u5305\u53d1\u6765\u53d1\u53bb\u771f****\u3002 \u8fd9\u91cc\u6709\u4e00\u4e2a\u7f51\u7ad9\uff0c\u73a9\u4e00\u904d\u6211\u76f8\u4fe1\u4f60\u5bf9Git\u7684\u4e86\u89e3\u4e5f\u5c31\u5dee\u4e0d\u591a\u4e86\uff0c https://learngitbranching.js.org/ Git Reference: https://git-scm.com/docs zh-cn: https://git-scm.com/book/zh/v2 \u4e00\u4e9b\u5b66\u4e60\u8d44\u6e90\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u81ea\u5df1\u627e\uff0c\u975e\u5e38\u591a\uff0c\u8fd9\u91cc\u5c31\u4e0d\u8bb2\u4e86\uff1a https://missing-semester-cn.github.io/2020/version-control/ https://www.bilibili.com/video/av802848210/ \u4e3a\u4ec0\u4e48\u4f7f\u7528Git \u4e3e\u4e2a\u5178\u578b\u7684\u4f8b\u5b50\uff0c\u7ed9\u7532\u65b9\u505a\u9879\u76ee\u3002\u5199\u4e86\u4e00\u4e2a\u521d\u7a3f\uff0c\u7532\u65b9\u4e0d\u6ee1\u610f\uff0c\u7136\u540e\u5728\u6b64\u57fa\u7840\u4e0a\u6539\u51fa\u7b2c\u4e8c\u7248\uff0c\u7532\u65b9\u8bf4\u5c0f\u6539\u4e00\u4e0b\u5c31\u884c\u4e86\uff0c\u7136\u540e\u6539\u5230\u7b2cN\u7248\uff0c\u7532\u65b9\u8bf4\u7528\u521d\u7248\u3002\u5047\u5982\u6bcf\u6b21\u6539\u7248\u90fd\u4f1a\u7559\u4e0a\u4e00\u4e2a\u7248\u672c\uff0c\u90a3\u4e48\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u56de\u6eaf\u7248\u672c\u3002\u5982\u679c\u7532\u65b9\u8bf4\u6574\u4f53\u8fd8\u53ef\u4ee5\uff0c\u4f46\u662f\u8981\u64a4\u9500\u4e4b\u524d\u7684\u67d0\u4e2a\u6539\u52a8\uff0c\u90a3\u4e48\u53ef\u4ee5\u67e5\u770b\u6bcf\u6b21\u7684\u66f4\u6539\u8bb0\u5f55\uff0c\u627e\u5230\u540e\u6539\u56de\u3002\u5982\u679c\u662f\u4e00\u4e2a\u591a\u4eba\u9879\u76ee\uff0c\u90a3\u4e48\u53ef\u4ee5\u50cf\u5728\u7ebf\u6587\u6863\u4e00\u6837\u591a\u4eba\u534f\u4f5c\u3002 \u90a3\u4e48\u4ee5\u4e0a\u6240\u8bf4\u7684\u51e0\u70b9\u529f\u80fd\uff0c\u6211\u76f8\u4fe1\u5927\u5bb6\u5982\u679c\u7528\u8fc7\u50cf\u817e\u8baf\u6587\u6863\u3001\u91d1\u5c71\u6587\u6863\u8fd9\u7c7b\u7684\u5728\u7ebf\u6587\u6863\u5de5\u5177\uff0c\u5e94\u8be5\u90fd\u6e05\u695a\u3002\u4f46\u5927\u5bb6\u6709\u6ca1\u6709\u60f3\u8fc7\u4ee3\u7801\u600e\u4e48\u50cf\u5728\u7ebf\u6587\u6863\u4e00\u6837\u6709\u7248\u672c\u56de\u6eaf\u3001\u591a\u4eba\u534f\u4f5c\u5462\uff1f\u96be\u9053\u628a\u4ee3\u7801\u653e\u5728\u4e00\u4e2aWord\u6587\u4ef6\u91cc\uff0c\u7136\u540e\u5927\u5bb6\u521b\u5efa\u4e00\u4e2a\u5728\u7ebf\u6587\u6863\u4e00\u8d77\u5199\uff1f\u53ef\u4e00\u4e2a\u9879\u76ee\u6709\u975e\u5e38\u591a\u7684\u6e90\u6587\u4ef6\uff0c\u7ba1\u7406\u8d77\u6765\u4e5f\u4e0d\u65b9\u4fbf\u3002\u8fd9\u6837\u505a\u663e\u7136\u4e0d\u53ef\u80fd\u3002\u56e0\u6b64\u5bf9\u4e8e\u6e90\u4ee3\u7801\u7684\u7248\u672c\u63a7\u5236\u5de5\u5177\uff0c\u6211\u4eec\u4e00\u822c\u7528Git\u3002 \u90a3\u4e48Git\u4e0eGithub\u53c8\u6709\u4ec0\u4e48\u5173\u7cfb\u5462\uff1f\u5927\u591a\u6570\u4eba\u4f1a\u544a\u8bc9\u4f60\uff1aGit\u662f\u4e00\u4e2a\u7248\u672c\u63a7\u5236\u5de5\u5177\uff0c\u800cGithub\u662f\u4ee3\u7801\u6258\u7ba1\u5e73\u53f0\u3002\u6211\u4f30\u8ba1\u6709\u4eba\u53ef\u80fd\u641e\u4e0d\u6e05\u695a\u8fd9\u8bf4\u7684\u4ec0\u4e48\u73a9\u610f\u3002\u5176\u5b9e\u5f88\u7b80\u5355\uff0cGit\u5c31\u662f\u4f60\u5728\u672c\u5730\u7528\u6765\u4e0a\u4f20\u6216\u8005\u4e0b\u8f7d\u4ee3\u7801\u7684\u5de5\u5177\uff0cGithub\u5c31\u662f\u5b58\u50a8\u6240\u6709\u6e90\u4ee3\u7801\u3001\u4e0a\u4f20\u8bb0\u5f55\u3001\u5386\u53f2\u7248\u672c\u7684\u4e00\u4e2a\u4ed3\u5e93\u3002\u9664\u4e86Github\uff0c\u8fd8\u6709Gitee(\u7801\u4e91)\uff0cGitlab\uff0c\u4e5f\u662f\u548cGithub\u4e00\u6837\u662f\u4ee3\u7801\u6258\u7ba1\u5e73\u53f0\u3002\u5f53\u7136\u4e5f\u53ef\u4ee5\u81ea\u5df1\u7528\u670d\u52a1\u5668\u6216\u8005\u81ea\u5df1\u7684\u7535\u8111\u642d\u5efa\u4e00\u4e2aGit\u670d\u52a1\u5668\uff0c\u90fd\u662f\u53ef\u4ee5\u7684\u3002\u4f7f\u7528\u8d77\u6765\u65e0\u975e\u5c31\u662f\u4ed3\u5e93\u5730\u5740\u4e0d\u4e00\u6837\uff0c\u5176\u4ed6\u90fd\u4e00\u6a21\u4e00\u6837\u3002 \u5927\u591a\u6570\u4eba\u4f1a\u544a\u8bc9\u4f60Git\u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u7684\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff0c\u5206\u5e03\u5f0f\u662f\u4ec0\u4e48\u610f\u601d\u5462\uff0c\u4e5f\u5c31\u662f\u8bf4\u4ee3\u7801\u4e0d\u4f1a\u53ea\u5b58\u5728\u50cfGithub\u6258\u7ba1\u5e73\u53f0\u7684\u4e00\u4e2a\u5730\u65b9\uff0c\u6240\u6709\u4eba\u60f3\u8981\u4e0a\u4f20\u4fee\u6539\u8bb0\u5f55\u5c31\u5148\u628a\u4ed3\u5e93\u7684\u4ee3\u7801\u5168\u90e8\u4e0b\u8f7d\u4e0b\u6765\uff0c\u7136\u540e\u518d\u66f4\u6539\u540e\u4e0a\u4f20\uff0c\u8fd9\u5c31\u662f\u5206\u5e03\u5f0f\u7684\u610f\u4e49\uff0c\u6bcf\u4e2a\u7535\u8111\u90fd\u6709\u4ed3\u5e93\u91cc\u5b8c\u6574\u7684\u6e90\u4ee3\u7801\u3002 \u9664\u4e86\u5206\u5e03\u5f0f\uff0c\u90a3\u6211\u4f30\u8ba1\u4f60\u4e5f\u4e86\u731c\u5230\u4e86\uff0c\u80af\u5b9a\u8fd8\u6709\u4e2a\u96c6\u4e2d\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff08\u4e00\u822c\u7528SVN\uff09\u3002\u90a3\u96c6\u4e2d\u5f0f\u662f\u4ec0\u4e48\u610f\u601d\uff0c\u4e5f\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u6240\u6709\u6e90\u4ee3\u7801\u53ea\u5b58\u50a8\u5728\u4e2d\u5fc3\u4ee3\u7801\u670d\u52a1\u5668\u4e0a\uff0c\u4fee\u6539\u4ee3\u7801\u7684\u65f6\u5019\u53ea\u5728\u672c\u5730\u4e0b\u8f7d\u8fd9\u4e00\u4e2a\u6587\u4ef6\uff0c\u4e0d\u4f1a\u50cfGit\u4e00\u6837\u628a\u6574\u4e2a\u4ed3\u5e93\u4ee3\u7801\u4e0b\u8f7d\u4e0b\u6765\u3002\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\u5b89\u5168\u6027\u5f3a\uff0c\u53ef\u4ee5\u907f\u514d\u6e90\u7801\u6cc4\u6f0f\u3002\u76f8\u8f83\u4e8eGit\uff0cSVN\u53ef\u4ee5\u5f88\u597d\u5730\u63a7\u5236\u6587\u4ef6\u6743\u9650\uff0c\u6bd5\u7adfGit\u662f\u4e3a\u5f00\u6e90\u9879\u76ee\u800c\u8bbe\u8ba1\u7684\u3002 \u63d0\u4ea4\u8bb0\u5f55 \u63d0\u4ea4\u5feb\u7167 \u591a\u4eba\u534f\u4f5c","title":"Git"},{"location":"STM32/git/#git","text":"\u4e3e\u4e2a\u5178\u578b\u7684\u4f8b\u5b50\uff0c\u7ed9\u7532\u65b9\u505a\u9879\u76ee\u3002\u5199\u4e86\u4e00\u4e2a\u521d\u7a3f\uff0c\u7532\u65b9\u4e0d\u6ee1\u610f\uff0c\u7136\u540e\u5728\u6b64\u57fa\u7840\u4e0a\u6539\u51fa\u7b2c\u4e8c\u7248\uff0c\u7532\u65b9\u8bf4\u5c0f\u6539\u4e00\u4e0b\u5c31\u884c\u4e86\uff0c\u7136\u540e\u6539\u5230\u7b2cN\u7248\uff0c\u7532\u65b9\u8bf4\u7528\u521d\u7248\u3002\u5047\u5982\u6bcf\u6b21\u6539\u7248\u90fd\u4f1a\u7559\u4e0a\u4e00\u4e2a\u7248\u672c\uff0c\u90a3\u4e48\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u56de\u6eaf\u7248\u672c\u3002\u5982\u679c\u7532\u65b9\u8bf4\u6574\u4f53\u8fd8\u53ef\u4ee5\uff0c\u4f46\u662f\u8981\u64a4\u9500\u4e4b\u524d\u7684\u67d0\u4e2a\u6539\u52a8\uff0c\u90a3\u4e48\u53ef\u4ee5\u67e5\u770b\u6bcf\u6b21\u7684\u66f4\u6539\u8bb0\u5f55\uff0c\u627e\u5230\u540e\u6539\u56de\u3002\u5982\u679c\u662f\u4e00\u4e2a\u591a\u4eba\u9879\u76ee\uff0c\u90a3\u4e48\u53ef\u4ee5\u50cf\u5728\u7ebf\u6587\u6863\u4e00\u6837\u591a\u4eba\u534f\u4f5c\u3002 \u90a3\u4e48\u4ee5\u4e0a\u6240\u8bf4\u7684\u51e0\u70b9\u529f\u80fd\uff0c\u6211\u76f8\u4fe1\u5927\u5bb6\u5982\u679c\u7528\u8fc7\u50cf\u817e\u8baf\u6587\u6863\u3001\u91d1\u5c71\u6587\u6863\u8fd9\u7c7b\u7684\u5728\u7ebf\u6587\u6863\u5de5\u5177\uff0c\u5e94\u8be5\u90fd\u6e05\u695a\u3002\u4f46\u5927\u5bb6\u6709\u6ca1\u6709\u60f3\u8fc7\u4ee3\u7801\u600e\u4e48\u50cf\u5728\u7ebf\u6587\u6863\u4e00\u6837\u6709\u7248\u672c\u56de\u6eaf\u3001\u591a\u4eba\u534f\u4f5c\u5462\uff1f\u96be\u9053\u628a\u4ee3\u7801\u653e\u5728\u4e00\u4e2aWord\u6587\u4ef6\u91cc\uff0c\u7136\u540e\u5927\u5bb6\u521b\u5efa\u4e00\u4e2a\u5728\u7ebf\u6587\u6863\u4e00\u8d77\u5199\uff1f\u53ef\u4e00\u4e2a\u9879\u76ee\u6709\u975e\u5e38\u591a\u7684\u6e90\u6587\u4ef6\uff0c\u7ba1\u7406\u8d77\u6765\u4e5f\u4e0d\u65b9\u4fbf\u3002\u8fd9\u6837\u505a\u663e\u7136\u4e0d\u53ef\u80fd\u3002\u56e0\u6b64\u5bf9\u4e8e\u6e90\u4ee3\u7801\u7684\u7248\u672c\u63a7\u5236\u5de5\u5177\uff0c\u6211\u4eec\u4e00\u822c\u7528Git\u3002 \u90a3\u4e48Git\u4e0eGithub\u53c8\u6709\u4ec0\u4e48\u5173\u7cfb\u5462\uff1f\u5927\u591a\u6570\u4eba\u4f1a\u544a\u8bc9\u4f60\uff1aGit\u662f\u4e00\u4e2a\u7248\u672c\u63a7\u5236\u5de5\u5177\uff0c\u800cGithub\u662f\u4ee3\u7801\u6258\u7ba1\u5e73\u53f0\u3002\u6211\u4f30\u8ba1\u6709\u4eba\u53ef\u80fd\u641e\u4e0d\u6e05\u695a\u8fd9\u8bf4\u7684\u4ec0\u4e48\u73a9\u610f\u3002\u5176\u5b9e\u5f88\u7b80\u5355\uff0cGit\u5c31\u662f\u4f60\u5728\u672c\u5730\u7528\u6765\u4e0a\u4f20\u6216\u8005\u4e0b\u8f7d\u4ee3\u7801\u7684\u5de5\u5177\uff0cGithub\u5c31\u662f\u5b58\u50a8\u6240\u6709\u6e90\u4ee3\u7801\u3001\u4e0a\u4f20\u8bb0\u5f55\u3001\u5386\u53f2\u7248\u672c\u7684\u4e00\u4e2a\u4ed3\u5e93\u3002\u9664\u4e86Github\uff0c\u8fd8\u6709Gitee(\u7801\u4e91)\uff0cGitlab\uff0c\u4e5f\u662f\u548cGithub\u4e00\u6837\u662f\u4ee3\u7801\u6258\u7ba1\u5e73\u53f0\u3002\u5f53\u7136\u4e5f\u53ef\u4ee5\u81ea\u5df1\u7528\u670d\u52a1\u5668\u6216\u8005\u81ea\u5df1\u7684\u7535\u8111\u642d\u5efa\u4e00\u4e2aGit\u670d\u52a1\u5668\uff0c\u90fd\u662f\u53ef\u4ee5\u7684\u3002\u4f7f\u7528\u8d77\u6765\u65e0\u975e\u5c31\u662f\u4ed3\u5e93\u5730\u5740\u4e0d\u4e00\u6837\uff0c\u5176\u4ed6\u90fd\u4e00\u6a21\u4e00\u6837\u3002 \u5927\u591a\u6570\u4eba\u4f1a\u544a\u8bc9\u4f60Git\u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u7684\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff0c\u5206\u5e03\u5f0f\u662f\u4ec0\u4e48\u610f\u601d\u5462\uff0c\u4e5f\u5c31\u662f\u8bf4\u4ee3\u7801\u4e0d\u4f1a\u53ea\u5b58\u5728\u50cfGithub\u6258\u7ba1\u5e73\u53f0\u7684\u4e00\u4e2a\u5730\u65b9\uff0c\u6240\u6709\u4eba\u60f3\u8981\u4e0a\u4f20\u4fee\u6539\u8bb0\u5f55\u5c31\u5148\u628a\u4ed3\u5e93\u7684\u4ee3\u7801\u5168\u90e8\u4e0b\u8f7d\u4e0b\u6765\uff0c\u7136\u540e\u518d\u66f4\u6539\u540e\u4e0a\u4f20\uff0c\u8fd9\u5c31\u662f\u5206\u5e03\u5f0f\u7684\u610f\u4e49\uff0c\u6bcf\u4e2a\u7535\u8111\u90fd\u6709\u4ed3\u5e93\u91cc\u5b8c\u6574\u7684\u6e90\u4ee3\u7801\u3002 \u9664\u4e86\u5206\u5e03\u5f0f\uff0c\u90a3\u6211\u4f30\u8ba1\u4f60\u4e5f\u4e86\u731c\u5230\u4e86\uff0c\u80af\u5b9a\u8fd8\u6709\u4e2a\u96c6\u4e2d\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff08\u4e00\u822c\u7528SVN\uff09\u3002\u90a3\u96c6\u4e2d\u5f0f\u662f\u4ec0\u4e48\u610f\u601d\uff0c\u4e5f\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u6240\u6709\u6e90\u4ee3\u7801\u53ea\u5b58\u50a8\u5728\u4e2d\u5fc3\u4ee3\u7801\u670d\u52a1\u5668\u4e0a\uff0c\u4fee\u6539\u4ee3\u7801\u7684\u65f6\u5019\u53ea\u5728\u672c\u5730\u4e0b\u8f7d\u8fd9\u4e00\u4e2a\u6587\u4ef6\uff0c\u4e0d\u4f1a\u50cfGit\u4e00\u6837\u628a\u6574\u4e2a\u4ed3\u5e93\u4ee3\u7801\u4e0b\u8f7d\u4e0b\u6765\u3002\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\u5b89\u5168\u6027\u5f3a\uff0c\u53ef\u4ee5\u907f\u514d\u6e90\u7801\u6cc4\u6f0f\u3002\u76f8\u8f83\u4e8eGit\uff0cSVN\u53ef\u4ee5\u5f88\u597d\u5730\u63a7\u5236\u6587\u4ef6\u6743\u9650\uff0c\u6bd5\u7adfGit\u662f\u4e3a\u5f00\u6e90\u9879\u76ee\u800c\u8bbe\u8ba1\u7684\u3002 \u63d0\u4ea4\u8bb0\u5f55 \u63d0\u4ea4\u5feb\u7167 \u591a\u4eba\u534f\u4f5c","title":"\u4e3a\u4ec0\u4e48\u4f7f\u7528Git"},{"location":"STM32/oop/","text":"C\u8bed\u8a00\u662f\u9762\u5411\u8fc7\u7a0b\u7684\u8bed\u8a00\uff0c\u6ca1\u6709\u7c7b\u3001\u5bf9\u8c61\u7684\u6982\u5ff5\u3002 STM32\u662f\u53ef\u4ee5\u4f7f\u7528C++\u7f16\u7a0b\u7684\u3002 \u6709\u5173C++\u7684\u7c7b\u5982\u4f55\u4f7f\u7528\uff0c\u53c2\u89c1 https://www.runoob.com/cplusplus/cpp-classes-objects.html \u3002 \u4e3a\u4ec0\u4e48\u4f7f\u7528C++ \u4e0d\u4f7f\u7528\u7c7b\uff0c\u5982\u679c\u53ea\u7528\u7eafC\uff0c\u6709\u4e9b\u4e1c\u897f\u5c31\u4f1a\u663e\u5f97\u5f88\u9ebb\u70e6\uff0c\u6bd4\u5982PID\uff0c\u9664\u4e86\u53c2\u6570\u4e0d\u4e00\u6837\u5176\u4ed6\u90fd\u662f\u4e00\u6837\u7684\uff0c\u4f46\u662f\u4ecd\u7136\u9700\u8981\u5199 PID1_Init(), PID2_Init(), ..., PIDn_Init() \uff0c\u8fd9\u663e\u5f97\u5f88\u9ebb\u70e6\u3002\u660e\u660e\u90fd\u662f\u4e00\u7c7b\u4e1c\u897f\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u7b80\u5316\u4e00\u4e0b\u5462\u3002\u90a3\u4e48\u6211\u5c31\u53ef\u4ee5\u65b0\u5efa\u4e00\u4e2aPID\u7c7b\uff1a /** * @brief PID\u7c7b, \u53ef\u4ee5\u4e3a\u901f\u5ea6\u73af, \u4e5f\u53ef\u4ee5\u4e3a\u89d2\u5ea6\u73af * */ class PID_Class { private: float kp, ki, kd; /* pid\u4e09\u53c2\u6570 */ ... public: PID_Class(float kp_p, float ki_p, float kd_p); float pid_calc(float target_p, float measure_p); ~PID_Class(); }; \u4f7f\u7528\u53ea\u9700\u8981\uff1a /* \u521b\u5efa\u4e00\u4e2aPID_Class\u5bf9\u8c61 */ PID_Class speed_pid(1000.0f, 2.0f, 0.0f); PID_Class angle_pid(100.0f, 10.0f, 0.0f); /* \u8c03\u7528PID\u8ba1\u7b97 */ float angle_val = get_angle(); float current_spd = angle_pid.pid_calc(1000.0f, angle_val); float speed_val = get_speed(); float spd_out = speed_pid.pid_calc(current_spd, speed_val); set_speed(spd_out); \u5982\u679c\u4f7f\u7528\u7eafC\u8bed\u8a00\uff1a void PID_init1() // \u521d\u59cb\u5316PID { pid[1].Set_electricity = 0; pid[1].Actual_electricity = 0; pid[1].err = 0; pid[1].err_last = 0; pid[1].deadband = 0; // pid.max_err=0; pid[1].electricity = 0; pid[1].electricity_high_limit = 16384; pid[1].electricity_low_limit = -16384; pid[1].integral = 0; pid[1].Kp = 15.5f; // \u53ea\u6709P\u65f6\uff0c\u4e14\u9650\u52366000\u4e3a5.4 pid[1].Ki = 0.0f; // \u6700\u4f73\u4e3a1 pid[1].Kd = 1.9f; } short PID_realize1(short set_Setelectricity, short act_Setelectricity) // PID\u8c03\u8bd5 { pid[1].Set_electricity = set_Setelectricity; pid[1].Actual_electricity = act_Setelectricity; pid[1].err = pid[1].Set_electricity - pid[1].Actual_electricity; if ((pid[1].deadband != 0) && (ABS(pid[1].err) < pid[1].deadband)) // \u5982\u679c\u8bef\u5dee\u5728\u6b7b\u533a\u7684\u8303\u56f4\u5185\uff0c\u5219\u4e0d\u9700\u8981\u518d\u8c03\u8bd5PID return 0; pid[1].integral += pid[1].err; pid[1].electricity = pid[1].Kp * pid[1].err + pid[1].Ki * pid[1].integral + pid[1].Kd * (pid[1].err - pid[1].err_last); // PID\u516c\u5f0f pid[1].err_last = pid[1].err; if (pid[1].electricity <= pid[1].electricity_high_limit && pid[1].electricity >= pid[1].electricity_low_limit) return pid[1].electricity; else if (pid[1].electricity > pid[1].electricity_high_limit) return pid[1].electricity_high_limit; else if (pid[1].electricity < pid[1].electricity_low_limit) return pid[1].electricity_low_limit; else return 0; } void PID_ANGLE_init1() { pid_angle[1].gaol_angle = 0; pid_angle[1].act_angle = 0; pid_angle[1].err = 0; pid_angle[1].err_err = 0; pid_angle[1].err_old = 0; pid_angle[1].POUT = 0; pid_angle[1].IOUT = 0; pid_angle[1].DOUT = 0; pid_angle[1].deadrange = 250; pid_angle[1].OUT = 0; pid_angle[1].P = 100.0f; pid_angle[1].I = 0.001f; pid_angle[1].D = 100.0f; pid_angle[1].high_lim = 10000; pid_angle[1].low_lim = -10000; } float PID_ANGLE_realize1(float gaol, float act) // \u901f\u5ea6\u73af { pid_angle[1].gaol_angle = gaol; pid_angle[1].act_angle = act; pid_angle[1].err = pid_angle[1].gaol_angle - pid_angle[1].act_angle; pid_angle[1].err_err = pid_angle[1].err - pid_angle[1].err_old; pid_angle[1].POUT = pid_angle[1].P * pid_angle[1].err; pid_angle[1].IOUT += pid_angle[1].I * pid_angle[1].err; pid_angle[1].DOUT = pid_angle[1].D * pid_angle[1].err_err; pid_angle[1].OUT = pid_angle[1].POUT + pid_angle[1].IOUT + pid_angle[1].DOUT; pid_angle[1].err_old = pid_angle[1].err; pid_angle[1].OUT = ((pid_angle[1].OUT > pid_angle[1].high_lim) ? (pid_angle[1].high_lim) : ((pid_angle[1].OUT < pid_angle[1].low_lim) ? (pid_angle[1].low_lim) : pid_angle[1].OUT)); if (ABS(pid_angle[1].err) <= pid_angle[1].deadrange) { pid_angle[1].IOUT = 0; pid_angle[1].OUT = 0; } return pid_angle[1].OUT; } PID_init1(); PID_ANGLE_init1(); short angle_val = get_angle(); float current_spd = (float)PID_realize1(1000, angle_val); float speed_val = get_speed(); float spd_out = PID_ANGLE_realize1(current_spd, speed_val); set_speed(spd_out); C++\u5c31\u53ea\u7528\u4e8627\u884c\u4ee3\u7801\uff0cC\u8bed\u8a00\u7528\u4e8687\u884c\uff0c\u90a3\u4e2a\u65b9\u4fbf\u4e0d\u7528\u6211\u591a\u8bf4\u4e86\u5427\u3002\u800c\u4e14C++\u76f8\u8f83\u4e8e\u7eafC\u66f4\u597d\u7ef4\u62a4\u3002 \u8fd9\u91cc\u4e0d\u662f\u8bf4\u4f60\u4e0d\u80fd\u7528C\u8bed\u8a00\uff0c\u5f15\u5165C++\u7684\u76ee\u7684\uff0c\u4e00\u65b9\u9762\u662f\u60f3\u8ba9\u5927\u5bb6\u4e86\u89e3\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\uff0c\u73b0\u5982\u4eca\u5927\u591a\u6570\u8bed\u8a00\u90fd\u662f\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\uff0c\u6bd4\u5982Python\u3001Java\u3001JavaScript\u7b49\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u662f\u4e3a\u4e86\u7b80\u5316\u4ee3\u7801\uff0c\u5927\u5bb6\u5e94\u8be5\u4e5f\u90fd\u770b\u5230\u4e86\uff0c\u5f88\u591a\u91cd\u590d\u7684\u4e1c\u897f\u662f\u53ef\u4ee5\u7b80\u5316\u7684\u3002 \u867d\u7136C\u4e0d\u652f\u6301\u9762\u5411\u5bf9\u8c61\uff0c\u4f46\u4ed6\u4ecd\u7136\u662f\u8bb8\u591a\u64cd\u4f5c\u7cfb\u7edf\u3001\u5e95\u5c42\u8f6f\u4ef6\u7684\u9996\u9009\u8bed\u8a00\u3002Linux\u5185\u6838\u3001Python\u89e3\u91ca\u5668\u3001QEMU\u865a\u62df\u5668\u7b49\u5e95\u5c42\u8f6f\u4ef6\u90fd\u662f\u4f7f\u7528\u7eafC\u8bed\u8a00\u7f16\u5199\u7684\u3002 \u50cfGUI\u8fd9\u7c7b\u79bb\u8ba1\u7b97\u673a\u5e95\u5c42\u6bd4\u8f83\u8fdc\u7684\u7ec4\u4ef6\uff0c\u5982\u679c\u4f7f\u7528\u7eafC\u53bb\u7f16\u5199\u5c31\u663e\u5f97\u6bd4\u8f83\u9ebb\u70e6\uff0c\u6240\u4ee5\u4e0a\u5c42\u5f00\u53d1\u6bd4\u5982\u5b89\u5353\u5f00\u53d1\u3001\u7f51\u7ad9\u5f00\u53d1\u4e2d\u5f88\u5c11\u7528C\u8bed\u8a00\u53bb\u7f16\u5199\u3002\u4f46\u5982\u679c\u8981\u6ce8\u91cd\u6027\u80fd\u4f18\u5316\uff0c\u53ef\u80fd\u5c31\u9700\u8981\u7528C\u53bb\u5199\u4e00\u4e9b\u7ec4\u4ef6\uff0c\u751a\u81f3\u4f7f\u7528\u6c47\u7f16\uff0c\u524d\u7aef\u5f00\u53d1\u90fd\u6709\u53ef\u80fd\u4f7f\u7528webAssembly(\u81ea\u884c\u7ffb\u8bd1)\u3002","title":"Oop"},{"location":"STM32/oop/#c","text":"\u4e0d\u4f7f\u7528\u7c7b\uff0c\u5982\u679c\u53ea\u7528\u7eafC\uff0c\u6709\u4e9b\u4e1c\u897f\u5c31\u4f1a\u663e\u5f97\u5f88\u9ebb\u70e6\uff0c\u6bd4\u5982PID\uff0c\u9664\u4e86\u53c2\u6570\u4e0d\u4e00\u6837\u5176\u4ed6\u90fd\u662f\u4e00\u6837\u7684\uff0c\u4f46\u662f\u4ecd\u7136\u9700\u8981\u5199 PID1_Init(), PID2_Init(), ..., PIDn_Init() \uff0c\u8fd9\u663e\u5f97\u5f88\u9ebb\u70e6\u3002\u660e\u660e\u90fd\u662f\u4e00\u7c7b\u4e1c\u897f\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u7b80\u5316\u4e00\u4e0b\u5462\u3002\u90a3\u4e48\u6211\u5c31\u53ef\u4ee5\u65b0\u5efa\u4e00\u4e2aPID\u7c7b\uff1a /** * @brief PID\u7c7b, \u53ef\u4ee5\u4e3a\u901f\u5ea6\u73af, \u4e5f\u53ef\u4ee5\u4e3a\u89d2\u5ea6\u73af * */ class PID_Class { private: float kp, ki, kd; /* pid\u4e09\u53c2\u6570 */ ... public: PID_Class(float kp_p, float ki_p, float kd_p); float pid_calc(float target_p, float measure_p); ~PID_Class(); }; \u4f7f\u7528\u53ea\u9700\u8981\uff1a /* \u521b\u5efa\u4e00\u4e2aPID_Class\u5bf9\u8c61 */ PID_Class speed_pid(1000.0f, 2.0f, 0.0f); PID_Class angle_pid(100.0f, 10.0f, 0.0f); /* \u8c03\u7528PID\u8ba1\u7b97 */ float angle_val = get_angle(); float current_spd = angle_pid.pid_calc(1000.0f, angle_val); float speed_val = get_speed(); float spd_out = speed_pid.pid_calc(current_spd, speed_val); set_speed(spd_out); \u5982\u679c\u4f7f\u7528\u7eafC\u8bed\u8a00\uff1a void PID_init1() // \u521d\u59cb\u5316PID { pid[1].Set_electricity = 0; pid[1].Actual_electricity = 0; pid[1].err = 0; pid[1].err_last = 0; pid[1].deadband = 0; // pid.max_err=0; pid[1].electricity = 0; pid[1].electricity_high_limit = 16384; pid[1].electricity_low_limit = -16384; pid[1].integral = 0; pid[1].Kp = 15.5f; // \u53ea\u6709P\u65f6\uff0c\u4e14\u9650\u52366000\u4e3a5.4 pid[1].Ki = 0.0f; // \u6700\u4f73\u4e3a1 pid[1].Kd = 1.9f; } short PID_realize1(short set_Setelectricity, short act_Setelectricity) // PID\u8c03\u8bd5 { pid[1].Set_electricity = set_Setelectricity; pid[1].Actual_electricity = act_Setelectricity; pid[1].err = pid[1].Set_electricity - pid[1].Actual_electricity; if ((pid[1].deadband != 0) && (ABS(pid[1].err) < pid[1].deadband)) // \u5982\u679c\u8bef\u5dee\u5728\u6b7b\u533a\u7684\u8303\u56f4\u5185\uff0c\u5219\u4e0d\u9700\u8981\u518d\u8c03\u8bd5PID return 0; pid[1].integral += pid[1].err; pid[1].electricity = pid[1].Kp * pid[1].err + pid[1].Ki * pid[1].integral + pid[1].Kd * (pid[1].err - pid[1].err_last); // PID\u516c\u5f0f pid[1].err_last = pid[1].err; if (pid[1].electricity <= pid[1].electricity_high_limit && pid[1].electricity >= pid[1].electricity_low_limit) return pid[1].electricity; else if (pid[1].electricity > pid[1].electricity_high_limit) return pid[1].electricity_high_limit; else if (pid[1].electricity < pid[1].electricity_low_limit) return pid[1].electricity_low_limit; else return 0; } void PID_ANGLE_init1() { pid_angle[1].gaol_angle = 0; pid_angle[1].act_angle = 0; pid_angle[1].err = 0; pid_angle[1].err_err = 0; pid_angle[1].err_old = 0; pid_angle[1].POUT = 0; pid_angle[1].IOUT = 0; pid_angle[1].DOUT = 0; pid_angle[1].deadrange = 250; pid_angle[1].OUT = 0; pid_angle[1].P = 100.0f; pid_angle[1].I = 0.001f; pid_angle[1].D = 100.0f; pid_angle[1].high_lim = 10000; pid_angle[1].low_lim = -10000; } float PID_ANGLE_realize1(float gaol, float act) // \u901f\u5ea6\u73af { pid_angle[1].gaol_angle = gaol; pid_angle[1].act_angle = act; pid_angle[1].err = pid_angle[1].gaol_angle - pid_angle[1].act_angle; pid_angle[1].err_err = pid_angle[1].err - pid_angle[1].err_old; pid_angle[1].POUT = pid_angle[1].P * pid_angle[1].err; pid_angle[1].IOUT += pid_angle[1].I * pid_angle[1].err; pid_angle[1].DOUT = pid_angle[1].D * pid_angle[1].err_err; pid_angle[1].OUT = pid_angle[1].POUT + pid_angle[1].IOUT + pid_angle[1].DOUT; pid_angle[1].err_old = pid_angle[1].err; pid_angle[1].OUT = ((pid_angle[1].OUT > pid_angle[1].high_lim) ? (pid_angle[1].high_lim) : ((pid_angle[1].OUT < pid_angle[1].low_lim) ? (pid_angle[1].low_lim) : pid_angle[1].OUT)); if (ABS(pid_angle[1].err) <= pid_angle[1].deadrange) { pid_angle[1].IOUT = 0; pid_angle[1].OUT = 0; } return pid_angle[1].OUT; } PID_init1(); PID_ANGLE_init1(); short angle_val = get_angle(); float current_spd = (float)PID_realize1(1000, angle_val); float speed_val = get_speed(); float spd_out = PID_ANGLE_realize1(current_spd, speed_val); set_speed(spd_out); C++\u5c31\u53ea\u7528\u4e8627\u884c\u4ee3\u7801\uff0cC\u8bed\u8a00\u7528\u4e8687\u884c\uff0c\u90a3\u4e2a\u65b9\u4fbf\u4e0d\u7528\u6211\u591a\u8bf4\u4e86\u5427\u3002\u800c\u4e14C++\u76f8\u8f83\u4e8e\u7eafC\u66f4\u597d\u7ef4\u62a4\u3002 \u8fd9\u91cc\u4e0d\u662f\u8bf4\u4f60\u4e0d\u80fd\u7528C\u8bed\u8a00\uff0c\u5f15\u5165C++\u7684\u76ee\u7684\uff0c\u4e00\u65b9\u9762\u662f\u60f3\u8ba9\u5927\u5bb6\u4e86\u89e3\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\uff0c\u73b0\u5982\u4eca\u5927\u591a\u6570\u8bed\u8a00\u90fd\u662f\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\uff0c\u6bd4\u5982Python\u3001Java\u3001JavaScript\u7b49\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u662f\u4e3a\u4e86\u7b80\u5316\u4ee3\u7801\uff0c\u5927\u5bb6\u5e94\u8be5\u4e5f\u90fd\u770b\u5230\u4e86\uff0c\u5f88\u591a\u91cd\u590d\u7684\u4e1c\u897f\u662f\u53ef\u4ee5\u7b80\u5316\u7684\u3002 \u867d\u7136C\u4e0d\u652f\u6301\u9762\u5411\u5bf9\u8c61\uff0c\u4f46\u4ed6\u4ecd\u7136\u662f\u8bb8\u591a\u64cd\u4f5c\u7cfb\u7edf\u3001\u5e95\u5c42\u8f6f\u4ef6\u7684\u9996\u9009\u8bed\u8a00\u3002Linux\u5185\u6838\u3001Python\u89e3\u91ca\u5668\u3001QEMU\u865a\u62df\u5668\u7b49\u5e95\u5c42\u8f6f\u4ef6\u90fd\u662f\u4f7f\u7528\u7eafC\u8bed\u8a00\u7f16\u5199\u7684\u3002 \u50cfGUI\u8fd9\u7c7b\u79bb\u8ba1\u7b97\u673a\u5e95\u5c42\u6bd4\u8f83\u8fdc\u7684\u7ec4\u4ef6\uff0c\u5982\u679c\u4f7f\u7528\u7eafC\u53bb\u7f16\u5199\u5c31\u663e\u5f97\u6bd4\u8f83\u9ebb\u70e6\uff0c\u6240\u4ee5\u4e0a\u5c42\u5f00\u53d1\u6bd4\u5982\u5b89\u5353\u5f00\u53d1\u3001\u7f51\u7ad9\u5f00\u53d1\u4e2d\u5f88\u5c11\u7528C\u8bed\u8a00\u53bb\u7f16\u5199\u3002\u4f46\u5982\u679c\u8981\u6ce8\u91cd\u6027\u80fd\u4f18\u5316\uff0c\u53ef\u80fd\u5c31\u9700\u8981\u7528C\u53bb\u5199\u4e00\u4e9b\u7ec4\u4ef6\uff0c\u751a\u81f3\u4f7f\u7528\u6c47\u7f16\uff0c\u524d\u7aef\u5f00\u53d1\u90fd\u6709\u53ef\u80fd\u4f7f\u7528webAssembly(\u81ea\u884c\u7ffb\u8bd1)\u3002","title":"\u4e3a\u4ec0\u4e48\u4f7f\u7528C++"},{"location":"STM32/stm32_peripherals/","text":"\u5305\u62ec ADC, CAN, DAC, DMA, EXTI, FLASH, FMC(F429), FSMC(F103), GPIO, I2C, I2S, IWDG, PWR, RCC, SPI , TIM, UART, USART, WWDG \uff0c\u638c\u63e1\u8fd9\u4e9b\u5916\u8bbe\u7684\u7528\u6cd5\u5c31\u7b97\u5165\u95e8STM32\u3002\u6bcf\u4e2a\u5916\u8bbe\u7684\u7528\u6cd5\u53c2\u7167STM32 HAL\u5e93\u8bf4\u660e\u3002 \u4e0b\u6587\u7684MCU\u6307\u7684\u5c31\u662f\u5355\u7247\u673a\u3002 ADC, Analog Digital Converter, \u6a21\u62df\u8f6c\u6570\u5b57 \u5c06\u6a21\u62df\u91cf\u8f6c\u6362\u4e3a\u6570\u5b57\u91cf\uff0c\u4e00\u822c\u662f\u7535\u538b\u91cf\u3002\u8bbe\u8ba1\u7535\u8def\u65f6\u9700\u8981\u6ce8\u610fVREF\u3002 CAN, Controller Area Network, \u63a7\u5236\u533a\u57df\u7f51\u7edc \u57fa\u672c\u901a\u4fe1\u534f\u8bae\u4e4b\u4e00\uff0c\u63a7\u5236\u7535\u673a\u591a\u7528\u8fd9\u79cd\u534f\u8bae\u3002 ST\u57282017\u5e74\u5c06HAL\u5e93\u7684CAN\u91cd\u6784\u8fc7\u4e00\u6b21\uff0c\u56e0\u6b64\u9700\u8981\u7279\u522b\u6ce8\u610f\u65e7\u7248HAL\u5e93\u7684\u4ee3\u7801\u9700\u8981\u5b9a\u4e49 HAL_CAN_LEGACY_MODULE_ENABLED \u5b8f\u624d\u53ef\u4f7f\u7528\u65e7\u7248HAL\u5e93\u3002\u65b0\u4ee3\u7801\u5177\u4f53\u53c2\u7167ST\u5b98\u65b9\u7684Release Note\u3002 DAC, Digital Analog Converter, \u6570\u5b57\u8f6c\u6a21\u62df \u4e00\u822c\u7528\u4e8e\u8f93\u51fa\u6a21\u62df\u6ce2\u5f62\uff0c\u5982\u4e09\u89d2\u6ce2\u3001\u6b63\u5f26\u6ce2\u7b49\u3002 DMA, Direct Memory Access, \u76f4\u63a5\u5b58\u50a8\u5668\u8bbf\u95ee \u5c06\u6570\u636e\u4ece\u5916\u8bbe\u548c\u5185\u5b58\u4e4b\u95f4\u4f20\u8f93\uff0c\u5206\u4e3a\u4e09\u4e2a\u65b9\u5411\uff1a\u5916\u8bbe\u5230\u5185\u5b58\uff0c\u5185\u5b58\u5230\u5916\u8bbe\uff0c\u5185\u5b58\u5230\u5185\u5b58\u3002 DMA\u7684\u4f20\u8f93\u662f\u4e0d\u9700\u8981CPU\u53c2\u4e0e\u7684\uff0c\u56e0\u6b64\u4f7f\u7528DMA\u53ef\u4ee5\u964d\u4f4eCPU\u538b\u529b\u3002\u4e00\u822c\u9ad8\u6570\u636e\u91cf\u4f20\u8f93\u9700\u8981\u7528DMA\u3002\u5982\u679c\u4e0d\u4f7f\u7528DMA\uff0c\u9891\u7e41\u7684\u4e2d\u65ad\u8bf7\u6c42\u4f1a\u5360\u7528\u8f83\u9ad8\u7684CPU\u8d44\u6e90\u3002 EXTI, EXTernal Interrupt/event controller, \u5916\u90e8\u4e2d\u65ad/\u4e8b\u4ef6\u63a7\u5236\u5668 EXTI\u5904\u7406\u6765\u81ea\u5916\u90e8\u7684\u4e2d\u65ad\uff0c\u6bd4\u5982IO\u53e3\u7535\u5e73\u53d8\u5316\uff0c\u5206\u4e0a\u5347\u6cbf\u89e6\u53d1\u548c\u4e0b\u964d\u6cbf\u89e6\u53d1\u3002\u5177\u4f53\u53c2\u7167STM32\u5b98\u65b9\u624b\u518c\u3002 Flash, \u5185\u90e8Flash\u64cd\u4f5c stm32\u7684flash\u5730\u5740\u8d77\u59cb\u4e8e 0x0800 0000 \uff0c\u7ed3\u675f\u5730\u5740\u662f 0x0800 0000 \u52a0\u4e0a\u82af\u7247\u5b9e\u9645\u7684flash\u5927\u5c0f\uff0c\u4e0d\u540c\u7684\u82af\u7247flash\u5927\u5c0f\u4e0d\u540c\u3002\u5982\u679c\u4ee3\u7801\u91cf\u8f83\u5c0f\uff0c\u6ca1\u6709\u5916\u6302flash\u82af\u7247\u65f6\uff0c\u53ef\u4ee5\u5229\u7528\u82af\u7247\u5185\u90e8\u7684flash\u5b58\u50a8\u4e9b\u6570\u636e\u3002\u9700\u8981\u6ce8\u610f\u4e0d\u8981\u4e71\u5199\u5165\u6570\u636e\uff0c\u5426\u5219\u4ee3\u7801\u53ef\u80fd\u4f1a\u88ab\u7834\u574f\u3002 \u7247\u4e0aFlash\u548cRAM\u5206\u914d\u53c2\u89c1datasheet\u3002 FMC/FSMC, Flexible (Static) Memory Controller, \u7075\u6d3b(\u9759\u6001)\u5b58\u50a8\u63a7\u5236\u5668 FMC/FSMC\u4e3b\u8981\u7528\u4e8e\u5e76\u884c\u6570\u636e\u4f20\u8f93\u4e0a\uff0c\u6bd4\u5982LCD, SDRAM, NAND/Nor Flash\u7b49\u3002 STM32F103\u53ea\u6709100Pin\u4ee5\u4e0a\u7684\u82af\u7247\u624d\u652f\u6301FSMC\u3002F429/H7\u4e0d\u652f\u6301FSMC\uff0c\u53ea\u652f\u6301FMC\uff0c\u6dfb\u52a0FSMC\u7684\u6587\u4ef6\u7f16\u8bd1\u4f1a\u62a5\u9519\u3002 Static\u662f\u6307\u7684SRAM\u5185\u5b58\uff0c\u8fd8\u6709\u4e00\u79cd\u5185\u5b58\u662fDRAM\u3002\u7531\u4e8e\u5b58\u50a8\u539f\u7406\u4e0d\u540c\uff0cDRAM\u5185\u5b58\u9700\u8981\u4e0d\u65ad\u5237\u65b0\u624d\u80fd\u4fdd\u6301\u6570\u636e\uff0cSRAM\u5219\u4e0d\u7528\u3002 GPIO, General Purpose Input Output, \u901a\u7528\u8f93\u5165/\u8f93\u51fa \u57fa\u672cIO\u53e3\u63a7\u5236\u3002\u63a7\u5236\u5916\u56f4\u8bbe\u5907\u57fa\u672c\u90fd\u901a\u8fc7GPIO\u63a7\u5236\u3002\u9700\u8981\u6ce8\u610fGPIO\u7684\u590d\u7528\u529f\u80fd\uff0c\u8bbe\u8ba1\u786c\u4ef6\u65f6\u8981\u6ce8\u610fIO\u590d\u7528\u3002 I2C(IIC), Inter-Integrated Circuit, \u5185\u90e8\u96c6\u6210\u7535\u8def\u603b\u7ebf \u5e38\u7528\u901a\u8baf\u534f\u8bae\u4e4b\u4e00\uff0c\u4e0d\u5c11\u82af\u7247\u90fd\u901a\u8fc7I2C\u63a5\u53e3\u4e0eMCU\u901a\u4fe1\u3002\u53ef\u4ee5\u4f7f\u7528IO\u53e3\u6a21\u62dfI2C\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528STM32\u81ea\u5e26\u7684\u5e93\u3002 I2S, Inter-IC-Sound, \u5185\u90e8IC\u97f3\u9891\u603b\u7ebf \u98de\u5229\u6d66\u516c\u53f8\u8bbe\u8ba1\u7684\u6570\u5b57\u97f3\u9891\u6570\u636e\u4f20\u8f93\u6807\u51c6\uff0c\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u9a71\u52a8\u5916\u90e8\u97f3\u9891\u82af\u7247\uff0c\u5982WM8978\u3002 IWDG, Independent WatchDoG\uff0c \u72ec\u7acb\u770b\u95e8\u72d7 \u72ec\u7acb\u770b\u95e8\u72d7\u4e00\u822c\u7528\u6765\u68c0\u6d4b\u548c\u89e3\u51b3\u7531\u7a0b\u5e8f\u5f15\u8d77\u7684\u6545\u969c\uff0c\u6bd4\u5982\u4e00\u4e2a\u7a0b\u5e8f\u6b63\u5e38\u8fd0\u884c\u7684\u65f6\u95f4\u662f50ms\uff0c \u5728\u8fd0\u884c\u5b8c\u8fd9\u4e2a\u6bb5\u7a0b\u5e8f\u4e4b\u540e\u7d27\u63a5\u7740\u8fdb\u884c\u5582\u72d7\uff0c\u6211\u4eec\u8bbe\u7f6e\u72ec\u7acb\u770b\u95e8\u72d7\u7684\u5b9a\u65f6\u6ea2\u51fa\u65f6\u95f4\u4e3a60ms\uff0c\u6bd4\u6211\u4eec\u9700\u8981\u76d1\u63a7\u7684\u7a0b\u5e8f50ms\u591a\u4e00\u70b9\uff0c \u5982\u679c\u8d85\u8fc760ms\u8fd8\u6ca1\u6709\u5582\u72d7\uff0c\u90a3\u5c31\u8bf4\u660e\u6211\u4eec\u76d1\u63a7\u7684\u7a0b\u5e8f\u51fa\u6545\u969c\u4e86\uff0c\u8dd1\u98de\u4e86\uff0c\u90a3\u4e48\u5c31\u4f1a\u4ea7\u751f\u7cfb\u7edf\u590d\u4f4d\uff0c\u8ba9\u7a0b\u5e8f\u91cd\u65b0\u8fd0\u884c\u3002 WWDG, Windows WatchDoG, \u7a97\u53e3\u770b\u95e8\u72d7 WWDG\u4e00\u822c\u88ab\u7528\u6765\u76d1\u6d4b\uff0c\u7531\u5916\u90e8\u5e72\u6270\u6216\u4e0d\u53ef\u9884\u89c1\u7684\u903b\u8f91\u6761\u4ef6\u9020\u6210\u7684\u5e94\u7528\u7a0b\u5e8f\u80cc\u79bb\u6b63\u5e38\u7684\u8fd0\u884c\u5e8f\u5217\u800c\u4ea7\u751f\u7684\u8f6f\u4ef6\u6545\u969c\u3002\u6bd4\u5982\u4e00\u4e2a\u7a0b\u5e8f\u6bb5\u6b63\u5e38\u8fd0\u884c\u7684\u65f6\u95f4\u662f50ms\uff0c \u5728\u8fd0\u884c\u5b8c\u8fd9\u4e2a\u6bb5\u7a0b\u5e8f\u4e4b\u540e\u7d27\u63a5\u7740\u8fdb\u884c\u5582\u72d7\uff0c\u5982\u679c\u5728\u89c4\u5b9a\u7684\u65f6\u95f4\u7a97\u53e3\u5185\u8fd8\u6ca1\u6709\u5582\u72d7\uff0c\u90a3\u5c31\u8bf4\u660e\u6211\u4eec\u76d1\u63a7\u7684\u7a0b\u5e8f\u51fa\u6545\u969c\u4e86\uff0c\u8dd1\u98de\u4e86\uff0c\u90a3\u4e48\u5c31\u4f1a\u4ea7\u751f\u7cfb\u7edf\u590d\u4f4d\uff0c\u8ba9\u7a0b\u5e8f\u91cd\u65b0\u8fd0\u884c\u3002 PWR, PoWeR Control, \u7535\u6e90\u63a7\u5236 \u63a7\u5236STM32\u5185\u90e8\u7535\u6e90\u3002\u53ef\u4ee5\u8ba9MCU\u8fdb\u5165\u4f4e\u529f\u8017\u6a21\u5f0f\uff0c\u5305\u62ec\u7761\u7720(Sleep)\u3001\u505c\u673a(Stop)\u548c\u5f85\u673a(Standby)\u6a21\u5f0f\uff0cSTM32L\u7cfb\u5217\u63d0\u4f9b\u7684\u4f4e\u529f\u8017\u6a21\u5f0f\u66f4\u591a\u3002\u5f53MCU\u7a7a\u95f2\u65f6\u53ef\u4ee5\u8fdb\u5165\u4f4e\u529f\u8017\u6a21\u5f0f\uff0c\u8282\u7701\u7535\u91cf\u3002 STM32\u8fd8\u53ef\u4ee5\u68c0\u6d4bVDD\u7535\u538b\uff0c\u5f53\u4f4e\u4e8ePVD\u9608\u503c\u65f6\u89e6\u53d1\u4e2d\u65ad\uff0c\u8bf4\u660e\u53ef\u80fd\u7a81\u7136\u6389\u7535\u4e86\uff0c\u6267\u884c\u7d27\u6025\u5173\u95ed\u4efb\u52a1\u3002 RCC, Reset and Clock Controller, \u590d\u4f4d\u548c\u65f6\u949f\u63a7\u5236\u5668 \u65f6\u949f\u662fMCU\u57fa\u672c\u7ec4\u6210\u4e4b\u4e00\uff0c\u53ef\u4ee5\u628a\u65f6\u949f\u6bd4\u55bb\u6210\u4eba\u7684\u5fc3\u8df3\uff0cMCU\u6bcf\u4e00\u4e2a\u6307\u4ee4\u90fd\u7531\u65f6\u949f\u8c03\u63a7\u3002RCC\u662f\u63a7\u5236\u5916\u8bbe\u3001\u5185\u6838\u7684\u57fa\u672c\u63a7\u5236\u5668\u4e4b\u4e00\uff0c\u6240\u6709\u5916\u8bbe\u90fd\u7531RCC\u63a7\u5236\u3002 \u65f6\u949f\u5206\u914d\u53c2\u89c1STM32\u5b98\u65b9\u624b\u518c\u3002 SPI, Serial Peripheral Interface, \u4e32\u884c\u5916\u8bbe\u63a5\u53e3 \u57fa\u672c\u901a\u4fe1\u534f\u8bae\u4e4b\u4e00\uff0c\u4e0d\u5c11\u82af\u7247\u90fd\u901a\u8fc7SPI\u548cMCU\u901a\u4fe1\u3002\u53ef\u4ee5\u4f7f\u7528IO\u53e3\u6a21\u62dfSPI\uff0c\u4e5f\u53ef\u4ee5\u7528STM32\u81ea\u5e26\u7684\u5e93\u3002 TIM, TIMer, \u5b9a\u65f6\u5668 \u5b9a\u65f6\u5668\u6700\u57fa\u672c\u7684\u529f\u80fd\u5c31\u662f\u6bcf\u9694\u4e00\u4e2a\u56fa\u5b9a\u65f6\u95f4\u8fd0\u884c\u4e00\u6bb5\u4ee3\u7801\uff0c\u9664\u6b64\u4e4b\u5916\u8fd8\u53ef\u4ee5\u914d\u7f6ePWM\u8f93\u51fa\u3001\u8f93\u5165\u6355\u83b7\u3001\u8109\u51b2\u6d4b\u91cf\u3001AB\u76f8\u7f16\u7801\u5668\u8f93\u5165\u7b49\u529f\u80fd\u3002\u5b9a\u65f6\u5668\u5206\u57fa\u672c\u5b9a\u65f6\u5668\u3001\u901a\u7528\u5b9a\u65f6\u5668\u3001\u9ad8\u7ea7\u5b9a\u65f6\u5668\uff0c\u6bcf\u79cd\u5b9a\u65f6\u5668\u7684\u529f\u80fd\u3001\u8ba1\u6570\u8303\u56f4\u90fd\u4e0d\u4e00\u6837\uff0c\u53c2\u8003STM32\u5b98\u65b9\u624b\u518c\u3002 UART, Universal Asynchronous Receiver Transmitter, \u901a\u7528\u5f02\u6b65\u63a5\u6536\u53d1\u9001\u5668 MCU\u901a\u4fe1\u7684\u57fa\u672c\u65b9\u5f0f\u4e4b\u4e00\uff0c\u53ef\u4ee5\u7528\u5b83\u5728\u4e0d\u540c\u5355\u7247\u673a\u3001\u4e0d\u540c\u82af\u7247\u3001\u7535\u8111\u901a\u4fe1\uff0c\u4fd7\u79f0\u4e32\u53e3\u3002\u53ef\u4ee5\u4e0eDMA\u7ed3\u5408\u63d0\u9ad8\u4f20\u8f93\u53ef\u9760\u6027\u3002 USART, Universal Synchronous Asynchronous Receiver Transmitter, \u901a\u7528\u540c\u6b65\u5f02\u6b65\u63a5\u6536\u53d1\u9001\u5668 \u4e0eUART\u7684\u533a\u522b\u5c31\u662f\u591a\u4e86\u540c\u6b65\uff0c\u4f1a\u7b49\u5f85\u53e6\u4e00\u4e2a\u7ec8\u7aef\u5f00\u59cb\u63a5\u6536\u624d\u4f1a\u53d1\u9001\uff0c\u4e5f\u5c31\u662fCTS RTS\u3002\u800cUART\u4e0d\u4f1a\u7ba1\u53e6\u4e00\u4e2a\u7ec8\u7aef\u6709\u6ca1\u6709\u51c6\u5907\u597d\u63a5\u6536\uff0c\u76f4\u63a5\u53d1\u9001\u6570\u636e\u3002STM32\u7684\u4e32\u53e3\u8fd8\u6709CK\u65f6\u949f\u7ebf\u3002\u4e0d\u8fc7\u4e00\u822c\u591a\u7528UART\u3002 I2C\uff0cSPI\u90fd\u662f\u5e26\u4e00\u6839\u65f6\u949f\u7ebf\u7684\uff0c\u8fd9\u4e24\u4e2a\u534f\u8bae\u53ef\u4ee5\u4fdd\u8bc1\u6570\u636e\u4f20\u8f93\u662f\u540c\u6b65\u7684\u3002\u56e0\u6b64\u5b83\u4eec\u6ca1\u6709\u50cf\u4e32\u53e3\u4e00\u6837\u5206\u540c\u6b65\u6216\u8005\u5f02\u6b65\u3002","title":"Stm32 peripherals"},{"location":"STM32/stm32_peripherals/#adc-analog-digital-converter","text":"\u5c06\u6a21\u62df\u91cf\u8f6c\u6362\u4e3a\u6570\u5b57\u91cf\uff0c\u4e00\u822c\u662f\u7535\u538b\u91cf\u3002\u8bbe\u8ba1\u7535\u8def\u65f6\u9700\u8981\u6ce8\u610fVREF\u3002","title":"ADC, Analog Digital Converter, \u6a21\u62df\u8f6c\u6570\u5b57"},{"location":"STM32/stm32_peripherals/#can-controller-area-network","text":"\u57fa\u672c\u901a\u4fe1\u534f\u8bae\u4e4b\u4e00\uff0c\u63a7\u5236\u7535\u673a\u591a\u7528\u8fd9\u79cd\u534f\u8bae\u3002 ST\u57282017\u5e74\u5c06HAL\u5e93\u7684CAN\u91cd\u6784\u8fc7\u4e00\u6b21\uff0c\u56e0\u6b64\u9700\u8981\u7279\u522b\u6ce8\u610f\u65e7\u7248HAL\u5e93\u7684\u4ee3\u7801\u9700\u8981\u5b9a\u4e49 HAL_CAN_LEGACY_MODULE_ENABLED \u5b8f\u624d\u53ef\u4f7f\u7528\u65e7\u7248HAL\u5e93\u3002\u65b0\u4ee3\u7801\u5177\u4f53\u53c2\u7167ST\u5b98\u65b9\u7684Release Note\u3002","title":"CAN, Controller Area Network, \u63a7\u5236\u533a\u57df\u7f51\u7edc"},{"location":"STM32/stm32_peripherals/#dac-digital-analog-converter","text":"\u4e00\u822c\u7528\u4e8e\u8f93\u51fa\u6a21\u62df\u6ce2\u5f62\uff0c\u5982\u4e09\u89d2\u6ce2\u3001\u6b63\u5f26\u6ce2\u7b49\u3002","title":"DAC, Digital Analog Converter, \u6570\u5b57\u8f6c\u6a21\u62df"},{"location":"STM32/stm32_peripherals/#dma-direct-memory-access","text":"\u5c06\u6570\u636e\u4ece\u5916\u8bbe\u548c\u5185\u5b58\u4e4b\u95f4\u4f20\u8f93\uff0c\u5206\u4e3a\u4e09\u4e2a\u65b9\u5411\uff1a\u5916\u8bbe\u5230\u5185\u5b58\uff0c\u5185\u5b58\u5230\u5916\u8bbe\uff0c\u5185\u5b58\u5230\u5185\u5b58\u3002 DMA\u7684\u4f20\u8f93\u662f\u4e0d\u9700\u8981CPU\u53c2\u4e0e\u7684\uff0c\u56e0\u6b64\u4f7f\u7528DMA\u53ef\u4ee5\u964d\u4f4eCPU\u538b\u529b\u3002\u4e00\u822c\u9ad8\u6570\u636e\u91cf\u4f20\u8f93\u9700\u8981\u7528DMA\u3002\u5982\u679c\u4e0d\u4f7f\u7528DMA\uff0c\u9891\u7e41\u7684\u4e2d\u65ad\u8bf7\u6c42\u4f1a\u5360\u7528\u8f83\u9ad8\u7684CPU\u8d44\u6e90\u3002","title":"DMA, Direct Memory Access, \u76f4\u63a5\u5b58\u50a8\u5668\u8bbf\u95ee"},{"location":"STM32/stm32_peripherals/#exti-external-interruptevent-controller","text":"EXTI\u5904\u7406\u6765\u81ea\u5916\u90e8\u7684\u4e2d\u65ad\uff0c\u6bd4\u5982IO\u53e3\u7535\u5e73\u53d8\u5316\uff0c\u5206\u4e0a\u5347\u6cbf\u89e6\u53d1\u548c\u4e0b\u964d\u6cbf\u89e6\u53d1\u3002\u5177\u4f53\u53c2\u7167STM32\u5b98\u65b9\u624b\u518c\u3002","title":"EXTI, EXTernal Interrupt/event controller, \u5916\u90e8\u4e2d\u65ad/\u4e8b\u4ef6\u63a7\u5236\u5668"},{"location":"STM32/stm32_peripherals/#flash-flash","text":"stm32\u7684flash\u5730\u5740\u8d77\u59cb\u4e8e 0x0800 0000 \uff0c\u7ed3\u675f\u5730\u5740\u662f 0x0800 0000 \u52a0\u4e0a\u82af\u7247\u5b9e\u9645\u7684flash\u5927\u5c0f\uff0c\u4e0d\u540c\u7684\u82af\u7247flash\u5927\u5c0f\u4e0d\u540c\u3002\u5982\u679c\u4ee3\u7801\u91cf\u8f83\u5c0f\uff0c\u6ca1\u6709\u5916\u6302flash\u82af\u7247\u65f6\uff0c\u53ef\u4ee5\u5229\u7528\u82af\u7247\u5185\u90e8\u7684flash\u5b58\u50a8\u4e9b\u6570\u636e\u3002\u9700\u8981\u6ce8\u610f\u4e0d\u8981\u4e71\u5199\u5165\u6570\u636e\uff0c\u5426\u5219\u4ee3\u7801\u53ef\u80fd\u4f1a\u88ab\u7834\u574f\u3002 \u7247\u4e0aFlash\u548cRAM\u5206\u914d\u53c2\u89c1datasheet\u3002","title":"Flash, \u5185\u90e8Flash\u64cd\u4f5c"},{"location":"STM32/stm32_peripherals/#fmcfsmc-flexible-static-memory-controller","text":"FMC/FSMC\u4e3b\u8981\u7528\u4e8e\u5e76\u884c\u6570\u636e\u4f20\u8f93\u4e0a\uff0c\u6bd4\u5982LCD, SDRAM, NAND/Nor Flash\u7b49\u3002 STM32F103\u53ea\u6709100Pin\u4ee5\u4e0a\u7684\u82af\u7247\u624d\u652f\u6301FSMC\u3002F429/H7\u4e0d\u652f\u6301FSMC\uff0c\u53ea\u652f\u6301FMC\uff0c\u6dfb\u52a0FSMC\u7684\u6587\u4ef6\u7f16\u8bd1\u4f1a\u62a5\u9519\u3002 Static\u662f\u6307\u7684SRAM\u5185\u5b58\uff0c\u8fd8\u6709\u4e00\u79cd\u5185\u5b58\u662fDRAM\u3002\u7531\u4e8e\u5b58\u50a8\u539f\u7406\u4e0d\u540c\uff0cDRAM\u5185\u5b58\u9700\u8981\u4e0d\u65ad\u5237\u65b0\u624d\u80fd\u4fdd\u6301\u6570\u636e\uff0cSRAM\u5219\u4e0d\u7528\u3002","title":"FMC/FSMC, Flexible (Static) Memory Controller, \u7075\u6d3b(\u9759\u6001)\u5b58\u50a8\u63a7\u5236\u5668"},{"location":"STM32/stm32_peripherals/#gpio-general-purpose-input-output","text":"\u57fa\u672cIO\u53e3\u63a7\u5236\u3002\u63a7\u5236\u5916\u56f4\u8bbe\u5907\u57fa\u672c\u90fd\u901a\u8fc7GPIO\u63a7\u5236\u3002\u9700\u8981\u6ce8\u610fGPIO\u7684\u590d\u7528\u529f\u80fd\uff0c\u8bbe\u8ba1\u786c\u4ef6\u65f6\u8981\u6ce8\u610fIO\u590d\u7528\u3002","title":"GPIO, General Purpose Input Output, \u901a\u7528\u8f93\u5165/\u8f93\u51fa"},{"location":"STM32/stm32_peripherals/#i2ciic-inter-integrated-circuit","text":"\u5e38\u7528\u901a\u8baf\u534f\u8bae\u4e4b\u4e00\uff0c\u4e0d\u5c11\u82af\u7247\u90fd\u901a\u8fc7I2C\u63a5\u53e3\u4e0eMCU\u901a\u4fe1\u3002\u53ef\u4ee5\u4f7f\u7528IO\u53e3\u6a21\u62dfI2C\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528STM32\u81ea\u5e26\u7684\u5e93\u3002","title":"I2C(IIC), Inter-Integrated Circuit, \u5185\u90e8\u96c6\u6210\u7535\u8def\u603b\u7ebf"},{"location":"STM32/stm32_peripherals/#i2s-inter-ic-sound-ic","text":"\u98de\u5229\u6d66\u516c\u53f8\u8bbe\u8ba1\u7684\u6570\u5b57\u97f3\u9891\u6570\u636e\u4f20\u8f93\u6807\u51c6\uff0c\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u9a71\u52a8\u5916\u90e8\u97f3\u9891\u82af\u7247\uff0c\u5982WM8978\u3002","title":"I2S, Inter-IC-Sound, \u5185\u90e8IC\u97f3\u9891\u603b\u7ebf"},{"location":"STM32/stm32_peripherals/#iwdg-independent-watchdog","text":"\u72ec\u7acb\u770b\u95e8\u72d7\u4e00\u822c\u7528\u6765\u68c0\u6d4b\u548c\u89e3\u51b3\u7531\u7a0b\u5e8f\u5f15\u8d77\u7684\u6545\u969c\uff0c\u6bd4\u5982\u4e00\u4e2a\u7a0b\u5e8f\u6b63\u5e38\u8fd0\u884c\u7684\u65f6\u95f4\u662f50ms\uff0c \u5728\u8fd0\u884c\u5b8c\u8fd9\u4e2a\u6bb5\u7a0b\u5e8f\u4e4b\u540e\u7d27\u63a5\u7740\u8fdb\u884c\u5582\u72d7\uff0c\u6211\u4eec\u8bbe\u7f6e\u72ec\u7acb\u770b\u95e8\u72d7\u7684\u5b9a\u65f6\u6ea2\u51fa\u65f6\u95f4\u4e3a60ms\uff0c\u6bd4\u6211\u4eec\u9700\u8981\u76d1\u63a7\u7684\u7a0b\u5e8f50ms\u591a\u4e00\u70b9\uff0c \u5982\u679c\u8d85\u8fc760ms\u8fd8\u6ca1\u6709\u5582\u72d7\uff0c\u90a3\u5c31\u8bf4\u660e\u6211\u4eec\u76d1\u63a7\u7684\u7a0b\u5e8f\u51fa\u6545\u969c\u4e86\uff0c\u8dd1\u98de\u4e86\uff0c\u90a3\u4e48\u5c31\u4f1a\u4ea7\u751f\u7cfb\u7edf\u590d\u4f4d\uff0c\u8ba9\u7a0b\u5e8f\u91cd\u65b0\u8fd0\u884c\u3002","title":"IWDG, Independent WatchDoG\uff0c \u72ec\u7acb\u770b\u95e8\u72d7"},{"location":"STM32/stm32_peripherals/#wwdg-windows-watchdog","text":"WWDG\u4e00\u822c\u88ab\u7528\u6765\u76d1\u6d4b\uff0c\u7531\u5916\u90e8\u5e72\u6270\u6216\u4e0d\u53ef\u9884\u89c1\u7684\u903b\u8f91\u6761\u4ef6\u9020\u6210\u7684\u5e94\u7528\u7a0b\u5e8f\u80cc\u79bb\u6b63\u5e38\u7684\u8fd0\u884c\u5e8f\u5217\u800c\u4ea7\u751f\u7684\u8f6f\u4ef6\u6545\u969c\u3002\u6bd4\u5982\u4e00\u4e2a\u7a0b\u5e8f\u6bb5\u6b63\u5e38\u8fd0\u884c\u7684\u65f6\u95f4\u662f50ms\uff0c \u5728\u8fd0\u884c\u5b8c\u8fd9\u4e2a\u6bb5\u7a0b\u5e8f\u4e4b\u540e\u7d27\u63a5\u7740\u8fdb\u884c\u5582\u72d7\uff0c\u5982\u679c\u5728\u89c4\u5b9a\u7684\u65f6\u95f4\u7a97\u53e3\u5185\u8fd8\u6ca1\u6709\u5582\u72d7\uff0c\u90a3\u5c31\u8bf4\u660e\u6211\u4eec\u76d1\u63a7\u7684\u7a0b\u5e8f\u51fa\u6545\u969c\u4e86\uff0c\u8dd1\u98de\u4e86\uff0c\u90a3\u4e48\u5c31\u4f1a\u4ea7\u751f\u7cfb\u7edf\u590d\u4f4d\uff0c\u8ba9\u7a0b\u5e8f\u91cd\u65b0\u8fd0\u884c\u3002","title":"WWDG, Windows WatchDoG, \u7a97\u53e3\u770b\u95e8\u72d7"},{"location":"STM32/stm32_peripherals/#pwr-power-control","text":"\u63a7\u5236STM32\u5185\u90e8\u7535\u6e90\u3002\u53ef\u4ee5\u8ba9MCU\u8fdb\u5165\u4f4e\u529f\u8017\u6a21\u5f0f\uff0c\u5305\u62ec\u7761\u7720(Sleep)\u3001\u505c\u673a(Stop)\u548c\u5f85\u673a(Standby)\u6a21\u5f0f\uff0cSTM32L\u7cfb\u5217\u63d0\u4f9b\u7684\u4f4e\u529f\u8017\u6a21\u5f0f\u66f4\u591a\u3002\u5f53MCU\u7a7a\u95f2\u65f6\u53ef\u4ee5\u8fdb\u5165\u4f4e\u529f\u8017\u6a21\u5f0f\uff0c\u8282\u7701\u7535\u91cf\u3002 STM32\u8fd8\u53ef\u4ee5\u68c0\u6d4bVDD\u7535\u538b\uff0c\u5f53\u4f4e\u4e8ePVD\u9608\u503c\u65f6\u89e6\u53d1\u4e2d\u65ad\uff0c\u8bf4\u660e\u53ef\u80fd\u7a81\u7136\u6389\u7535\u4e86\uff0c\u6267\u884c\u7d27\u6025\u5173\u95ed\u4efb\u52a1\u3002","title":"PWR, PoWeR Control, \u7535\u6e90\u63a7\u5236"},{"location":"STM32/stm32_peripherals/#rcc-reset-and-clock-controller","text":"\u65f6\u949f\u662fMCU\u57fa\u672c\u7ec4\u6210\u4e4b\u4e00\uff0c\u53ef\u4ee5\u628a\u65f6\u949f\u6bd4\u55bb\u6210\u4eba\u7684\u5fc3\u8df3\uff0cMCU\u6bcf\u4e00\u4e2a\u6307\u4ee4\u90fd\u7531\u65f6\u949f\u8c03\u63a7\u3002RCC\u662f\u63a7\u5236\u5916\u8bbe\u3001\u5185\u6838\u7684\u57fa\u672c\u63a7\u5236\u5668\u4e4b\u4e00\uff0c\u6240\u6709\u5916\u8bbe\u90fd\u7531RCC\u63a7\u5236\u3002 \u65f6\u949f\u5206\u914d\u53c2\u89c1STM32\u5b98\u65b9\u624b\u518c\u3002","title":"RCC, Reset and Clock Controller, \u590d\u4f4d\u548c\u65f6\u949f\u63a7\u5236\u5668"},{"location":"STM32/stm32_peripherals/#spi-serial-peripheral-interface","text":"\u57fa\u672c\u901a\u4fe1\u534f\u8bae\u4e4b\u4e00\uff0c\u4e0d\u5c11\u82af\u7247\u90fd\u901a\u8fc7SPI\u548cMCU\u901a\u4fe1\u3002\u53ef\u4ee5\u4f7f\u7528IO\u53e3\u6a21\u62dfSPI\uff0c\u4e5f\u53ef\u4ee5\u7528STM32\u81ea\u5e26\u7684\u5e93\u3002","title":"SPI, Serial Peripheral Interface, \u4e32\u884c\u5916\u8bbe\u63a5\u53e3"},{"location":"STM32/stm32_peripherals/#tim-timer","text":"\u5b9a\u65f6\u5668\u6700\u57fa\u672c\u7684\u529f\u80fd\u5c31\u662f\u6bcf\u9694\u4e00\u4e2a\u56fa\u5b9a\u65f6\u95f4\u8fd0\u884c\u4e00\u6bb5\u4ee3\u7801\uff0c\u9664\u6b64\u4e4b\u5916\u8fd8\u53ef\u4ee5\u914d\u7f6ePWM\u8f93\u51fa\u3001\u8f93\u5165\u6355\u83b7\u3001\u8109\u51b2\u6d4b\u91cf\u3001AB\u76f8\u7f16\u7801\u5668\u8f93\u5165\u7b49\u529f\u80fd\u3002\u5b9a\u65f6\u5668\u5206\u57fa\u672c\u5b9a\u65f6\u5668\u3001\u901a\u7528\u5b9a\u65f6\u5668\u3001\u9ad8\u7ea7\u5b9a\u65f6\u5668\uff0c\u6bcf\u79cd\u5b9a\u65f6\u5668\u7684\u529f\u80fd\u3001\u8ba1\u6570\u8303\u56f4\u90fd\u4e0d\u4e00\u6837\uff0c\u53c2\u8003STM32\u5b98\u65b9\u624b\u518c\u3002","title":"TIM, TIMer, \u5b9a\u65f6\u5668"},{"location":"STM32/stm32_peripherals/#uart-universal-asynchronous-receiver-transmitter","text":"MCU\u901a\u4fe1\u7684\u57fa\u672c\u65b9\u5f0f\u4e4b\u4e00\uff0c\u53ef\u4ee5\u7528\u5b83\u5728\u4e0d\u540c\u5355\u7247\u673a\u3001\u4e0d\u540c\u82af\u7247\u3001\u7535\u8111\u901a\u4fe1\uff0c\u4fd7\u79f0\u4e32\u53e3\u3002\u53ef\u4ee5\u4e0eDMA\u7ed3\u5408\u63d0\u9ad8\u4f20\u8f93\u53ef\u9760\u6027\u3002","title":"UART, Universal Asynchronous Receiver Transmitter, \u901a\u7528\u5f02\u6b65\u63a5\u6536\u53d1\u9001\u5668"},{"location":"STM32/stm32_peripherals/#usart-universal-synchronous-asynchronous-receiver-transmitter","text":"\u4e0eUART\u7684\u533a\u522b\u5c31\u662f\u591a\u4e86\u540c\u6b65\uff0c\u4f1a\u7b49\u5f85\u53e6\u4e00\u4e2a\u7ec8\u7aef\u5f00\u59cb\u63a5\u6536\u624d\u4f1a\u53d1\u9001\uff0c\u4e5f\u5c31\u662fCTS RTS\u3002\u800cUART\u4e0d\u4f1a\u7ba1\u53e6\u4e00\u4e2a\u7ec8\u7aef\u6709\u6ca1\u6709\u51c6\u5907\u597d\u63a5\u6536\uff0c\u76f4\u63a5\u53d1\u9001\u6570\u636e\u3002STM32\u7684\u4e32\u53e3\u8fd8\u6709CK\u65f6\u949f\u7ebf\u3002\u4e0d\u8fc7\u4e00\u822c\u591a\u7528UART\u3002 I2C\uff0cSPI\u90fd\u662f\u5e26\u4e00\u6839\u65f6\u949f\u7ebf\u7684\uff0c\u8fd9\u4e24\u4e2a\u534f\u8bae\u53ef\u4ee5\u4fdd\u8bc1\u6570\u636e\u4f20\u8f93\u662f\u540c\u6b65\u7684\u3002\u56e0\u6b64\u5b83\u4eec\u6ca1\u6709\u50cf\u4e32\u53e3\u4e00\u6837\u5206\u540c\u6b65\u6216\u8005\u5f02\u6b65\u3002","title":"USART, Universal Synchronous Asynchronous Receiver Transmitter, \u901a\u7528\u540c\u6b65\u5f02\u6b65\u63a5\u6536\u53d1\u9001\u5668"}]}